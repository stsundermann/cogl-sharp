<?xml version="1.0" encoding="UTF-8"?>
<api parser_version="3">
  <namespace name="Cogl" library="cogl">
    <enum name="AttributeType" cname="CoglAttributeType" type="enum" gtype="cogl_attribute_type_get_type">
      <member cname="COGL_ATTRIBUTE_TYPE_BYTE" name="Byte" value="5120"/>
      <member cname="COGL_ATTRIBUTE_TYPE_UNSIGNED_BYTE" name="UnsignedByte" value="5121"/>
      <member cname="COGL_ATTRIBUTE_TYPE_SHORT" name="Short" value="5122"/>
      <member cname="COGL_ATTRIBUTE_TYPE_UNSIGNED_SHORT" name="UnsignedShort" value="5123"/>
      <member cname="COGL_ATTRIBUTE_TYPE_FLOAT" name="Float" value="5126"/>
    </enum>
    <enum name="BitmapError" cname="CoglBitmapError" type="enum" gtype="cogl_bitmap_error_get_type">
      <member cname="COGL_BITMAP_ERROR_FAILED" name="Failed" value="0"/>
      <member cname="COGL_BITMAP_ERROR_UNKNOWN_TYPE" name="UnknownType" value="1"/>
      <member cname="COGL_BITMAP_ERROR_CORRUPT_IMAGE" name="CorruptImage" value="2"/>
    </enum>
    <enum name="BlendStringError" cname="CoglBlendStringError" type="enum" gtype="cogl_blend_string_error_get_type">
      <member cname="COGL_BLEND_STRING_ERROR_PARSE_ERROR" name="ParseError" value="0"/>
      <member cname="COGL_BLEND_STRING_ERROR_ARGUMENT_PARSE_ERROR" name="ArgumentParseError" value="1"/>
      <member cname="COGL_BLEND_STRING_ERROR_INVALID_ERROR" name="InvalidError" value="2"/>
      <member cname="COGL_BLEND_STRING_ERROR_GPU_UNSUPPORTED_ERROR" name="GpuUnsupportedError" value="3"/>
    </enum>
    <enum name="DepthTestFunction" cname="CoglDepthTestFunction" type="enum" gtype="cogl_depth_test_function_get_type">
      <member cname="COGL_DEPTH_TEST_FUNCTION_NEVER" name="Never" value="512"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_LESS" name="Less" value="513"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_EQUAL" name="Equal" value="514"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_LEQUAL" name="Lequal" value="515"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_GREATER" name="Greater" value="516"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_NOTEQUAL" name="Notequal" value="517"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_GEQUAL" name="Gequal" value="518"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_ALWAYS" name="Always" value="519"/>
    </enum>
    <enum name="FilterReturn" cname="CoglFilterReturn" type="enum">
      <member cname="COGL_FILTER_CONTINUE" name="Continue" value="0"/>
      <member cname="COGL_FILTER_REMOVE" name="Remove" value="1"/>
    </enum>
    <enum name="FogMode" cname="CoglFogMode" type="enum" gtype="cogl_fog_mode_get_type">
      <member cname="COGL_FOG_MODE_LINEAR" name="Linear" value="0"/>
      <member cname="COGL_FOG_MODE_EXPONENTIAL" name="Exponential" value="1"/>
      <member cname="COGL_FOG_MODE_EXPONENTIAL_SQUARED" name="ExponentialSquared" value="2"/>
    </enum>
    <enum name="IndicesType" cname="CoglIndicesType" type="enum" gtype="cogl_indices_type_get_type">
      <member cname="COGL_INDICES_TYPE_UNSIGNED_BYTE" name="Byte" value="0"/>
      <member cname="COGL_INDICES_TYPE_UNSIGNED_SHORT" name="Short" value="1"/>
      <member cname="COGL_INDICES_TYPE_UNSIGNED_INT" name="Int" value="2"/>
    </enum>
    <enum name="MaterialAlphaFunc" cname="CoglMaterialAlphaFunc" type="enum" gtype="cogl_material_alpha_func_get_type">
      <member cname="COGL_MATERIAL_ALPHA_FUNC_NEVER" name="Never" value="512"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_LESS" name="Less" value="513"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_EQUAL" name="Equal" value="514"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_LEQUAL" name="Lequal" value="515"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_GREATER" name="Greater" value="516"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_NOTEQUAL" name="Notequal" value="517"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_GEQUAL" name="Gequal" value="518"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_ALWAYS" name="Always" value="519"/>
    </enum>
    <enum name="MaterialFilter" cname="CoglMaterialFilter" type="enum" gtype="cogl_material_filter_get_type">
      <member cname="COGL_MATERIAL_FILTER_NEAREST" name="Nearest" value="9728"/>
      <member cname="COGL_MATERIAL_FILTER_LINEAR" name="Linear" value="9729"/>
      <member cname="COGL_MATERIAL_FILTER_NEAREST_MIPMAP_NEAREST" name="NearestMipmapNearest" value="9984"/>
      <member cname="COGL_MATERIAL_FILTER_LINEAR_MIPMAP_NEAREST" name="LinearMipmapNearest" value="9985"/>
      <member cname="COGL_MATERIAL_FILTER_NEAREST_MIPMAP_LINEAR" name="NearestMipmapLinear" value="9986"/>
      <member cname="COGL_MATERIAL_FILTER_LINEAR_MIPMAP_LINEAR" name="LinearMipmapLinear" value="9987"/>
    </enum>
    <enum name="MaterialLayerType" cname="CoglMaterialLayerType" type="enum" gtype="cogl_material_layer_type_get_type">
      <member cname="COGL_MATERIAL_LAYER_TYPE_TEXTURE" name="Texture" value="0"/>
    </enum>
    <enum name="MaterialWrapMode" cname="CoglMaterialWrapMode" type="enum" gtype="cogl_material_wrap_mode_get_type">
      <member cname="COGL_MATERIAL_WRAP_MODE_AUTOMATIC" name="Automatic" value="519"/>
      <member cname="COGL_MATERIAL_WRAP_MODE_REPEAT" name="Repeat" value="10497"/>
      <member cname="COGL_MATERIAL_WRAP_MODE_CLAMP_TO_EDGE" name="ClampToEdge" value="33071"/>
    </enum>
    <enum name="PixelFormat" cname="CoglPixelFormat" type="enum" gtype="cogl_pixel_format_get_type">
      <member cname="COGL_PIXEL_FORMAT_ANY" name="Any" value="0"/>
      <member cname="COGL_PIXEL_FORMAT_RGB_888" name="Rgb888" value="2"/>
      <member cname="COGL_PIXEL_FORMAT_RGB_565" name="Rgb565" value="4"/>
      <member cname="COGL_PIXEL_FORMAT_YUV" name="Yuv" value="7"/>
      <member cname="COGL_PIXEL_FORMAT_G_8" name="G8" value="8"/>
      <member cname="COGL_PIXEL_FORMAT_RG_88" name="Rg88" value="9"/>
      <member cname="COGL_PIXEL_FORMAT_A_8" name="A8" value="17"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_8888" name="Rgba8888" value="19"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_4444" name="Rgba4444" value="21"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_5551" name="Rgba5551" value="22"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_1010102" name="Rgba1010102" value="29"/>
      <member cname="COGL_PIXEL_FORMAT_BGR_888" name="Bgr888" value="34"/>
      <member cname="COGL_PIXEL_FORMAT_BGRA_8888" name="Bgra8888" value="51"/>
      <member cname="COGL_PIXEL_FORMAT_BGRA_1010102" name="Bgra1010102" value="61"/>
      <member cname="COGL_PIXEL_FORMAT_ARGB_8888" name="Argb8888" value="83"/>
      <member cname="COGL_PIXEL_FORMAT_ARGB_2101010" name="Argb2101010" value="93"/>
      <member cname="COGL_PIXEL_FORMAT_ABGR_8888" name="Abgr8888" value="115"/>
      <member cname="COGL_PIXEL_FORMAT_ABGR_2101010" name="Abgr2101010" value="125"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_8888_PRE" name="Rgba8888Pre" value="147"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_4444_PRE" name="Rgba4444Pre" value="149"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_5551_PRE" name="Rgba5551Pre" value="150"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_1010102_PRE" name="Rgba1010102Pre" value="157"/>
      <member cname="COGL_PIXEL_FORMAT_BGRA_8888_PRE" name="Bgra8888Pre" value="179"/>
      <member cname="COGL_PIXEL_FORMAT_BGRA_1010102_PRE" name="Bgra1010102Pre" value="189"/>
      <member cname="COGL_PIXEL_FORMAT_ARGB_8888_PRE" name="Argb8888Pre" value="211"/>
      <member cname="COGL_PIXEL_FORMAT_ARGB_2101010_PRE" name="Argb2101010Pre" value="221"/>
      <member cname="COGL_PIXEL_FORMAT_ABGR_8888_PRE" name="Abgr8888Pre" value="243"/>
      <member cname="COGL_PIXEL_FORMAT_ABGR_2101010_PRE" name="Abgr2101010Pre" value="253"/>
      <member cname="COGL_PIXEL_FORMAT_DEPTH_32" name="Depth32" value="259"/>
      <member cname="COGL_PIXEL_FORMAT_DEPTH_16" name="Depth16" value="265"/>
      <member cname="COGL_PIXEL_FORMAT_DEPTH_24_STENCIL_8" name="Depth24Stencil8" value="771"/>
    </enum>
    <enum name="RendererError" cname="CoglRendererError" type="enum" gtype="cogl_renderer_error_get_type">
      <member cname="COGL_RENDERER_ERROR_XLIB_DISPLAY_OPEN" name="XlibDisplayOpen" value="0"/>
      <member cname="COGL_RENDERER_ERROR_BAD_CONSTRAINT" name="BadConstraint" value="1"/>
    </enum>
    <enum name="ShaderType" cname="CoglShaderType" type="enum" gtype="cogl_shader_type_get_type">
      <member cname="COGL_SHADER_TYPE_VERTEX" name="Vertex" value="0"/>
      <member cname="COGL_SHADER_TYPE_FRAGMENT" name="Fragment" value="1"/>
    </enum>
    <enum name="SystemError" cname="CoglSystemError" type="enum" gtype="cogl_system_error_get_type">
      <member cname="COGL_SYSTEM_ERROR_UNSUPPORTED" name="CoglSystemErrorUnsupported" value="0"/>
      <member cname="COGL_SYSTEM_ERROR_NO_MEMORY" name="CoglSystemErrorNoMemory" value="1"/>
    </enum>
    <enum name="TextureComponents" cname="CoglTextureComponents" type="enum" gtype="cogl_texture_components_get_type">
      <member cname="COGL_TEXTURE_COMPONENTS_A" name="A" value="1"/>
      <member cname="COGL_TEXTURE_COMPONENTS_RG" name="Rg" value="2"/>
      <member cname="COGL_TEXTURE_COMPONENTS_RGB" name="Rgb" value="3"/>
      <member cname="COGL_TEXTURE_COMPONENTS_RGBA" name="Rgba" value="4"/>
      <member cname="COGL_TEXTURE_COMPONENTS_DEPTH" name="Depth" value="5"/>
    </enum>
    <enum name="TextureError" cname="CoglTextureError" type="enum" gtype="cogl_texture_error_get_type">
      <member cname="COGL_TEXTURE_ERROR_SIZE" name="Size" value="0"/>
      <member cname="COGL_TEXTURE_ERROR_FORMAT" name="Format" value="1"/>
      <member cname="COGL_TEXTURE_ERROR_BAD_PARAMETER" name="BadParameter" value="2"/>
      <member cname="COGL_TEXTURE_ERROR_TYPE" name="Type" value="3"/>
    </enum>
    <enum name="TextureType" cname="CoglTextureType" type="enum" gtype="cogl_texture_type_get_type">
      <member cname="COGL_TEXTURE_TYPE_2D" name="2d" value="0"/>
      <member cname="COGL_TEXTURE_TYPE_3D" name="3d" value="1"/>
      <member cname="COGL_TEXTURE_TYPE_RECTANGLE" name="Rectangle" value="2"/>
    </enum>
    <enum name="VerticesMode" cname="CoglVerticesMode" type="enum" gtype="cogl_vertices_mode_get_type">
      <member cname="COGL_VERTICES_MODE_POINTS" name="Points" value="0"/>
      <member cname="COGL_VERTICES_MODE_LINES" name="Lines" value="1"/>
      <member cname="COGL_VERTICES_MODE_LINE_LOOP" name="LineLoop" value="2"/>
      <member cname="COGL_VERTICES_MODE_LINE_STRIP" name="LineStrip" value="3"/>
      <member cname="COGL_VERTICES_MODE_TRIANGLES" name="Triangles" value="4"/>
      <member cname="COGL_VERTICES_MODE_TRIANGLE_STRIP" name="TriangleStrip" value="5"/>
      <member cname="COGL_VERTICES_MODE_TRIANGLE_FAN" name="TriangleFan" value="6"/>
    </enum>
    <enum name="Winding" cname="CoglWinding" type="enum" gtype="cogl_winding_get_type">
      <member cname="COGL_WINDING_CLOCKWISE" name="Clockwise" value="0"/>
      <member cname="COGL_WINDING_COUNTER_CLOCKWISE" name="CounterClockwise" value="1"/>
    </enum>
    <enum name="WinsysFeature" cname="CoglWinsysFeature" type="enum" gtype="cogl_winsys_feature_get_type">
      <member cname="COGL_WINSYS_FEATURE_MULTIPLE_ONSCREEN" name="MultipleOnscreen" value="0"/>
      <member cname="COGL_WINSYS_FEATURE_SWAP_THROTTLE" name="SwapThrottle" value="1"/>
      <member cname="COGL_WINSYS_FEATURE_VBLANK_COUNTER" name="VblankCounter" value="2"/>
      <member cname="COGL_WINSYS_FEATURE_VBLANK_WAIT" name="VblankWait" value="3"/>
      <member cname="COGL_WINSYS_FEATURE_TEXTURE_FROM_PIXMAP" name="TextureFromPixmap" value="4"/>
      <member cname="COGL_WINSYS_FEATURE_SWAP_BUFFERS_EVENT" name="SwapBuffersEvent" value="5"/>
      <member cname="COGL_WINSYS_FEATURE_SWAP_REGION" name="SwapRegion" value="6"/>
      <member cname="COGL_WINSYS_FEATURE_SWAP_REGION_THROTTLE" name="SwapRegionThrottle" value="7"/>
      <member cname="COGL_WINSYS_FEATURE_SWAP_REGION_SYNCHRONIZED" name="SwapRegionSynchronized" value="8"/>
      <member cname="COGL_WINSYS_FEATURE_BUFFER_AGE" name="BufferAge" value="9"/>
      <member cname="COGL_WINSYS_FEATURE_SYNC_AND_COMPLETE_EVENT" name="SyncAndCompleteEvent" value="10"/>
      <member cname="COGL_WINSYS_FEATURE_N_FEATURES" name="NFeatures" value="11"/>
    </enum>
    <enum name="BufferBit" cname="CoglBufferBit" type="flags" gtype="cogl_buffer_bit_get_type">
      <member cname="COGL_BUFFER_BIT_COLOR" name="Color" value="1"/>
      <member cname="COGL_BUFFER_BIT_DEPTH" name="Depth" value="2"/>
      <member cname="COGL_BUFFER_BIT_STENCIL" name="Stencil" value="4"/>
    </enum>
    <enum name="BufferTarget" cname="CoglBufferTarget" type="flags" gtype="cogl_buffer_target_get_type">
      <member cname="COGL_WINDOW_BUFFER" name="WindowBuffer" value="2"/>
      <member cname="COGL_OFFSCREEN_BUFFER" name="OffscreenBuffer" value="4"/>
    </enum>
    <enum name="ColorMask" cname="CoglColorMask" type="flags" gtype="cogl_color_mask_get_type">
      <member cname="COGL_COLOR_MASK_NONE" name="None" value="0"/>
      <member cname="COGL_COLOR_MASK_RED" name="Red" value="1"/>
      <member cname="COGL_COLOR_MASK_GREEN" name="Green" value="2"/>
      <member cname="COGL_COLOR_MASK_BLUE" name="Blue" value="4"/>
      <member cname="COGL_COLOR_MASK_ALPHA" name="Alpha" value="8"/>
      <member cname="COGL_COLOR_MASK_ALL" name="All" value="15"/>
    </enum>
    <enum name="FeatureFlags" cname="CoglFeatureFlags" type="flags" gtype="cogl_feature_flags_get_type">
      <member cname="COGL_FEATURE_TEXTURE_RECTANGLE" name="TextureRectangle" value="2"/>
      <member cname="COGL_FEATURE_TEXTURE_NPOT" name="TextureNpot" value="4"/>
      <member cname="COGL_FEATURE_TEXTURE_YUV" name="TextureYuv" value="8"/>
      <member cname="COGL_FEATURE_TEXTURE_READ_PIXELS" name="TextureReadPixels" value="16"/>
      <member cname="COGL_FEATURE_SHADERS_GLSL" name="ShadersGlsl" value="32"/>
      <member cname="COGL_FEATURE_OFFSCREEN" name="Offscreen" value="64"/>
      <member cname="COGL_FEATURE_OFFSCREEN_MULTISAMPLE" name="OffscreenMultisample" value="128"/>
      <member cname="COGL_FEATURE_OFFSCREEN_BLIT" name="OffscreenBlit" value="256"/>
      <member cname="COGL_FEATURE_FOUR_CLIP_PLANES" name="FourClipPlanes" value="512"/>
      <member cname="COGL_FEATURE_STENCIL_BUFFER" name="StencilBuffer" value="1024"/>
      <member cname="COGL_FEATURE_VBOS" name="Vbos" value="2048"/>
      <member cname="COGL_FEATURE_PBOS" name="Pbos" value="4096"/>
      <member cname="COGL_FEATURE_UNSIGNED_INT_INDICES" name="UnsignedIntIndices" value="8192"/>
      <member cname="COGL_FEATURE_DEPTH_RANGE" name="DepthRange" value="16384"/>
      <member cname="COGL_FEATURE_TEXTURE_NPOT_BASIC" name="TextureNpotBasic" value="32768"/>
      <member cname="COGL_FEATURE_TEXTURE_NPOT_MIPMAP" name="TextureNpotMipmap" value="65536"/>
      <member cname="COGL_FEATURE_TEXTURE_NPOT_REPEAT" name="TextureNpotRepeat" value="131072"/>
      <member cname="COGL_FEATURE_POINT_SPRITE" name="PointSprite" value="262144"/>
      <member cname="COGL_FEATURE_TEXTURE_3D" name="Texture3d" value="524288"/>
      <member cname="COGL_FEATURE_SHADERS_ARBFP" name="ShadersArbfp" value="1048576"/>
      <member cname="COGL_FEATURE_MAP_BUFFER_FOR_READ" name="MapBufferForRead" value="2097152"/>
      <member cname="COGL_FEATURE_MAP_BUFFER_FOR_WRITE" name="MapBufferForWrite" value="4194304"/>
      <member cname="COGL_FEATURE_ONSCREEN_MULTIPLE" name="OnscreenMultiple" value="8388608"/>
      <member cname="COGL_FEATURE_DEPTH_TEXTURE" name="DepthTexture" value="16777216"/>
    </enum>
    <enum name="ReadPixelsFlags" cname="CoglReadPixelsFlags" type="flags" gtype="cogl_read_pixels_flags_get_type">
      <member cname="COGL_READ_PIXELS_COLOR_BUFFER" name="ColorBuffer" value="1"/>
    </enum>
    <enum name="TextureFlags" cname="CoglTextureFlags" type="flags" gtype="cogl_texture_flags_get_type">
      <member cname="COGL_TEXTURE_NONE" name="None" value="0"/>
      <member cname="COGL_TEXTURE_NO_AUTO_MIPMAP" name="NoAutoMipmap" value="1"/>
      <member cname="COGL_TEXTURE_NO_SLICING" name="NoSlicing" value="2"/>
      <member cname="COGL_TEXTURE_NO_ATLAS" name="NoAtlas" value="4"/>
    </enum>
    <callback name="FuncPtr" cname="CoglFuncPtr">
      <return-type type="void"/>
    </callback>
    <callback name="XlibFilterFunc" cname="CoglXlibFilterFunc">
      <return-type type="CoglFilterReturn"/>
      <parameters>
        <parameter name="event" type="XEvent*"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <interface name="Texture" cname="CoglTexture" opaque="false" hidden="false" consume_only="true">
      <method name="GetType" cname="cogl_texture_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Ref" cname="cogl_texture_ref" shared="true" deprecated="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="texture" type="gpointer"/>
        </parameters>
      </method>
      <method name="Unref" cname="cogl_texture_unref" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="texture" type="gpointer"/>
        </parameters>
      </method>
      <method name="Allocate" cname="cogl_texture_allocate">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="GetComponents" cname="cogl_texture_get_components">
        <return-type type="CoglTextureComponents"/>
        <parameters/>
      </method>
      <method name="GetData" cname="cogl_texture_get_data">
        <return-type type="gint"/>
        <parameters>
          <parameter name="format" type="CoglPixelFormat"/>
          <parameter name="rowstride" type="guint"/>
          <parameter name="data" type="guint8"/>
        </parameters>
      </method>
      <method name="GetGlTexture" cname="cogl_texture_get_gl_texture">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="out_gl_handle" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="out_gl_target" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetHeight" cname="cogl_texture_get_height">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetMaxWaste" cname="cogl_texture_get_max_waste">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetPremultiplied" cname="cogl_texture_get_premultiplied">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetWidth" cname="cogl_texture_get_width">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="IsSliced" cname="cogl_texture_is_sliced">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetComponents" cname="cogl_texture_set_components">
        <return-type type="void"/>
        <parameters>
          <parameter name="components" type="CoglTextureComponents"/>
        </parameters>
      </method>
      <method name="SetPremultiplied" cname="cogl_texture_set_premultiplied">
        <return-type type="void"/>
        <parameters>
          <parameter name="premultiplied" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRegion" cname="cogl_texture_set_region">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_x" type="gint"/>
          <parameter name="src_y" type="gint"/>
          <parameter name="dst_x" type="gint"/>
          <parameter name="dst_y" type="gint"/>
          <parameter name="dst_width" type="guint"/>
          <parameter name="dst_height" type="guint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="format" type="CoglPixelFormat"/>
          <parameter name="rowstride" type="guint"/>
          <parameter name="data" type="guint8"/>
        </parameters>
      </method>
    </interface>
    <struct name="Bitmap" cname="CoglBitmap" opaque="true" hidden="false">
      <method name="GetType" cname="cogl_bitmap_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_bitmap_new_from_file">
        <parameters>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetSizeFromFile" cname="cogl_bitmap_get_size_from_file" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="filename" type="const-gchar*"/>
          <parameter name="width" type="gint*" owned="true" pass_as="out"/>
          <parameter name="height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
    </struct>
    <struct name="Fixed" cname="CoglFixed" opaque="true" hidden="false">
      <method name="GetType" cname="cogl_fixed_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Log2" cname="cogl_fixed_log2" shared="true">
        <return-type type="*"/>
        <parameters>
          <parameter name="x" type="guint"/>
        </parameters>
      </method>
      <method name="Pow" cname="cogl_fixed_pow" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="x" type="guint"/>
          <parameter name="y" type="*"/>
        </parameters>
      </method>
      <method name="Atan" cname="cogl_fixed_atan">
        <return-type type="*"/>
        <parameters/>
      </method>
      <method name="Atan2" cname="cogl_fixed_atan2">
        <return-type type="*"/>
        <parameters>
          <parameter name="b" type="*"/>
        </parameters>
      </method>
      <method name="Cos" cname="cogl_fixed_cos">
        <return-type type="*"/>
        <parameters/>
      </method>
      <method name="Div" cname="cogl_fixed_div">
        <return-type type="*"/>
        <parameters>
          <parameter name="b" type="*"/>
        </parameters>
      </method>
      <method name="Mul" cname="cogl_fixed_mul">
        <return-type type="*"/>
        <parameters>
          <parameter name="b" type="*"/>
        </parameters>
      </method>
      <method name="MulDiv" cname="cogl_fixed_mul_div">
        <return-type type="*"/>
        <parameters>
          <parameter name="b" type="*"/>
          <parameter name="c" type="*"/>
        </parameters>
      </method>
      <method name="Pow2" cname="cogl_fixed_pow2">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="Sin" cname="cogl_fixed_sin">
        <return-type type="*"/>
        <parameters/>
      </method>
      <method name="Sqrt" cname="cogl_fixed_sqrt">
        <return-type type="*"/>
        <parameters/>
      </method>
      <method name="Tan" cname="cogl_fixed_tan">
        <return-type type="*"/>
        <parameters/>
      </method>
    </struct>
    <struct name="Offscreen" cname="CoglOffscreen" opaque="true" hidden="false">
      <method name="GetType" cname="cogl_offscreen_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_offscreen_new_to_texture">
        <parameters>
          <parameter name="texture" type="CoglTexture*"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_offscreen_new_with_texture">
        <parameters>
          <parameter name="texture" type="CoglTexture*"/>
        </parameters>
      </constructor>
      <method name="Ref" cname="cogl_offscreen_ref" shared="true" deprecated="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="offscreen" type="gpointer"/>
        </parameters>
      </method>
      <method name="Unref" cname="cogl_offscreen_unref" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="offscreen" type="gpointer"/>
        </parameters>
      </method>
    </struct>
    <boxed name="Color" cname="CoglColor" opaque="false" hidden="false">
      <method name="GetType" cname="cogl_color_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="private_member_red" access="private" writeable="false" readable="false" name="PrivateMemberRed" type="guint8"/>
      <field cname="private_member_green" access="private" writeable="false" readable="false" name="PrivateMemberGreen" type="guint8"/>
      <field cname="private_member_blue" access="private" writeable="false" readable="false" name="PrivateMemberBlue" type="guint8"/>
      <field cname="private_member_alpha" access="private" writeable="false" readable="false" name="PrivateMemberAlpha" type="guint8"/>
      <field cname="private_member_padding0" access="private" writeable="false" readable="false" name="PrivateMemberPadding0" type="guint32"/>
      <field cname="private_member_padding1" access="private" writeable="false" readable="false" name="PrivateMemberPadding1" type="guint32"/>
      <field cname="private_member_padding2" access="private" writeable="false" readable="false" name="PrivateMemberPadding2" type="guint32"/>
      <constructor cname="cogl_color_new" disable_void_ctor=""/>
      <method name="Copy" cname="cogl_color_copy">
        <return-type type="CoglColor*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="cogl_color_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetAlpha" cname="cogl_color_get_alpha">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetAlphaByte" cname="cogl_color_get_alpha_byte">
        <return-type type="guint8"/>
        <parameters/>
      </method>
      <method name="GetAlphaFloat" cname="cogl_color_get_alpha_float">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetBlue" cname="cogl_color_get_blue">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetBlueByte" cname="cogl_color_get_blue_byte">
        <return-type type="guint8"/>
        <parameters/>
      </method>
      <method name="GetBlueFloat" cname="cogl_color_get_blue_float">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetGreen" cname="cogl_color_get_green">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetGreenByte" cname="cogl_color_get_green_byte">
        <return-type type="guint8"/>
        <parameters/>
      </method>
      <method name="GetGreenFloat" cname="cogl_color_get_green_float">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetRed" cname="cogl_color_get_red">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetRedByte" cname="cogl_color_get_red_byte">
        <return-type type="guint8"/>
        <parameters/>
      </method>
      <method name="GetRedFloat" cname="cogl_color_get_red_float">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="InitFrom4f" cname="cogl_color_init_from_4f">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="gfloat"/>
          <parameter name="green" type="gfloat"/>
          <parameter name="blue" type="gfloat"/>
          <parameter name="alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="InitFrom4fv" cname="cogl_color_init_from_4fv">
        <return-type type="void"/>
        <parameters>
          <parameter name="color_array" type="gfloat"/>
        </parameters>
      </method>
      <method name="InitFrom4ub" cname="cogl_color_init_from_4ub">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="guint8"/>
          <parameter name="green" type="guint8"/>
          <parameter name="blue" type="guint8"/>
          <parameter name="alpha" type="guint8"/>
        </parameters>
      </method>
      <method name="Premultiply" cname="cogl_color_premultiply">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetAlpha" cname="cogl_color_set_alpha">
        <return-type type="void"/>
        <parameters>
          <parameter name="alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetAlphaByte" cname="cogl_color_set_alpha_byte">
        <return-type type="void"/>
        <parameters>
          <parameter name="alpha" type="guint8"/>
        </parameters>
      </method>
      <method name="SetAlphaFloat" cname="cogl_color_set_alpha_float">
        <return-type type="void"/>
        <parameters>
          <parameter name="alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetBlue" cname="cogl_color_set_blue">
        <return-type type="void"/>
        <parameters>
          <parameter name="blue" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetBlueByte" cname="cogl_color_set_blue_byte">
        <return-type type="void"/>
        <parameters>
          <parameter name="blue" type="guint8"/>
        </parameters>
      </method>
      <method name="SetBlueFloat" cname="cogl_color_set_blue_float">
        <return-type type="void"/>
        <parameters>
          <parameter name="blue" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetFrom4f" cname="cogl_color_set_from_4f" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="gfloat"/>
          <parameter name="green" type="gfloat"/>
          <parameter name="blue" type="gfloat"/>
          <parameter name="alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetFrom4ub" cname="cogl_color_set_from_4ub" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="guint8"/>
          <parameter name="green" type="guint8"/>
          <parameter name="blue" type="guint8"/>
          <parameter name="alpha" type="guint8"/>
        </parameters>
      </method>
      <method name="SetGreen" cname="cogl_color_set_green">
        <return-type type="void"/>
        <parameters>
          <parameter name="green" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetGreenByte" cname="cogl_color_set_green_byte">
        <return-type type="void"/>
        <parameters>
          <parameter name="green" type="guint8"/>
        </parameters>
      </method>
      <method name="SetGreenFloat" cname="cogl_color_set_green_float">
        <return-type type="void"/>
        <parameters>
          <parameter name="green" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetRed" cname="cogl_color_set_red">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetRedByte" cname="cogl_color_set_red_byte">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="guint8"/>
        </parameters>
      </method>
      <method name="SetRedFloat" cname="cogl_color_set_red_float">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="gfloat"/>
        </parameters>
      </method>
      <method name="ToHsl" cname="cogl_color_to_hsl">
        <return-type type="void"/>
        <parameters>
          <parameter name="hue" type="gfloat*" owned="true" pass_as="out"/>
          <parameter name="saturation" type="gfloat*" owned="true" pass_as="out"/>
          <parameter name="luminance" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Unpremultiply" cname="cogl_color_unpremultiply">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Equal" cname="cogl_color_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gpointer"/>
          <parameter name="v2" type="gpointer"/>
        </parameters>
      </method>
      <method name="InitFromHsl" cname="cogl_color_init_from_hsl" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="CoglColor*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="hue" type="gfloat"/>
          <parameter name="saturation" type="gfloat"/>
          <parameter name="luminance" type="gfloat"/>
        </parameters>
      </method>
    </boxed>
    <struct name="Euler" cname="CoglEuler" opaque="true" hidden="false"/>
    <struct name="Material" cname="CoglMaterial" opaque="true" hidden="false">
      <method name="Copy" cname="cogl_material_copy" deprecated="true">
        <return-type type="CoglMaterial*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetAmbient" cname="cogl_material_get_ambient" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="ambient" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetColor" cname="cogl_material_get_color" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="CoglColor*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDiffuse" cname="cogl_material_get_diffuse" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="diffuse" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetEmission" cname="cogl_material_get_emission" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="emission" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetLayerPointSpriteCoordsEnabled" cname="cogl_material_get_layer_point_sprite_coords_enabled" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
        </parameters>
      </method>
      <method name="GetLayerWrapModeP" cname="cogl_material_get_layer_wrap_mode_p" deprecated="true">
        <return-type type="CoglMaterialWrapMode"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
        </parameters>
      </method>
      <method name="GetLayerWrapModeS" cname="cogl_material_get_layer_wrap_mode_s" deprecated="true">
        <return-type type="CoglMaterialWrapMode"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
        </parameters>
      </method>
      <method name="GetLayerWrapModeT" cname="cogl_material_get_layer_wrap_mode_t" deprecated="true">
        <return-type type="CoglMaterialWrapMode"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
        </parameters>
      </method>
      <method name="GetLayers" cname="cogl_material_get_layers">
        <return-type type="const GList*" element_type="GList*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetNLayers" cname="cogl_material_get_n_layers" deprecated="true">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetPointSize" cname="cogl_material_get_point_size" deprecated="true">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetShininess" cname="cogl_material_get_shininess" deprecated="true">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetSpecular" cname="cogl_material_get_specular" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="specular" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetUserProgram" cname="cogl_material_get_user_program" deprecated="true">
        <return-type type="gpointer"/>
        <parameters/>
      </method>
      <method name="RemoveLayer" cname="cogl_material_remove_layer" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
        </parameters>
      </method>
      <method name="SetAlphaTestFunction" cname="cogl_material_set_alpha_test_function" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="alpha_func" type="CoglMaterialAlphaFunc"/>
          <parameter name="alpha_reference" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetAmbient" cname="cogl_material_set_ambient" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="ambient" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetAmbientAndDiffuse" cname="cogl_material_set_ambient_and_diffuse" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetBlend" cname="cogl_material_set_blend" deprecated="true">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="blend_string" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetBlendConstant" cname="cogl_material_set_blend_constant" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="constant_color" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetColor" cname="cogl_material_set_color" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetColor4f" cname="cogl_material_set_color4f" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="gfloat"/>
          <parameter name="green" type="gfloat"/>
          <parameter name="blue" type="gfloat"/>
          <parameter name="alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetColor4ub" cname="cogl_material_set_color4ub" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="guint8"/>
          <parameter name="green" type="guint8"/>
          <parameter name="blue" type="guint8"/>
          <parameter name="alpha" type="guint8"/>
        </parameters>
      </method>
      <method name="SetDiffuse" cname="cogl_material_set_diffuse" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="diffuse" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetEmission" cname="cogl_material_set_emission" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="emission" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetLayer" cname="cogl_material_set_layer" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="texture" type="gpointer"/>
        </parameters>
      </method>
      <method name="SetLayerCombine" cname="cogl_material_set_layer_combine" deprecated="true">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="layer_index" type="gint"/>
          <parameter name="blend_string" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetLayerCombineConstant" cname="cogl_material_set_layer_combine_constant" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="constant" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetLayerFilters" cname="cogl_material_set_layer_filters" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="min_filter" type="CoglMaterialFilter"/>
          <parameter name="mag_filter" type="CoglMaterialFilter"/>
        </parameters>
      </method>
      <method name="SetLayerMatrix" cname="cogl_material_set_layer_matrix" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetLayerPointSpriteCoordsEnabled" cname="cogl_material_set_layer_point_sprite_coords_enabled" deprecated="true">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="layer_index" type="gint"/>
          <parameter name="enable" type="gboolean"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetLayerWrapMode" cname="cogl_material_set_layer_wrap_mode" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="mode" type="CoglMaterialWrapMode"/>
        </parameters>
      </method>
      <method name="SetLayerWrapModeP" cname="cogl_material_set_layer_wrap_mode_p" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="mode" type="CoglMaterialWrapMode"/>
        </parameters>
      </method>
      <method name="SetLayerWrapModeS" cname="cogl_material_set_layer_wrap_mode_s" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="mode" type="CoglMaterialWrapMode"/>
        </parameters>
      </method>
      <method name="SetLayerWrapModeT" cname="cogl_material_set_layer_wrap_mode_t" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="mode" type="CoglMaterialWrapMode"/>
        </parameters>
      </method>
      <method name="SetPointSize" cname="cogl_material_set_point_size" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="point_size" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetShininess" cname="cogl_material_set_shininess" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="shininess" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetSpecular" cname="cogl_material_set_specular" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="specular" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetUserProgram" cname="cogl_material_set_user_program" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="program" type="gpointer"/>
        </parameters>
      </method>
      <method name="New" cname="cogl_material_new" shared="true" deprecated="true">
        <return-type type="CoglMaterial*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Ref" cname="cogl_material_ref" shared="true" deprecated="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="material" type="gpointer"/>
        </parameters>
      </method>
      <method name="Unref" cname="cogl_material_unref" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="material" type="gpointer"/>
        </parameters>
      </method>
    </struct>
    <struct name="MaterialLayer" cname="CoglMaterialLayer" opaque="true" hidden="false">
      <method name="GetMagFilter" cname="cogl_material_layer_get_mag_filter" deprecated="true">
        <return-type type="CoglMaterialFilter"/>
        <parameters/>
      </method>
      <method name="GetMinFilter" cname="cogl_material_layer_get_min_filter" deprecated="true">
        <return-type type="CoglMaterialFilter"/>
        <parameters/>
      </method>
      <method name="GetTexture" cname="cogl_material_layer_get_texture" deprecated="true">
        <return-type type="gpointer"/>
        <parameters/>
      </method>
      <method name="GetType" cname="cogl_material_layer_get_type" deprecated="true">
        <return-type type="CoglMaterialLayerType"/>
        <parameters/>
      </method>
      <method name="GetWrapModeP" cname="cogl_material_layer_get_wrap_mode_p" deprecated="true">
        <return-type type="CoglMaterialWrapMode"/>
        <parameters/>
      </method>
      <method name="GetWrapModeS" cname="cogl_material_layer_get_wrap_mode_s" deprecated="true">
        <return-type type="CoglMaterialWrapMode"/>
        <parameters/>
      </method>
      <method name="GetWrapModeT" cname="cogl_material_layer_get_wrap_mode_t" deprecated="true">
        <return-type type="CoglMaterialWrapMode"/>
        <parameters/>
      </method>
    </struct>
    <boxed name="Matrix" cname="CoglMatrix" opaque="false" hidden="false">
      <method name="GetType" cname="cogl_matrix_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="xx" access="public" writeable="true" readable="true" name="Xx" type="gfloat"/>
      <field cname="yx" access="public" writeable="true" readable="true" name="Yx" type="gfloat"/>
      <field cname="zx" access="public" writeable="true" readable="true" name="Zx" type="gfloat"/>
      <field cname="wx" access="public" writeable="true" readable="true" name="Wx" type="gfloat"/>
      <field cname="xy" access="public" writeable="true" readable="true" name="Xy" type="gfloat"/>
      <field cname="yy" access="public" writeable="true" readable="true" name="Yy" type="gfloat"/>
      <field cname="zy" access="public" writeable="true" readable="true" name="Zy" type="gfloat"/>
      <field cname="wy" access="public" writeable="true" readable="true" name="Wy" type="gfloat"/>
      <field cname="xz" access="public" writeable="true" readable="true" name="Xz" type="gfloat"/>
      <field cname="yz" access="public" writeable="true" readable="true" name="Yz" type="gfloat"/>
      <field cname="zz" access="public" writeable="true" readable="true" name="Zz" type="gfloat"/>
      <field cname="wz" access="public" writeable="true" readable="true" name="Wz" type="gfloat"/>
      <field cname="xw" access="public" writeable="true" readable="true" name="Xw" type="gfloat"/>
      <field cname="yw" access="public" writeable="true" readable="true" name="Yw" type="gfloat"/>
      <field cname="zw" access="public" writeable="true" readable="true" name="Zw" type="gfloat"/>
      <field cname="ww" access="public" writeable="true" readable="true" name="Ww" type="gfloat"/>
      <field cname="private_member_inv" access="private" writeable="false" readable="false" name="PrivateMemberInv" type="float" array="true" array_len="16"/>
      <field cname="private_member_type" access="private" writeable="false" readable="false" name="PrivateMemberType" type="guint"/>
      <field cname="private_member_flags" access="private" writeable="false" readable="false" name="PrivateMemberFlags" type="guint"/>
      <field cname="private_member__padding3" access="private" writeable="false" readable="false" name="PrivateMember_Padding3" type="guint"/>
      <method name="Copy" cname="cogl_matrix_copy">
        <return-type type="CoglMatrix*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="cogl_matrix_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Frustum" cname="cogl_matrix_frustum">
        <return-type type="void"/>
        <parameters>
          <parameter name="left" type="gfloat"/>
          <parameter name="right" type="gfloat"/>
          <parameter name="bottom" type="gfloat"/>
          <parameter name="top" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_far" type="gfloat"/>
        </parameters>
      </method>
      <method name="GetArray" cname="cogl_matrix_get_array">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetInverse" cname="cogl_matrix_get_inverse">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="inverse" type="CoglMatrix*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InitFromArray" cname="cogl_matrix_init_from_array">
        <return-type type="void"/>
        <parameters>
          <parameter name="array" type="gfloat"/>
        </parameters>
      </method>
      <method name="InitIdentity" cname="cogl_matrix_init_identity">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="InitTranslation" cname="cogl_matrix_init_translation">
        <return-type type="void"/>
        <parameters>
          <parameter name="tx" type="gfloat"/>
          <parameter name="ty" type="gfloat"/>
          <parameter name="tz" type="gfloat"/>
        </parameters>
      </method>
      <method name="IsIdentity" cname="cogl_matrix_is_identity">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="LookAt" cname="cogl_matrix_look_at">
        <return-type type="void"/>
        <parameters>
          <parameter name="eye_position_x" type="gfloat"/>
          <parameter name="eye_position_y" type="gfloat"/>
          <parameter name="eye_position_z" type="gfloat"/>
          <parameter name="object_x" type="gfloat"/>
          <parameter name="object_y" type="gfloat"/>
          <parameter name="object_z" type="gfloat"/>
          <parameter name="world_up_x" type="gfloat"/>
          <parameter name="world_up_y" type="gfloat"/>
          <parameter name="world_up_z" type="gfloat"/>
        </parameters>
      </method>
      <method name="Multiply" cname="cogl_matrix_multiply">
        <return-type type="void"/>
        <parameters>
          <parameter name="a" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="b" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Ortho" cname="cogl_matrix_ortho" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="left" type="gfloat"/>
          <parameter name="right" type="gfloat"/>
          <parameter name="bottom" type="gfloat"/>
          <parameter name="top" type="gfloat"/>
          <parameter name="near" type="gfloat"/>
          <parameter name="far" type="gfloat"/>
        </parameters>
      </method>
      <method name="Perspective" cname="cogl_matrix_perspective">
        <return-type type="void"/>
        <parameters>
          <parameter name="fov_y" type="gfloat"/>
          <parameter name="aspect" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_far" type="gfloat"/>
        </parameters>
      </method>
      <method name="Rotate" cname="cogl_matrix_rotate">
        <return-type type="void"/>
        <parameters>
          <parameter name="angle" type="gfloat"/>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="Scale" cname="cogl_matrix_scale">
        <return-type type="void"/>
        <parameters>
          <parameter name="sx" type="gfloat"/>
          <parameter name="sy" type="gfloat"/>
          <parameter name="sz" type="gfloat"/>
        </parameters>
      </method>
      <method name="TransformPoint" cname="cogl_matrix_transform_point">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gfloat*" owned="true" pass_as="ref"/>
          <parameter name="y" type="gfloat*" owned="true" pass_as="ref"/>
          <parameter name="z" type="gfloat*" owned="true" pass_as="ref"/>
          <parameter name="w" type="gfloat*" owned="true" pass_as="ref"/>
        </parameters>
      </method>
      <method name="Translate" cname="cogl_matrix_translate">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="Transpose" cname="cogl_matrix_transpose">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Equal" cname="cogl_matrix_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gpointer"/>
          <parameter name="v2" type="gpointer"/>
        </parameters>
      </method>
    </boxed>
    <struct name="Quaternion" cname="CoglQuaternion" opaque="true" hidden="false"/>
    <struct name="TextureVertex" cname="CoglTextureVertex" opaque="false" hidden="false">
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gfloat"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gfloat"/>
      <field cname="z" access="public" writeable="true" readable="true" name="Z" type="gfloat"/>
      <field cname="tx" access="public" writeable="true" readable="true" name="Tx" type="gfloat"/>
      <field cname="ty" access="public" writeable="true" readable="true" name="Ty" type="gfloat"/>
      <field cname="color" access="public" writeable="true" readable="true" name="Color" type="CoglColor">
        <warning>missing glib:type-name</warning>
      </field>
    </struct>
    <struct name="_ColorSizeCheck" cname="_CoglColorSizeCheck" opaque="false" hidden="false">
      <field cname="compile_time_assert_CoglColor_size" access="public" writeable="true" readable="true" name="CompileTimeAssertCoglColorSize" type="char" array="true" array_len="-1"/>
    </struct>
    <struct name="_MatrixSizeCheck" cname="_CoglMatrixSizeCheck" opaque="false" hidden="false">
      <field cname="compile_time_assert_CoglMatrix_size" access="public" writeable="true" readable="true" name="CompileTimeAssertCoglMatrixSize" type="char" array="true" array_len="-1"/>
    </struct>
    <struct name="_TextureVertexSizeCheck" cname="_CoglTextureVertexSizeCheck" opaque="false" hidden="false">
      <field cname="compile_time_assert_CoglTextureVertex_size" access="public" writeable="true" readable="true" name="CompileTimeAssertCoglTextureVertexSize" type="char" array="true" array_len="-1"/>
    </struct>
    <object name="Global" cname="CoglGlobal" opaque="true">
      <method name="AngleCos" cname="cogl_angle_cos" shared="true">
        <return-type type="*"/>
        <parameters>
          <parameter name="angle" type="int32_t"/>
        </parameters>
      </method>
      <method name="AngleSin" cname="cogl_angle_sin" shared="true">
        <return-type type="*"/>
        <parameters>
          <parameter name="angle" type="int32_t"/>
        </parameters>
      </method>
      <method name="AngleTan" cname="cogl_angle_tan" shared="true">
        <return-type type="*"/>
        <parameters>
          <parameter name="angle" type="int32_t"/>
        </parameters>
      </method>
      <method name="BeginGl" cname="cogl_begin_gl" shared="true" deprecated="true">
        <return-type type="void"/>
      </method>
      <method name="BitmapErrorQuark" cname="cogl_bitmap_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="BlendStringErrorQuark" cname="cogl_blend_string_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="CheckExtension" cname="cogl_check_extension" shared="true" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="ext" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="Clear" cname="cogl_clear" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="buffers" type="gulong"/>
        </parameters>
      </method>
      <method name="ClipEnsure" cname="cogl_clip_ensure" shared="true" deprecated="true">
        <return-type type="void"/>
      </method>
      <method name="ClipPop" cname="cogl_clip_pop" shared="true" deprecated="true">
        <return-type type="void"/>
      </method>
      <method name="ClipPush" cname="cogl_clip_push" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="x_offset" type="gfloat"/>
          <parameter name="y_offset" type="gfloat"/>
          <parameter name="width" type="gfloat"/>
          <parameter name="height" type="gfloat"/>
        </parameters>
      </method>
      <method name="ClipPushPrimitive" cname="cogl_clip_push_primitive" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="primitive" type="CoglPrimitive*"/>
          <parameter name="bounds_x1" type="gfloat"/>
          <parameter name="bounds_y1" type="gfloat"/>
          <parameter name="bounds_x2" type="gfloat"/>
          <parameter name="bounds_y2" type="gfloat"/>
        </parameters>
      </method>
      <method name="ClipPushRectangle" cname="cogl_clip_push_rectangle" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="x0" type="gfloat"/>
          <parameter name="y0" type="gfloat"/>
          <parameter name="x1" type="gfloat"/>
          <parameter name="y1" type="gfloat"/>
        </parameters>
      </method>
      <method name="ClipPushWindowRect" cname="cogl_clip_push_window_rect" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="x_offset" type="gfloat"/>
          <parameter name="y_offset" type="gfloat"/>
          <parameter name="width" type="gfloat"/>
          <parameter name="height" type="gfloat"/>
        </parameters>
      </method>
      <method name="ClipPushWindowRectangle" cname="cogl_clip_push_window_rectangle" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="x_offset" type="gint"/>
          <parameter name="y_offset" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="ClipStackRestore" cname="cogl_clip_stack_restore" shared="true" deprecated="true">
        <return-type type="void"/>
      </method>
      <method name="ClipStackSave" cname="cogl_clip_stack_save" shared="true" deprecated="true">
        <return-type type="void"/>
      </method>
      <method name="ClutterCheckExtensionCLUTTER" cname="cogl_clutter_check_extension_CLUTTER" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="ext" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ClutterWinsysHasFeatureCLUTTER" cname="cogl_clutter_winsys_has_feature_CLUTTER" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="feature" type="CoglWinsysFeature"/>
        </parameters>
      </method>
      <method name="ClutterWinsysXlibGetVisualInfoCLUTTER" cname="cogl_clutter_winsys_xlib_get_visual_info_CLUTTER" shared="true">
        <return-type type="XVisualInfo*"/>
      </method>
      <method name="ColorEqual" cname="cogl_color_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gpointer"/>
          <parameter name="v2" type="gpointer"/>
        </parameters>
      </method>
      <method name="ColorInitFromHsl" cname="cogl_color_init_from_hsl" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="CoglColor*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="hue" type="gfloat"/>
          <parameter name="saturation" type="gfloat"/>
          <parameter name="luminance" type="gfloat"/>
        </parameters>
      </method>
      <method name="CreateProgram" cname="cogl_create_program" shared="true" deprecated="true">
        <return-type type="gpointer"/>
      </method>
      <method name="CreateShader" cname="cogl_create_shader" shared="true" deprecated="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="shader_type" type="CoglShaderType"/>
        </parameters>
      </method>
      <method name="DebugMatrixPrint" cname="cogl_debug_matrix_print" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DisableFog" cname="cogl_disable_fog" shared="true" deprecated="true">
        <return-type type="void"/>
      </method>
      <method name="DoubleToFixed" cname="cogl_double_to_fixed" shared="true">
        <return-type type="*"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="DoubleToInt" cname="cogl_double_to_int" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="DoubleToUint" cname="cogl_double_to_uint" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="EndGl" cname="cogl_end_gl" shared="true" deprecated="true">
        <return-type type="void"/>
      </method>
      <method name="FeaturesAvailable" cname="cogl_features_available" shared="true" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="features" type="CoglFeatureFlags"/>
        </parameters>
      </method>
      <method name="Flush" cname="cogl_flush" shared="true">
        <return-type type="void"/>
      </method>
      <method name="FramebufferGetColorFormat" cname="cogl_framebuffer_get_color_format" shared="true">
        <return-type type="CoglPixelFormat"/>
        <parameters>
          <parameter name="framebuffer" type="CoglFramebuffer*"/>
        </parameters>
      </method>
      <method name="Frustum" cname="cogl_frustum" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="left" type="gfloat"/>
          <parameter name="right" type="gfloat"/>
          <parameter name="bottom" type="gfloat"/>
          <parameter name="top" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_far" type="gfloat"/>
        </parameters>
      </method>
      <method name="GetBackfaceCullingEnabled" cname="cogl_get_backface_culling_enabled" shared="true" deprecated="true">
        <return-type type="gboolean"/>
      </method>
      <method name="GetBitmasks" cname="cogl_get_bitmasks" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="gint*" owned="true" pass_as="out"/>
          <parameter name="green" type="gint*" owned="true" pass_as="out"/>
          <parameter name="blue" type="gint*" owned="true" pass_as="out"/>
          <parameter name="alpha" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetDepthTestEnabled" cname="cogl_get_depth_test_enabled" shared="true" deprecated="true">
        <return-type type="gboolean"/>
      </method>
      <method name="GetFeatures" cname="cogl_get_features" shared="true" deprecated="true">
        <return-type type="CoglFeatureFlags"/>
      </method>
      <method name="GetModelviewMatrix" cname="cogl_get_modelview_matrix" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetOptionGroup" cname="cogl_get_option_group" shared="true" deprecated="true">
        <return-type type="GLib.OptionGroup"/>
      </method>
      <method name="GetProcAddress" cname="cogl_get_proc_address" shared="true">
        <return-type type="CoglFuncPtr"/>
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetProjectionMatrix" cname="cogl_get_projection_matrix" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetSource" cname="cogl_get_source" shared="true" deprecated="true">
        <return-type type="gpointer"/>
      </method>
      <method name="GetViewport" cname="cogl_get_viewport" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="v" type="float*" owned="true" pass_as="out" array="true" array_len="4"/>
        </parameters>
      </method>
      <method name="GtypeMatrixGetType" cname="cogl_gtype_matrix_get_type" shared="true" deprecated="true">
        <return-type type="GType"/>
      </method>
      <method name="HandleGetType" cname="cogl_handle_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="HandleRef" cname="cogl_handle_ref" shared="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="HandleUnref" cname="cogl_handle_unref" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsBitmap" cname="cogl_is_bitmap" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsMaterial" cname="cogl_is_material" shared="true" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsOffscreen" cname="cogl_is_offscreen" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsProgram" cname="cogl_is_program" shared="true" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsShader" cname="cogl_is_shader" shared="true" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsTexture" cname="cogl_is_texture" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsVertexBuffer" cname="cogl_is_vertex_buffer" shared="true" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsVertexBufferIndices" cname="cogl_is_vertex_buffer_indices" shared="true" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="MaterialUnref" cname="cogl_material_unref" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="material" type="gpointer"/>
        </parameters>
      </method>
      <method name="MatrixEqual" cname="cogl_matrix_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gpointer"/>
          <parameter name="v2" type="gpointer"/>
        </parameters>
      </method>
      <method name="OnscreenClutterBackendSetSizeCLUTTER" cname="cogl_onscreen_clutter_backend_set_size_CLUTTER" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="Ortho" cname="cogl_ortho" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="left" type="gfloat"/>
          <parameter name="right" type="gfloat"/>
          <parameter name="bottom" type="gfloat"/>
          <parameter name="top" type="gfloat"/>
          <parameter name="near" type="gfloat"/>
          <parameter name="far" type="gfloat"/>
        </parameters>
      </method>
      <method name="Perspective" cname="cogl_perspective" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="fovy" type="gfloat"/>
          <parameter name="aspect" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_far" type="gfloat"/>
        </parameters>
      </method>
      <method name="Polygon" cname="cogl_polygon" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="vertices" type="CoglTextureVertex*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="n_vertices" type="guint"/>
          <parameter name="use_color" type="gboolean"/>
        </parameters>
      </method>
      <method name="PopDrawBuffer" cname="cogl_pop_draw_buffer" shared="true" deprecated="true">
        <return-type type="void"/>
      </method>
      <method name="PopFramebuffer" cname="cogl_pop_framebuffer" shared="true" deprecated="true">
        <return-type type="void"/>
      </method>
      <method name="PopMatrix" cname="cogl_pop_matrix" shared="true" deprecated="true">
        <return-type type="void"/>
      </method>
      <method name="PopSource" cname="cogl_pop_source" shared="true" deprecated="true">
        <return-type type="void"/>
      </method>
      <method name="ProgramAttachShader" cname="cogl_program_attach_shader" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="program_handle" type="gpointer"/>
          <parameter name="shader_handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="ProgramGetUniformLocation" cname="cogl_program_get_uniform_location" shared="true" deprecated="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
          <parameter name="uniform_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ProgramLink" cname="cogl_program_link" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="ProgramRef" cname="cogl_program_ref" shared="true" deprecated="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="ProgramSetUniform1f" cname="cogl_program_set_uniform_1f" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="program" type="gpointer"/>
          <parameter name="uniform_location" type="gint"/>
          <parameter name="value" type="gfloat"/>
        </parameters>
      </method>
      <method name="ProgramSetUniform1i" cname="cogl_program_set_uniform_1i" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="program" type="gpointer"/>
          <parameter name="uniform_location" type="gint"/>
          <parameter name="value" type="gint"/>
        </parameters>
      </method>
      <method name="ProgramSetUniformFloat" cname="cogl_program_set_uniform_float" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="program" type="gpointer"/>
          <parameter name="uniform_location" type="gint"/>
          <parameter name="n_components" type="gint"/>
          <parameter name="count" type="gint"/>
          <parameter name="value" type="float*" array="true" array_length_param_index="3"/>
        </parameters>
      </method>
      <method name="ProgramSetUniformInt" cname="cogl_program_set_uniform_int" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="program" type="gpointer"/>
          <parameter name="uniform_location" type="gint"/>
          <parameter name="n_components" type="gint"/>
          <parameter name="count" type="gint"/>
          <parameter name="value" type="int*" array="true" array_length_param_index="3"/>
        </parameters>
      </method>
      <method name="ProgramSetUniformMatrix" cname="cogl_program_set_uniform_matrix" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="program" type="gpointer"/>
          <parameter name="uniform_location" type="gint"/>
          <parameter name="dimensions" type="gint"/>
          <parameter name="count" type="gint"/>
          <parameter name="transpose" type="gboolean"/>
          <parameter name="value" type="float*" array="true" array_length_param_index="3"/>
        </parameters>
      </method>
      <method name="ProgramUniform1f" cname="cogl_program_uniform_1f" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="uniform_no" type="gint"/>
          <parameter name="value" type="gfloat"/>
        </parameters>
      </method>
      <method name="ProgramUniform1i" cname="cogl_program_uniform_1i" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="uniform_no" type="gint"/>
          <parameter name="value" type="gint"/>
        </parameters>
      </method>
      <method name="ProgramUniformFloat" cname="cogl_program_uniform_float" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="uniform_no" type="gint"/>
          <parameter name="size" type="gint"/>
          <parameter name="count" type="gint"/>
          <parameter name="value" type="float*" array="true" array_length_param_index="2"/>
        </parameters>
      </method>
      <method name="ProgramUniformInt" cname="cogl_program_uniform_int" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="uniform_no" type="gint"/>
          <parameter name="size" type="gint"/>
          <parameter name="count" type="gint"/>
          <parameter name="value" type="int*" array="true" array_length_param_index="2"/>
        </parameters>
      </method>
      <method name="ProgramUniformMatrix" cname="cogl_program_uniform_matrix" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="uniform_no" type="gint"/>
          <parameter name="size" type="gint"/>
          <parameter name="count" type="gint"/>
          <parameter name="transpose" type="gboolean"/>
          <parameter name="value" type="float*" array="true" array_length_param_index="2"/>
        </parameters>
      </method>
      <method name="ProgramUnref" cname="cogl_program_unref" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="ProgramUse" cname="cogl_program_use" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="PushDrawBuffer" cname="cogl_push_draw_buffer" shared="true" deprecated="true">
        <return-type type="void"/>
      </method>
      <method name="PushFramebuffer" cname="cogl_push_framebuffer" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="CoglFramebuffer*"/>
        </parameters>
      </method>
      <method name="PushMatrix" cname="cogl_push_matrix" shared="true" deprecated="true">
        <return-type type="void"/>
      </method>
      <method name="PushSource" cname="cogl_push_source" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="material" type="gpointer"/>
        </parameters>
      </method>
      <method name="ReadPixels" cname="cogl_read_pixels" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="source" type="CoglReadPixelsFlags"/>
          <parameter name="format" type="CoglPixelFormat"/>
          <parameter name="pixels" type="guint8"/>
        </parameters>
      </method>
      <method name="Rectangle" cname="cogl_rectangle" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="x_1" type="gfloat"/>
          <parameter name="y_1" type="gfloat"/>
          <parameter name="x_2" type="gfloat"/>
          <parameter name="y_2" type="gfloat"/>
        </parameters>
      </method>
      <method name="RectangleWithMultitextureCoords" cname="cogl_rectangle_with_multitexture_coords" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="x1" type="gfloat"/>
          <parameter name="y1" type="gfloat"/>
          <parameter name="x2" type="gfloat"/>
          <parameter name="y2" type="gfloat"/>
          <parameter name="tex_coords" type="float*" array="true"/>
          <parameter name="tex_coords_len" type="gint"/>
        </parameters>
      </method>
      <method name="RectangleWithTextureCoords" cname="cogl_rectangle_with_texture_coords" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="x1" type="gfloat"/>
          <parameter name="y1" type="gfloat"/>
          <parameter name="x2" type="gfloat"/>
          <parameter name="y2" type="gfloat"/>
          <parameter name="tx1" type="gfloat"/>
          <parameter name="ty1" type="gfloat"/>
          <parameter name="tx2" type="gfloat"/>
          <parameter name="ty2" type="gfloat"/>
        </parameters>
      </method>
      <method name="Rectangles" cname="cogl_rectangles" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="verts" type="float*" array="true"/>
          <parameter name="n_rects" type="guint"/>
        </parameters>
      </method>
      <method name="RectanglesWithTextureCoords" cname="cogl_rectangles_with_texture_coords" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="verts" type="float*" array="true"/>
          <parameter name="n_rects" type="guint"/>
        </parameters>
      </method>
      <method name="Rotate" cname="cogl_rotate" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="angle" type="gfloat"/>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="Scale" cname="cogl_scale" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetBackfaceCullingEnabled" cname="cogl_set_backface_culling_enabled" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDepthTestEnabled" cname="cogl_set_depth_test_enabled" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDrawBuffer" cname="cogl_set_draw_buffer" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="target" type="CoglBufferTarget"/>
          <parameter name="offscreen" type="gpointer"/>
        </parameters>
      </method>
      <method name="SetFog" cname="cogl_set_fog" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="fog_color" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="mode" type="CoglFogMode"/>
          <parameter name="density" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_far" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetFramebuffer" cname="cogl_set_framebuffer" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="CoglFramebuffer*"/>
        </parameters>
      </method>
      <method name="SetModelviewMatrix" cname="cogl_set_modelview_matrix" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetProjectionMatrix" cname="cogl_set_projection_matrix" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetSource" cname="cogl_set_source" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="material" type="gpointer"/>
        </parameters>
      </method>
      <method name="SetSourceColor" cname="cogl_set_source_color" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetSourceColor4f" cname="cogl_set_source_color4f" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="gfloat"/>
          <parameter name="green" type="gfloat"/>
          <parameter name="blue" type="gfloat"/>
          <parameter name="alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetSourceColor4ub" cname="cogl_set_source_color4ub" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="guint8"/>
          <parameter name="green" type="guint8"/>
          <parameter name="blue" type="guint8"/>
          <parameter name="alpha" type="guint8"/>
        </parameters>
      </method>
      <method name="SetSourceTexture" cname="cogl_set_source_texture" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="texture" type="CoglTexture*"/>
        </parameters>
      </method>
      <method name="SetViewport" cname="cogl_set_viewport" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="ShaderCompile" cname="cogl_shader_compile" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="ShaderGetInfoLog" cname="cogl_shader_get_info_log" shared="true" deprecated="true">
        <return-type type="gchar*" owned="true"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="ShaderGetType" cname="cogl_shader_get_type" shared="true" deprecated="true">
        <return-type type="CoglShaderType"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="ShaderIsCompiled" cname="cogl_shader_is_compiled" shared="true" deprecated="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="ShaderRef" cname="cogl_shader_ref" shared="true" deprecated="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="ShaderSource" cname="cogl_shader_source" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="shader" type="gpointer"/>
          <parameter name="source" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="ShaderUnref" cname="cogl_shader_unref" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="Sqrti" cname="cogl_sqrti" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="x" type="gint"/>
        </parameters>
      </method>
      <method name="TextureErrorQuark" cname="cogl_texture_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="TextureRef" cname="cogl_texture_ref" shared="true" deprecated="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="texture" type="gpointer"/>
        </parameters>
      </method>
      <method name="TextureUnref" cname="cogl_texture_unref" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="texture" type="gpointer"/>
        </parameters>
      </method>
      <method name="Transform" cname="cogl_transform" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Translate" cname="cogl_translate" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="VertexBufferAdd" cname="cogl_vertex_buffer_add" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
          <parameter name="attribute_name" type="const-gchar*"/>
          <parameter name="n_components" type="guint8"/>
          <parameter name="type" type="CoglAttributeType"/>
          <parameter name="normalized" type="gboolean"/>
          <parameter name="stride" type="guint16"/>
          <parameter name="pointer" type="gpointer"/>
        </parameters>
      </method>
      <method name="VertexBufferDelete" cname="cogl_vertex_buffer_delete" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
          <parameter name="attribute_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="VertexBufferDisable" cname="cogl_vertex_buffer_disable" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
          <parameter name="attribute_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="VertexBufferDraw" cname="cogl_vertex_buffer_draw" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="first" type="gint"/>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="VertexBufferDrawElements" cname="cogl_vertex_buffer_draw_elements" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="indices" type="gpointer"/>
          <parameter name="min_index" type="gint"/>
          <parameter name="max_index" type="gint"/>
          <parameter name="indices_offset" type="gint"/>
          <parameter name="count" type="gint"/>
        </parameters>
      </method>
      <method name="VertexBufferEnable" cname="cogl_vertex_buffer_enable" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
          <parameter name="attribute_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="VertexBufferGetNVertices" cname="cogl_vertex_buffer_get_n_vertices" shared="true" deprecated="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="VertexBufferIndicesGetForQuads" cname="cogl_vertex_buffer_indices_get_for_quads" shared="true" deprecated="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="n_indices" type="guint"/>
        </parameters>
      </method>
      <method name="VertexBufferIndicesGetType" cname="cogl_vertex_buffer_indices_get_type" shared="true" deprecated="true">
        <return-type type="CoglIndicesType"/>
        <parameters>
          <parameter name="indices" type="gpointer"/>
        </parameters>
      </method>
      <method name="VertexBufferIndicesNew" cname="cogl_vertex_buffer_indices_new" shared="true" deprecated="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="indices_type" type="CoglIndicesType"/>
          <parameter name="indices_array" type="void*" array="true" array_length_param_index="2"/>
          <parameter name="indices_len" type="gint"/>
        </parameters>
      </method>
      <method name="VertexBufferNew" cname="cogl_vertex_buffer_new" shared="true" deprecated="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="n_vertices" type="guint"/>
        </parameters>
      </method>
      <method name="VertexBufferRef" cname="cogl_vertex_buffer_ref" shared="true" deprecated="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="VertexBufferSubmit" cname="cogl_vertex_buffer_submit" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="VertexBufferUnref" cname="cogl_vertex_buffer_unref" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="Viewport" cname="cogl_viewport" shared="true" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="width" type="guint"/>
          <parameter name="height" type="guint"/>
        </parameters>
      </method>
      <method name="XlibRendererAddFilter" cname="cogl_xlib_renderer_add_filter" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="CoglRenderer*"/>
          <parameter closure="2" name="func" type="CoglXlibFilterFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="XlibRendererGetDisplay" cname="cogl_xlib_renderer_get_display" shared="true">
        <return-type type="Display*"/>
        <parameters>
          <parameter name="renderer" type="CoglRenderer*"/>
        </parameters>
      </method>
      <method name="XlibRendererGetForeignDisplay" cname="cogl_xlib_renderer_get_foreign_display" shared="true">
        <return-type type="Display*"/>
        <parameters>
          <parameter name="renderer" type="CoglRenderer*"/>
        </parameters>
      </method>
      <method name="XlibRendererHandleEvent" cname="cogl_xlib_renderer_handle_event" shared="true">
        <return-type type="CoglFilterReturn"/>
        <parameters>
          <parameter name="renderer" type="CoglRenderer*"/>
          <parameter name="event" type="XEvent*"/>
        </parameters>
      </method>
      <method name="XlibRendererRemoveFilter" cname="cogl_xlib_renderer_remove_filter" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="CoglRenderer*"/>
          <parameter closure="2" name="func" type="CoglXlibFilterFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="XlibRendererSetEventRetrievalEnabled" cname="cogl_xlib_renderer_set_event_retrieval_enabled" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="CoglRenderer*"/>
          <parameter name="enable" type="gboolean"/>
        </parameters>
      </method>
      <method name="XlibRendererSetForeignDisplay" cname="cogl_xlib_renderer_set_foreign_display" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="CoglRenderer*"/>
          <parameter name="display" type="Display*"/>
        </parameters>
      </method>
    </object>
    <object name="Constants" cname="CoglConstants" opaque="true">
      <constant value="64" ctype="gint" gtype="gint" name="AFIRST_BIT"/>
      <constant value="16" ctype="gint" gtype="gint" name="A_BIT"/>
      <constant value="32" ctype="gint" gtype="gint" name="BGR_BIT"/>
      <constant value="256" ctype="gint" gtype="gint" name="DEPTH_BIT"/>
      <constant value="32768" ctype="gint" gtype="gint" name="FIXED_0_5"/>
      <constant value="1" ctype="gint" gtype="gint" name="FIXED_1"/>
      <constant value="411775" ctype="gint" gtype="gint" name="FIXED_2_PI"/>
      <constant value="32" ctype="gint" gtype="gint" name="FIXED_BITS"/>
      <constant value="1" ctype="gint" gtype="gint" name="FIXED_EPSILON"/>
      <constant value="2147483647" ctype="gint" gtype="gint" name="FIXED_MAX"/>
      <constant value="2147483648" ctype="gint" gtype="gint" name="FIXED_MIN"/>
      <constant value="205887" ctype="gint" gtype="gint" name="FIXED_PI"/>
      <constant value="102944" ctype="gint" gtype="gint" name="FIXED_PI_2"/>
      <constant value="51472" ctype="gint" gtype="gint" name="FIXED_PI_4"/>
      <constant value="-16" ctype="gint" gtype="gint" name="FIXED_Q"/>
      <constant value="128" ctype="gint" gtype="gint" name="PREMULT_BIT"/>
      <constant value="3754936" ctype="gint" gtype="gint" name="RADIANS_TO_DEGREES"/>
      <constant value="5590" ctype="gint" gtype="gint" name="SQRTI_ARG_10_PERCENT"/>
      <constant value="210" ctype="gint" gtype="gint" name="SQRTI_ARG_5_PERCENT"/>
      <constant value="4194303" ctype="gint" gtype="gint" name="SQRTI_ARG_MAX"/>
      <constant value="512" ctype="gint" gtype="gint" name="STENCIL_BIT"/>
      <constant value="127" ctype="gint" gtype="gint" name="TEXTURE_MAX_WASTE"/>
    </object>
  </namespace>
  <namespace name="Cogl" library="cogl">
    <enum name="AttributeType" cname="CoglAttributeType" type="enum" gtype="cogl_attribute_type_get_type">
      <member cname="COGL_ATTRIBUTE_TYPE_BYTE" name="Byte" value="5120"/>
      <member cname="COGL_ATTRIBUTE_TYPE_UNSIGNED_BYTE" name="UnsignedByte" value="5121"/>
      <member cname="COGL_ATTRIBUTE_TYPE_SHORT" name="Short" value="5122"/>
      <member cname="COGL_ATTRIBUTE_TYPE_UNSIGNED_SHORT" name="UnsignedShort" value="5123"/>
      <member cname="COGL_ATTRIBUTE_TYPE_FLOAT" name="Float" value="5126"/>
    </enum>
    <enum name="BitmapError" cname="CoglBitmapError" type="enum" gtype="cogl_bitmap_error_get_type">
      <member cname="COGL_BITMAP_ERROR_FAILED" name="Failed" value="0"/>
      <member cname="COGL_BITMAP_ERROR_UNKNOWN_TYPE" name="UnknownType" value="1"/>
      <member cname="COGL_BITMAP_ERROR_CORRUPT_IMAGE" name="CorruptImage" value="2"/>
    </enum>
    <enum name="BlendStringError" cname="CoglBlendStringError" type="enum" gtype="cogl_blend_string_error_get_type">
      <member cname="COGL_BLEND_STRING_ERROR_PARSE_ERROR" name="ParseError" value="0"/>
      <member cname="COGL_BLEND_STRING_ERROR_ARGUMENT_PARSE_ERROR" name="ArgumentParseError" value="1"/>
      <member cname="COGL_BLEND_STRING_ERROR_INVALID_ERROR" name="InvalidError" value="2"/>
      <member cname="COGL_BLEND_STRING_ERROR_GPU_UNSUPPORTED_ERROR" name="GpuUnsupportedError" value="3"/>
    </enum>
    <enum name="BufferError" cname="CoglBufferError" type="enum">
      <member cname="COGL_BUFFER_ERROR_MAP" name="BufferErrorMap" value="0"/>
    </enum>
    <enum name="BufferUpdateHint" cname="CoglBufferUpdateHint" type="enum">
      <member cname="COGL_BUFFER_UPDATE_HINT_STATIC" name="Static" value="0"/>
      <member cname="COGL_BUFFER_UPDATE_HINT_DYNAMIC" name="Dynamic" value="1"/>
      <member cname="COGL_BUFFER_UPDATE_HINT_STREAM" name="Stream" value="2"/>
    </enum>
    <enum name="DepthTestFunction" cname="CoglDepthTestFunction" type="enum" gtype="cogl_depth_test_function_get_type">
      <member cname="COGL_DEPTH_TEST_FUNCTION_NEVER" name="Never" value="512"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_LESS" name="Less" value="513"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_EQUAL" name="Equal" value="514"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_LEQUAL" name="Lequal" value="515"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_GREATER" name="Greater" value="516"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_NOTEQUAL" name="Notequal" value="517"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_GEQUAL" name="Gequal" value="518"/>
      <member cname="COGL_DEPTH_TEST_FUNCTION_ALWAYS" name="Always" value="519"/>
    </enum>
    <enum name="Driver" cname="CoglDriver" type="enum">
      <member cname="COGL_DRIVER_ANY" name="Any" value="0"/>
      <member cname="COGL_DRIVER_NOP" name="Nop" value="1"/>
      <member cname="COGL_DRIVER_GL" name="Gl" value="2"/>
      <member cname="COGL_DRIVER_GL3" name="Gl3" value="3"/>
      <member cname="COGL_DRIVER_GLES1" name="Gles1" value="4"/>
      <member cname="COGL_DRIVER_GLES2" name="Gles2" value="5"/>
      <member cname="COGL_DRIVER_WEBGL" name="Webgl" value="6"/>
    </enum>
    <enum name="FeatureID" cname="CoglFeatureID" type="enum">
      <member cname="COGL_FEATURE_ID_TEXTURE_NPOT_BASIC" name="OglFeatureIdTextureNpotBasic" value="1"/>
      <member cname="COGL_FEATURE_ID_TEXTURE_NPOT_MIPMAP" name="OglFeatureIdTextureNpotMipmap" value="2"/>
      <member cname="COGL_FEATURE_ID_TEXTURE_NPOT_REPEAT" name="OglFeatureIdTextureNpotRepeat" value="3"/>
      <member cname="COGL_FEATURE_ID_TEXTURE_NPOT" name="OglFeatureIdTextureNpot" value="4"/>
      <member cname="COGL_FEATURE_ID_TEXTURE_RECTANGLE" name="OglFeatureIdTextureRectangle" value="5"/>
      <member cname="COGL_FEATURE_ID_TEXTURE_3D" name="OglFeatureIdTexture3d" value="6"/>
      <member cname="COGL_FEATURE_ID_GLSL" name="OglFeatureIdGlsl" value="7"/>
      <member cname="COGL_FEATURE_ID_ARBFP" name="OglFeatureIdArbfp" value="8"/>
      <member cname="COGL_FEATURE_ID_OFFSCREEN" name="OglFeatureIdOffscreen" value="9"/>
      <member cname="COGL_FEATURE_ID_OFFSCREEN_MULTISAMPLE" name="OglFeatureIdOffscreenMultisample" value="10"/>
      <member cname="COGL_FEATURE_ID_ONSCREEN_MULTIPLE" name="OglFeatureIdOnscreenMultiple" value="11"/>
      <member cname="COGL_FEATURE_ID_UNSIGNED_INT_INDICES" name="OglFeatureIdUnsignedIntIndices" value="12"/>
      <member cname="COGL_FEATURE_ID_DEPTH_RANGE" name="OglFeatureIdDepthRange" value="13"/>
      <member cname="COGL_FEATURE_ID_POINT_SPRITE" name="OglFeatureIdPointSprite" value="14"/>
      <member cname="COGL_FEATURE_ID_MAP_BUFFER_FOR_READ" name="OglFeatureIdMapBufferForRead" value="15"/>
      <member cname="COGL_FEATURE_ID_MAP_BUFFER_FOR_WRITE" name="OglFeatureIdMapBufferForWrite" value="16"/>
      <member cname="COGL_FEATURE_ID_MIRRORED_REPEAT" name="OglFeatureIdMirroredRepeat" value="17"/>
      <member cname="COGL_FEATURE_ID_SWAP_BUFFERS_EVENT" name="OglFeatureIdSwapBuffersEvent" value="18"/>
      <member cname="COGL_FEATURE_ID_GLES2_CONTEXT" name="OglFeatureIdGles2Context" value="19"/>
      <member cname="COGL_FEATURE_ID_DEPTH_TEXTURE" name="OglFeatureIdDepthTexture" value="20"/>
      <member cname="COGL_FEATURE_ID_PRESENTATION_TIME" name="OglFeatureIdPresentationTime" value="21"/>
      <member cname="COGL_FEATURE_ID_FENCE" name="OglFeatureIdFence" value="22"/>
      <member cname="COGL_FEATURE_ID_PER_VERTEX_POINT_SIZE" name="OglFeatureIdPerVertexPointSize" value="23"/>
      <member cname="COGL_FEATURE_ID_TEXTURE_RG" name="OglFeatureIdTextureRg" value="24"/>
      <member cname="COGL_FEATURE_ID_BUFFER_AGE" name="OglFeatureIdBufferAge" value="25"/>
    </enum>
    <enum name="FilterReturn" cname="CoglFilterReturn" type="enum">
      <member cname="COGL_FILTER_CONTINUE" name="Continue" value="0"/>
      <member cname="COGL_FILTER_REMOVE" name="Remove" value="1"/>
    </enum>
    <enum name="FogMode" cname="CoglFogMode" type="enum" gtype="cogl_fog_mode_get_type">
      <member cname="COGL_FOG_MODE_LINEAR" name="Linear" value="0"/>
      <member cname="COGL_FOG_MODE_EXPONENTIAL" name="Exponential" value="1"/>
      <member cname="COGL_FOG_MODE_EXPONENTIAL_SQUARED" name="ExponentialSquared" value="2"/>
    </enum>
    <enum name="FrameEvent" cname="CoglFrameEvent" type="enum">
      <member cname="COGL_FRAME_EVENT_SYNC" name="Sync" value="1"/>
      <member cname="COGL_FRAME_EVENT_COMPLETE" name="Complete" value="2"/>
    </enum>
    <enum name="FramebufferError" cname="CoglFramebufferError" type="enum">
      <member cname="COGL_FRAMEBUFFER_ERROR_ALLOCATE" name="FramebufferErrorAllocate" value="0"/>
    </enum>
    <enum name="GLES2ContextError" cname="CoglGLES2ContextError" type="enum">
      <member cname="COGL_GLES2_CONTEXT_ERROR_UNSUPPORTED" name="Unsupported" value="0"/>
      <member cname="COGL_GLES2_CONTEXT_ERROR_DRIVER" name="Driver" value="1"/>
    </enum>
    <enum name="IndicesType" cname="CoglIndicesType" type="enum" gtype="cogl_indices_type_get_type">
      <member cname="COGL_INDICES_TYPE_UNSIGNED_BYTE" name="Byte" value="0"/>
      <member cname="COGL_INDICES_TYPE_UNSIGNED_SHORT" name="Short" value="1"/>
      <member cname="COGL_INDICES_TYPE_UNSIGNED_INT" name="Int" value="2"/>
    </enum>
    <enum name="MaterialAlphaFunc" cname="CoglMaterialAlphaFunc" type="enum" gtype="cogl_material_alpha_func_get_type">
      <member cname="COGL_MATERIAL_ALPHA_FUNC_NEVER" name="Never" value="512"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_LESS" name="Less" value="513"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_EQUAL" name="Equal" value="514"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_LEQUAL" name="Lequal" value="515"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_GREATER" name="Greater" value="516"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_NOTEQUAL" name="Notequal" value="517"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_GEQUAL" name="Gequal" value="518"/>
      <member cname="COGL_MATERIAL_ALPHA_FUNC_ALWAYS" name="Always" value="519"/>
    </enum>
    <enum name="MaterialFilter" cname="CoglMaterialFilter" type="enum" gtype="cogl_material_filter_get_type">
      <member cname="COGL_MATERIAL_FILTER_NEAREST" name="Nearest" value="9728"/>
      <member cname="COGL_MATERIAL_FILTER_LINEAR" name="Linear" value="9729"/>
      <member cname="COGL_MATERIAL_FILTER_NEAREST_MIPMAP_NEAREST" name="NearestMipmapNearest" value="9984"/>
      <member cname="COGL_MATERIAL_FILTER_LINEAR_MIPMAP_NEAREST" name="LinearMipmapNearest" value="9985"/>
      <member cname="COGL_MATERIAL_FILTER_NEAREST_MIPMAP_LINEAR" name="NearestMipmapLinear" value="9986"/>
      <member cname="COGL_MATERIAL_FILTER_LINEAR_MIPMAP_LINEAR" name="LinearMipmapLinear" value="9987"/>
    </enum>
    <enum name="MaterialLayerType" cname="CoglMaterialLayerType" type="enum" gtype="cogl_material_layer_type_get_type">
      <member cname="COGL_MATERIAL_LAYER_TYPE_TEXTURE" name="Texture" value="0"/>
    </enum>
    <enum name="MaterialWrapMode" cname="CoglMaterialWrapMode" type="enum" gtype="cogl_material_wrap_mode_get_type">
      <member cname="COGL_MATERIAL_WRAP_MODE_AUTOMATIC" name="Automatic" value="519"/>
      <member cname="COGL_MATERIAL_WRAP_MODE_REPEAT" name="Repeat" value="10497"/>
      <member cname="COGL_MATERIAL_WRAP_MODE_CLAMP_TO_EDGE" name="ClampToEdge" value="33071"/>
    </enum>
    <enum name="PipelineAlphaFunc" cname="CoglPipelineAlphaFunc" type="enum">
      <member cname="COGL_PIPELINE_ALPHA_FUNC_NEVER" name="Never" value="512"/>
      <member cname="COGL_PIPELINE_ALPHA_FUNC_LESS" name="Less" value="513"/>
      <member cname="COGL_PIPELINE_ALPHA_FUNC_EQUAL" name="Equal" value="514"/>
      <member cname="COGL_PIPELINE_ALPHA_FUNC_LEQUAL" name="Lequal" value="515"/>
      <member cname="COGL_PIPELINE_ALPHA_FUNC_GREATER" name="Greater" value="516"/>
      <member cname="COGL_PIPELINE_ALPHA_FUNC_NOTEQUAL" name="Notequal" value="517"/>
      <member cname="COGL_PIPELINE_ALPHA_FUNC_GEQUAL" name="Gequal" value="518"/>
      <member cname="COGL_PIPELINE_ALPHA_FUNC_ALWAYS" name="Always" value="519"/>
    </enum>
    <enum name="PipelineCullFaceMode" cname="CoglPipelineCullFaceMode" type="enum">
      <member cname="COGL_PIPELINE_CULL_FACE_MODE_NONE" name="None" value="0"/>
      <member cname="COGL_PIPELINE_CULL_FACE_MODE_FRONT" name="Front" value="1"/>
      <member cname="COGL_PIPELINE_CULL_FACE_MODE_BACK" name="Back" value="2"/>
      <member cname="COGL_PIPELINE_CULL_FACE_MODE_BOTH" name="Both" value="3"/>
    </enum>
    <enum name="PipelineFilter" cname="CoglPipelineFilter" type="enum">
      <member cname="COGL_PIPELINE_FILTER_NEAREST" name="Nearest" value="9728"/>
      <member cname="COGL_PIPELINE_FILTER_LINEAR" name="Linear" value="9729"/>
      <member cname="COGL_PIPELINE_FILTER_NEAREST_MIPMAP_NEAREST" name="NearestMipmapNearest" value="9984"/>
      <member cname="COGL_PIPELINE_FILTER_LINEAR_MIPMAP_NEAREST" name="LinearMipmapNearest" value="9985"/>
      <member cname="COGL_PIPELINE_FILTER_NEAREST_MIPMAP_LINEAR" name="NearestMipmapLinear" value="9986"/>
      <member cname="COGL_PIPELINE_FILTER_LINEAR_MIPMAP_LINEAR" name="LinearMipmapLinear" value="9987"/>
    </enum>
    <enum name="PipelineWrapMode" cname="CoglPipelineWrapMode" type="enum">
      <member cname="COGL_PIPELINE_WRAP_MODE_AUTOMATIC" name="Automatic" value="519"/>
      <member cname="COGL_PIPELINE_WRAP_MODE_REPEAT" name="Repeat" value="10497"/>
      <member cname="COGL_PIPELINE_WRAP_MODE_CLAMP_TO_EDGE" name="ClampToEdge" value="33071"/>
      <member cname="COGL_PIPELINE_WRAP_MODE_MIRRORED_REPEAT" name="MirroredRepeat" value="33648"/>
    </enum>
    <enum name="PixelFormat" cname="CoglPixelFormat" type="enum" gtype="cogl_pixel_format_get_type">
      <member cname="COGL_PIXEL_FORMAT_ANY" name="Any" value="0"/>
      <member cname="COGL_PIXEL_FORMAT_RGB_888" name="Rgb888" value="2"/>
      <member cname="COGL_PIXEL_FORMAT_RGB_565" name="Rgb565" value="4"/>
      <member cname="COGL_PIXEL_FORMAT_YUV" name="Yuv" value="7"/>
      <member cname="COGL_PIXEL_FORMAT_G_8" name="G8" value="8"/>
      <member cname="COGL_PIXEL_FORMAT_RG_88" name="Rg88" value="9"/>
      <member cname="COGL_PIXEL_FORMAT_A_8" name="A8" value="17"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_8888" name="Rgba8888" value="19"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_4444" name="Rgba4444" value="21"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_5551" name="Rgba5551" value="22"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_1010102" name="Rgba1010102" value="29"/>
      <member cname="COGL_PIXEL_FORMAT_BGR_888" name="Bgr888" value="34"/>
      <member cname="COGL_PIXEL_FORMAT_BGRA_8888" name="Bgra8888" value="51"/>
      <member cname="COGL_PIXEL_FORMAT_BGRA_1010102" name="Bgra1010102" value="61"/>
      <member cname="COGL_PIXEL_FORMAT_ARGB_8888" name="Argb8888" value="83"/>
      <member cname="COGL_PIXEL_FORMAT_ARGB_2101010" name="Argb2101010" value="93"/>
      <member cname="COGL_PIXEL_FORMAT_ABGR_8888" name="Abgr8888" value="115"/>
      <member cname="COGL_PIXEL_FORMAT_ABGR_2101010" name="Abgr2101010" value="125"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_8888_PRE" name="Rgba8888Pre" value="147"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_4444_PRE" name="Rgba4444Pre" value="149"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_5551_PRE" name="Rgba5551Pre" value="150"/>
      <member cname="COGL_PIXEL_FORMAT_RGBA_1010102_PRE" name="Rgba1010102Pre" value="157"/>
      <member cname="COGL_PIXEL_FORMAT_BGRA_8888_PRE" name="Bgra8888Pre" value="179"/>
      <member cname="COGL_PIXEL_FORMAT_BGRA_1010102_PRE" name="Bgra1010102Pre" value="189"/>
      <member cname="COGL_PIXEL_FORMAT_ARGB_8888_PRE" name="Argb8888Pre" value="211"/>
      <member cname="COGL_PIXEL_FORMAT_ARGB_2101010_PRE" name="Argb2101010Pre" value="221"/>
      <member cname="COGL_PIXEL_FORMAT_ABGR_8888_PRE" name="Abgr8888Pre" value="243"/>
      <member cname="COGL_PIXEL_FORMAT_ABGR_2101010_PRE" name="Abgr2101010Pre" value="253"/>
      <member cname="COGL_PIXEL_FORMAT_DEPTH_32" name="Depth32" value="259"/>
      <member cname="COGL_PIXEL_FORMAT_DEPTH_16" name="Depth16" value="265"/>
      <member cname="COGL_PIXEL_FORMAT_DEPTH_24_STENCIL_8" name="Depth24Stencil8" value="771"/>
    </enum>
    <enum name="PollFDEvent" cname="CoglPollFDEvent" type="enum">
      <member cname="COGL_POLL_FD_EVENT_IN" name="In" value="1"/>
      <member cname="COGL_POLL_FD_EVENT_PRI" name="Pri" value="2"/>
      <member cname="COGL_POLL_FD_EVENT_OUT" name="Out" value="4"/>
      <member cname="COGL_POLL_FD_EVENT_ERR" name="Err" value="8"/>
      <member cname="COGL_POLL_FD_EVENT_HUP" name="Hup" value="16"/>
      <member cname="COGL_POLL_FD_EVENT_NVAL" name="Nval" value="32"/>
    </enum>
    <enum name="RendererError" cname="CoglRendererError" type="enum" gtype="cogl_renderer_error_get_type">
      <member cname="COGL_RENDERER_ERROR_XLIB_DISPLAY_OPEN" name="XlibDisplayOpen" value="0"/>
      <member cname="COGL_RENDERER_ERROR_BAD_CONSTRAINT" name="BadConstraint" value="1"/>
    </enum>
    <enum name="ShaderType" cname="CoglShaderType" type="enum" gtype="cogl_shader_type_get_type">
      <member cname="COGL_SHADER_TYPE_VERTEX" name="Vertex" value="0"/>
      <member cname="COGL_SHADER_TYPE_FRAGMENT" name="Fragment" value="1"/>
    </enum>
    <enum name="SnippetHook" cname="CoglSnippetHook" type="enum">
      <member cname="COGL_SNIPPET_HOOK_VERTEX" name="Vertex" value="0"/>
      <member cname="COGL_SNIPPET_HOOK_VERTEX_TRANSFORM" name="VertexTransform" value="1"/>
      <member cname="COGL_SNIPPET_HOOK_VERTEX_GLOBALS" name="VertexGlobals" value="2"/>
      <member cname="COGL_SNIPPET_HOOK_POINT_SIZE" name="PointSize" value="3"/>
      <member cname="COGL_SNIPPET_HOOK_FRAGMENT" name="Fragment" value="2048"/>
      <member cname="COGL_SNIPPET_HOOK_FRAGMENT_GLOBALS" name="FragmentGlobals" value="2049"/>
      <member cname="COGL_SNIPPET_HOOK_TEXTURE_COORD_TRANSFORM" name="TextureCoordTransform" value="4096"/>
      <member cname="COGL_SNIPPET_HOOK_LAYER_FRAGMENT" name="LayerFragment" value="6144"/>
      <member cname="COGL_SNIPPET_HOOK_TEXTURE_LOOKUP" name="TextureLookup" value="6145"/>
    </enum>
    <enum name="SubpixelOrder" cname="CoglSubpixelOrder" type="enum">
      <member cname="COGL_SUBPIXEL_ORDER_UNKNOWN" name="Unknown" value="0"/>
      <member cname="COGL_SUBPIXEL_ORDER_NONE" name="None" value="1"/>
      <member cname="COGL_SUBPIXEL_ORDER_HORIZONTAL_RGB" name="HorizontalRgb" value="2"/>
      <member cname="COGL_SUBPIXEL_ORDER_HORIZONTAL_BGR" name="HorizontalBgr" value="3"/>
      <member cname="COGL_SUBPIXEL_ORDER_VERTICAL_RGB" name="VerticalRgb" value="4"/>
      <member cname="COGL_SUBPIXEL_ORDER_VERTICAL_BGR" name="VerticalBgr" value="5"/>
    </enum>
    <enum name="SystemError" cname="CoglSystemError" type="enum" gtype="cogl_system_error_get_type">
      <member cname="COGL_SYSTEM_ERROR_UNSUPPORTED" name="CoglSystemErrorUnsupported" value="0"/>
      <member cname="COGL_SYSTEM_ERROR_NO_MEMORY" name="CoglSystemErrorNoMemory" value="1"/>
    </enum>
    <enum name="TextureComponents" cname="CoglTextureComponents" type="enum" gtype="cogl_texture_components_get_type">
      <member cname="COGL_TEXTURE_COMPONENTS_A" name="A" value="1"/>
      <member cname="COGL_TEXTURE_COMPONENTS_RG" name="Rg" value="2"/>
      <member cname="COGL_TEXTURE_COMPONENTS_RGB" name="Rgb" value="3"/>
      <member cname="COGL_TEXTURE_COMPONENTS_RGBA" name="Rgba" value="4"/>
      <member cname="COGL_TEXTURE_COMPONENTS_DEPTH" name="Depth" value="5"/>
    </enum>
    <enum name="TextureError" cname="CoglTextureError" type="enum" gtype="cogl_texture_error_get_type">
      <member cname="COGL_TEXTURE_ERROR_SIZE" name="Size" value="0"/>
      <member cname="COGL_TEXTURE_ERROR_FORMAT" name="Format" value="1"/>
      <member cname="COGL_TEXTURE_ERROR_BAD_PARAMETER" name="BadParameter" value="2"/>
      <member cname="COGL_TEXTURE_ERROR_TYPE" name="Type" value="3"/>
    </enum>
    <enum name="TexturePixmapX11Error" cname="CoglTexturePixmapX11Error" type="enum">
      <member cname="COGL_TEXTURE_PIXMAP_X11_ERROR_X11" name="TexturePixmapX11ErrorX11" value="0"/>
    </enum>
    <enum name="TexturePixmapX11ReportLevel" cname="CoglTexturePixmapX11ReportLevel" type="enum">
      <member cname="COGL_TEXTURE_PIXMAP_X11_DAMAGE_RAW_RECTANGLES" name="RawRectangles" value="0"/>
      <member cname="COGL_TEXTURE_PIXMAP_X11_DAMAGE_DELTA_RECTANGLES" name="DeltaRectangles" value="1"/>
      <member cname="COGL_TEXTURE_PIXMAP_X11_DAMAGE_BOUNDING_BOX" name="BoundingBox" value="2"/>
      <member cname="COGL_TEXTURE_PIXMAP_X11_DAMAGE_NON_EMPTY" name="NonEmpty" value="3"/>
    </enum>
    <enum name="TextureType" cname="CoglTextureType" type="enum" gtype="cogl_texture_type_get_type">
      <member cname="COGL_TEXTURE_TYPE_2D" name="2d" value="0"/>
      <member cname="COGL_TEXTURE_TYPE_3D" name="3d" value="1"/>
      <member cname="COGL_TEXTURE_TYPE_RECTANGLE" name="Rectangle" value="2"/>
    </enum>
    <enum name="VerticesMode" cname="CoglVerticesMode" type="enum" gtype="cogl_vertices_mode_get_type">
      <member cname="COGL_VERTICES_MODE_POINTS" name="Points" value="0"/>
      <member cname="COGL_VERTICES_MODE_LINES" name="Lines" value="1"/>
      <member cname="COGL_VERTICES_MODE_LINE_LOOP" name="LineLoop" value="2"/>
      <member cname="COGL_VERTICES_MODE_LINE_STRIP" name="LineStrip" value="3"/>
      <member cname="COGL_VERTICES_MODE_TRIANGLES" name="Triangles" value="4"/>
      <member cname="COGL_VERTICES_MODE_TRIANGLE_STRIP" name="TriangleStrip" value="5"/>
      <member cname="COGL_VERTICES_MODE_TRIANGLE_FAN" name="TriangleFan" value="6"/>
    </enum>
    <enum name="Winding" cname="CoglWinding" type="enum" gtype="cogl_winding_get_type">
      <member cname="COGL_WINDING_CLOCKWISE" name="Clockwise" value="0"/>
      <member cname="COGL_WINDING_COUNTER_CLOCKWISE" name="CounterClockwise" value="1"/>
    </enum>
    <enum name="WinsysFeature" cname="CoglWinsysFeature" type="enum" gtype="cogl_winsys_feature_get_type">
      <member cname="COGL_WINSYS_FEATURE_MULTIPLE_ONSCREEN" name="MultipleOnscreen" value="0"/>
      <member cname="COGL_WINSYS_FEATURE_SWAP_THROTTLE" name="SwapThrottle" value="1"/>
      <member cname="COGL_WINSYS_FEATURE_VBLANK_COUNTER" name="VblankCounter" value="2"/>
      <member cname="COGL_WINSYS_FEATURE_VBLANK_WAIT" name="VblankWait" value="3"/>
      <member cname="COGL_WINSYS_FEATURE_TEXTURE_FROM_PIXMAP" name="TextureFromPixmap" value="4"/>
      <member cname="COGL_WINSYS_FEATURE_SWAP_BUFFERS_EVENT" name="SwapBuffersEvent" value="5"/>
      <member cname="COGL_WINSYS_FEATURE_SWAP_REGION" name="SwapRegion" value="6"/>
      <member cname="COGL_WINSYS_FEATURE_SWAP_REGION_THROTTLE" name="SwapRegionThrottle" value="7"/>
      <member cname="COGL_WINSYS_FEATURE_SWAP_REGION_SYNCHRONIZED" name="SwapRegionSynchronized" value="8"/>
      <member cname="COGL_WINSYS_FEATURE_BUFFER_AGE" name="BufferAge" value="9"/>
      <member cname="COGL_WINSYS_FEATURE_SYNC_AND_COMPLETE_EVENT" name="SyncAndCompleteEvent" value="10"/>
      <member cname="COGL_WINSYS_FEATURE_N_FEATURES" name="NFeatures" value="11"/>
    </enum>
    <enum name="WinsysID" cname="CoglWinsysID" type="enum">
      <member cname="COGL_WINSYS_ID_ANY" name="Any" value="0"/>
      <member cname="COGL_WINSYS_ID_STUB" name="Stub" value="1"/>
      <member cname="COGL_WINSYS_ID_GLX" name="Glx" value="2"/>
      <member cname="COGL_WINSYS_ID_EGL_XLIB" name="EglXlib" value="3"/>
      <member cname="COGL_WINSYS_ID_EGL_NULL" name="EglNull" value="4"/>
      <member cname="COGL_WINSYS_ID_EGL_GDL" name="EglGdl" value="5"/>
      <member cname="COGL_WINSYS_ID_EGL_WAYLAND" name="EglWayland" value="6"/>
      <member cname="COGL_WINSYS_ID_EGL_KMS" name="EglKms" value="7"/>
      <member cname="COGL_WINSYS_ID_EGL_ANDROID" name="EglAndroid" value="8"/>
      <member cname="COGL_WINSYS_ID_WGL" name="Wgl" value="9"/>
      <member cname="COGL_WINSYS_ID_SDL" name="Sdl" value="10"/>
    </enum>
    <enum name="BufferAccess" cname="CoglBufferAccess" type="flags">
      <member cname="COGL_BUFFER_ACCESS_READ" name="Read" value="1"/>
      <member cname="COGL_BUFFER_ACCESS_WRITE" name="Write" value="2"/>
      <member cname="COGL_BUFFER_ACCESS_READ_WRITE" name="ReadWrite" value="3"/>
    </enum>
    <enum name="BufferBit" cname="CoglBufferBit" type="flags" gtype="cogl_buffer_bit_get_type">
      <member cname="COGL_BUFFER_BIT_COLOR" name="Color" value="1"/>
      <member cname="COGL_BUFFER_BIT_DEPTH" name="Depth" value="2"/>
      <member cname="COGL_BUFFER_BIT_STENCIL" name="Stencil" value="4"/>
    </enum>
    <enum name="BufferMapHint" cname="CoglBufferMapHint" type="flags">
      <member cname="COGL_BUFFER_MAP_HINT_DISCARD" name="" value="1"/>
      <member cname="COGL_BUFFER_MAP_HINT_DISCARD_RANGE" name="_Range" value="2"/>
    </enum>
    <enum name="BufferTarget" cname="CoglBufferTarget" type="flags" gtype="cogl_buffer_target_get_type">
      <member cname="COGL_WINDOW_BUFFER" name="WindowBuffer" value="2"/>
      <member cname="COGL_OFFSCREEN_BUFFER" name="OffscreenBuffer" value="4"/>
    </enum>
    <enum name="ColorMask" cname="CoglColorMask" type="flags" gtype="cogl_color_mask_get_type">
      <member cname="COGL_COLOR_MASK_NONE" name="None" value="0"/>
      <member cname="COGL_COLOR_MASK_RED" name="Red" value="1"/>
      <member cname="COGL_COLOR_MASK_GREEN" name="Green" value="2"/>
      <member cname="COGL_COLOR_MASK_BLUE" name="Blue" value="4"/>
      <member cname="COGL_COLOR_MASK_ALPHA" name="Alpha" value="8"/>
      <member cname="COGL_COLOR_MASK_ALL" name="All" value="15"/>
    </enum>
    <enum name="FeatureFlags" cname="CoglFeatureFlags" type="flags" gtype="cogl_feature_flags_get_type">
      <member cname="COGL_FEATURE_TEXTURE_RECTANGLE" name="TextureRectangle" value="2"/>
      <member cname="COGL_FEATURE_TEXTURE_NPOT" name="TextureNpot" value="4"/>
      <member cname="COGL_FEATURE_TEXTURE_YUV" name="TextureYuv" value="8"/>
      <member cname="COGL_FEATURE_TEXTURE_READ_PIXELS" name="TextureReadPixels" value="16"/>
      <member cname="COGL_FEATURE_SHADERS_GLSL" name="ShadersGlsl" value="32"/>
      <member cname="COGL_FEATURE_OFFSCREEN" name="Offscreen" value="64"/>
      <member cname="COGL_FEATURE_OFFSCREEN_MULTISAMPLE" name="OffscreenMultisample" value="128"/>
      <member cname="COGL_FEATURE_OFFSCREEN_BLIT" name="OffscreenBlit" value="256"/>
      <member cname="COGL_FEATURE_FOUR_CLIP_PLANES" name="FourClipPlanes" value="512"/>
      <member cname="COGL_FEATURE_STENCIL_BUFFER" name="StencilBuffer" value="1024"/>
      <member cname="COGL_FEATURE_VBOS" name="Vbos" value="2048"/>
      <member cname="COGL_FEATURE_PBOS" name="Pbos" value="4096"/>
      <member cname="COGL_FEATURE_UNSIGNED_INT_INDICES" name="UnsignedIntIndices" value="8192"/>
      <member cname="COGL_FEATURE_DEPTH_RANGE" name="DepthRange" value="16384"/>
      <member cname="COGL_FEATURE_TEXTURE_NPOT_BASIC" name="TextureNpotBasic" value="32768"/>
      <member cname="COGL_FEATURE_TEXTURE_NPOT_MIPMAP" name="TextureNpotMipmap" value="65536"/>
      <member cname="COGL_FEATURE_TEXTURE_NPOT_REPEAT" name="TextureNpotRepeat" value="131072"/>
      <member cname="COGL_FEATURE_POINT_SPRITE" name="PointSprite" value="262144"/>
      <member cname="COGL_FEATURE_TEXTURE_3D" name="Texture3d" value="524288"/>
      <member cname="COGL_FEATURE_SHADERS_ARBFP" name="ShadersArbfp" value="1048576"/>
      <member cname="COGL_FEATURE_MAP_BUFFER_FOR_READ" name="MapBufferForRead" value="2097152"/>
      <member cname="COGL_FEATURE_MAP_BUFFER_FOR_WRITE" name="MapBufferForWrite" value="4194304"/>
      <member cname="COGL_FEATURE_ONSCREEN_MULTIPLE" name="OnscreenMultiple" value="8388608"/>
      <member cname="COGL_FEATURE_DEPTH_TEXTURE" name="DepthTexture" value="16777216"/>
    </enum>
    <enum name="ReadPixelsFlags" cname="CoglReadPixelsFlags" type="flags" gtype="cogl_read_pixels_flags_get_type">
      <member cname="COGL_READ_PIXELS_COLOR_BUFFER" name="ColorBuffer" value="1"/>
    </enum>
    <enum name="RendererConstraint" cname="CoglRendererConstraint" type="flags">
      <member cname="COGL_RENDERER_CONSTRAINT_USES_X11" name="UsesX11" value="1"/>
      <member cname="COGL_RENDERER_CONSTRAINT_USES_XLIB" name="UsesXlib" value="2"/>
      <member cname="COGL_RENDERER_CONSTRAINT_USES_EGL" name="UsesEgl" value="4"/>
      <member cname="COGL_RENDERER_CONSTRAINT_SUPPORTS_COGL_GLES2" name="SupportsCoglGles2" value="8"/>
    </enum>
    <enum name="TextureFlags" cname="CoglTextureFlags" type="flags" gtype="cogl_texture_flags_get_type">
      <member cname="COGL_TEXTURE_NONE" name="None" value="0"/>
      <member cname="COGL_TEXTURE_NO_AUTO_MIPMAP" name="NoAutoMipmap" value="1"/>
      <member cname="COGL_TEXTURE_NO_SLICING" name="NoSlicing" value="2"/>
      <member cname="COGL_TEXTURE_NO_ATLAS" name="NoAtlas" value="4"/>
    </enum>
    <callback name="DebugObjectForeachTypeCallback" cname="CoglDebugObjectForeachTypeCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="info" type="CoglDebugObjectTypeInfo*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="FeatureCallback" cname="CoglFeatureCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="feature" type="CoglFeatureID"/>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="FenceCallback" cname="CoglFenceCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="fence" type="CoglFence*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="FrameCallback" cname="CoglFrameCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="onscreen" type="CoglOnscreen*"/>
        <parameter name="event" type="CoglFrameEvent"/>
        <parameter name="info" type="CoglFrameInfo*"/>
        <parameter closure="3" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="FuncPtr" cname="CoglFuncPtr">
      <return-type type="void"/>
    </callback>
    <callback name="MetaTextureCallback" cname="CoglMetaTextureCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="sub_texture" type="CoglTexture*"/>
        <parameter name="sub_texture_coords" type="gfloat"/>
        <parameter name="meta_coords" type="gfloat"/>
        <parameter closure="3" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="OnscreenDirtyCallback" cname="CoglOnscreenDirtyCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="onscreen" type="CoglOnscreen*"/>
        <parameter name="info" type="CoglOnscreenDirtyInfo*">
          <warning>missing glib:type-name</warning>
        </parameter>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="OnscreenResizeCallback" cname="CoglOnscreenResizeCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="onscreen" type="CoglOnscreen*"/>
        <parameter name="width" type="gint"/>
        <parameter name="height" type="gint"/>
        <parameter closure="3" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="OnscreenX11MaskCallback" cname="CoglOnscreenX11MaskCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="onscreen" type="CoglOnscreen*"/>
        <parameter name="event_mask" type="guint32"/>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="OutputCallback" cname="CoglOutputCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="output" type="CoglOutput*"/>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PipelineLayerCallback" cname="CoglPipelineLayerCallback">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="pipeline" type="CoglPipeline*"/>
        <parameter name="layer_index" type="gint"/>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="PrimitiveAttributeCallback" cname="CoglPrimitiveAttributeCallback">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="primitive" type="CoglPrimitive*"/>
        <parameter name="attribute" type="CoglAttribute*"/>
        <parameter closure="2" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="SwapBuffersNotify" cname="CoglSwapBuffersNotify">
      <return-type type="void"/>
      <parameters>
        <parameter name="framebuffer" type="CoglFramebuffer*"/>
        <parameter closure="1" name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <interface name="Framebuffer" cname="CoglFramebuffer" opaque="false" hidden="false" consume_only="true">
      <method name="GetType" cname="cogl_framebuffer_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="ErrorQuark" cname="cogl_framebuffer_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="AddFenceCallback" cname="cogl_framebuffer_add_fence_callback">
        <return-type type="CoglFenceClosure*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter closure="1" scope="notified" name="callback" type="CoglFenceCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="Allocate" cname="cogl_framebuffer_allocate">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="CancelFenceCallback" cname="cogl_framebuffer_cancel_fence_callback">
        <return-type type="void"/>
        <parameters>
          <parameter name="closure" type="CoglFenceClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Clear" cname="cogl_framebuffer_clear">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffers" type="gulong"/>
          <parameter name="color" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Clear4f" cname="cogl_framebuffer_clear4f">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffers" type="gulong"/>
          <parameter name="red" type="gfloat"/>
          <parameter name="green" type="gfloat"/>
          <parameter name="blue" type="gfloat"/>
          <parameter name="alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="DiscardBuffers" cname="cogl_framebuffer_discard_buffers">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffers" type="gulong"/>
        </parameters>
      </method>
      <method name="DrawAttributes" cname="cogl_framebuffer_draw_attributes" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="pipeline" type="CoglPipeline*"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="first_vertex" type="gint"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="attributes" type="CoglAttribute*"/>
          <parameter name="n_attributes" type="gint"/>
        </parameters>
      </method>
      <method name="DrawIndexedAttributes" cname="cogl_framebuffer_draw_indexed_attributes" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="pipeline" type="CoglPipeline*"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="first_vertex" type="gint"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="indices" type="CoglIndices*"/>
          <parameter name="attributes" type="CoglAttribute*"/>
          <parameter name="n_attributes" type="gint"/>
        </parameters>
      </method>
      <method name="DrawMultitexturedRectangle" cname="cogl_framebuffer_draw_multitextured_rectangle">
        <return-type type="void"/>
        <parameters>
          <parameter name="pipeline" type="CoglPipeline*"/>
          <parameter name="x_1" type="gfloat"/>
          <parameter name="y_1" type="gfloat"/>
          <parameter name="x_2" type="gfloat"/>
          <parameter name="y_2" type="gfloat"/>
          <parameter name="tex_coords" type="float*" array="true"/>
          <parameter name="tex_coords_len" type="gint"/>
        </parameters>
      </method>
      <method name="DrawPrimitive" cname="cogl_framebuffer_draw_primitive" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="pipeline" type="CoglPipeline*"/>
          <parameter name="primitive" type="CoglPrimitive*"/>
        </parameters>
      </method>
      <method name="DrawRectangle" cname="cogl_framebuffer_draw_rectangle">
        <return-type type="void"/>
        <parameters>
          <parameter name="pipeline" type="CoglPipeline*"/>
          <parameter name="x_1" type="gfloat"/>
          <parameter name="y_1" type="gfloat"/>
          <parameter name="x_2" type="gfloat"/>
          <parameter name="y_2" type="gfloat"/>
        </parameters>
      </method>
      <method name="DrawRectangles" cname="cogl_framebuffer_draw_rectangles">
        <return-type type="void"/>
        <parameters>
          <parameter name="pipeline" type="CoglPipeline*"/>
          <parameter name="coordinates" type="float*" array="true"/>
          <parameter name="n_rectangles" type="guint"/>
        </parameters>
      </method>
      <method name="DrawTexturedRectangle" cname="cogl_framebuffer_draw_textured_rectangle">
        <return-type type="void"/>
        <parameters>
          <parameter name="pipeline" type="CoglPipeline*"/>
          <parameter name="x_1" type="gfloat"/>
          <parameter name="y_1" type="gfloat"/>
          <parameter name="x_2" type="gfloat"/>
          <parameter name="y_2" type="gfloat"/>
          <parameter name="s_1" type="gfloat"/>
          <parameter name="t_1" type="gfloat"/>
          <parameter name="s_2" type="gfloat"/>
          <parameter name="t_2" type="gfloat"/>
        </parameters>
      </method>
      <method name="DrawTexturedRectangles" cname="cogl_framebuffer_draw_textured_rectangles">
        <return-type type="void"/>
        <parameters>
          <parameter name="pipeline" type="CoglPipeline*"/>
          <parameter name="coordinates" type="float*" array="true"/>
          <parameter name="n_rectangles" type="guint"/>
        </parameters>
      </method>
      <method name="Finish" cname="cogl_framebuffer_finish">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Frustum" cname="cogl_framebuffer_frustum">
        <return-type type="void"/>
        <parameters>
          <parameter name="left" type="gfloat"/>
          <parameter name="right" type="gfloat"/>
          <parameter name="bottom" type="gfloat"/>
          <parameter name="top" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_far" type="gfloat"/>
        </parameters>
      </method>
      <method name="GetAlphaBits" cname="cogl_framebuffer_get_alpha_bits">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetBlueBits" cname="cogl_framebuffer_get_blue_bits">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetColorMask" cname="cogl_framebuffer_get_color_mask">
        <return-type type="CoglColorMask"/>
        <parameters/>
      </method>
      <method name="GetContext" cname="cogl_framebuffer_get_context">
        <return-type type="CoglContext*"/>
        <parameters/>
      </method>
      <method name="GetDepthBits" cname="cogl_framebuffer_get_depth_bits">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetDepthTexture" cname="cogl_framebuffer_get_depth_texture">
        <return-type type="CoglTexture*"/>
        <parameters/>
      </method>
      <method name="GetDepthTextureEnabled" cname="cogl_framebuffer_get_depth_texture_enabled">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetDepthWriteEnabled" cname="cogl_framebuffer_get_depth_write_enabled">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetDitherEnabled" cname="cogl_framebuffer_get_dither_enabled">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetGreenBits" cname="cogl_framebuffer_get_green_bits">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetHeight" cname="cogl_framebuffer_get_height">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetModelviewMatrix" cname="cogl_framebuffer_get_modelview_matrix">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetProjectionMatrix" cname="cogl_framebuffer_get_projection_matrix">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetRedBits" cname="cogl_framebuffer_get_red_bits">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetSamplesPerPixel" cname="cogl_framebuffer_get_samples_per_pixel">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetViewport4fv" cname="cogl_framebuffer_get_viewport4fv">
        <return-type type="void"/>
        <parameters>
          <parameter name="viewport" type="float*" pass_as="out" array="true" array_len="4"/>
        </parameters>
      </method>
      <method name="GetViewportHeight" cname="cogl_framebuffer_get_viewport_height">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetViewportWidth" cname="cogl_framebuffer_get_viewport_width">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetViewportX" cname="cogl_framebuffer_get_viewport_x">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetViewportY" cname="cogl_framebuffer_get_viewport_y">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetWidth" cname="cogl_framebuffer_get_width">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="IdentityMatrix" cname="cogl_framebuffer_identity_matrix">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Orthographic" cname="cogl_framebuffer_orthographic">
        <return-type type="void"/>
        <parameters>
          <parameter name="x_1" type="gfloat"/>
          <parameter name="y_1" type="gfloat"/>
          <parameter name="x_2" type="gfloat"/>
          <parameter name="y_2" type="gfloat"/>
          <parameter name="near" type="gfloat"/>
          <parameter name="far" type="gfloat"/>
        </parameters>
      </method>
      <method name="Perspective" cname="cogl_framebuffer_perspective">
        <return-type type="void"/>
        <parameters>
          <parameter name="fov_y" type="gfloat"/>
          <parameter name="aspect" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_far" type="gfloat"/>
        </parameters>
      </method>
      <method name="PopClip" cname="cogl_framebuffer_pop_clip">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="PopMatrix" cname="cogl_framebuffer_pop_matrix">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="PushMatrix" cname="cogl_framebuffer_push_matrix">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="PushPrimitiveClip" cname="cogl_framebuffer_push_primitive_clip">
        <return-type type="void"/>
        <parameters>
          <parameter name="primitive" type="CoglPrimitive*"/>
          <parameter name="bounds_x1" type="gfloat"/>
          <parameter name="bounds_y1" type="gfloat"/>
          <parameter name="bounds_x2" type="gfloat"/>
          <parameter name="bounds_y2" type="gfloat"/>
        </parameters>
      </method>
      <method name="PushRectangleClip" cname="cogl_framebuffer_push_rectangle_clip">
        <return-type type="void"/>
        <parameters>
          <parameter name="x_1" type="gfloat"/>
          <parameter name="y_1" type="gfloat"/>
          <parameter name="x_2" type="gfloat"/>
          <parameter name="y_2" type="gfloat"/>
        </parameters>
      </method>
      <method name="PushScissorClip" cname="cogl_framebuffer_push_scissor_clip">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="ReadPixels" cname="cogl_framebuffer_read_pixels">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="format" type="CoglPixelFormat"/>
          <parameter name="pixels" type="guint8"/>
        </parameters>
      </method>
      <method name="ReadPixelsIntoBitmap" cname="cogl_framebuffer_read_pixels_into_bitmap">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="source" type="CoglReadPixelsFlags"/>
          <parameter name="bitmap" type="CoglBitmap*"/>
        </parameters>
      </method>
      <method name="ResolveSamples" cname="cogl_framebuffer_resolve_samples">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="ResolveSamplesRegion" cname="cogl_framebuffer_resolve_samples_region">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="Rotate" cname="cogl_framebuffer_rotate">
        <return-type type="void"/>
        <parameters>
          <parameter name="angle" type="gfloat"/>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="RotateEuler" cname="cogl_framebuffer_rotate_euler">
        <return-type type="void"/>
        <parameters>
          <parameter name="euler" type="CoglEuler*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RotateQuaternion" cname="cogl_framebuffer_rotate_quaternion">
        <return-type type="void"/>
        <parameters>
          <parameter name="quaternion" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Scale" cname="cogl_framebuffer_scale">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetColorMask" cname="cogl_framebuffer_set_color_mask">
        <return-type type="void"/>
        <parameters>
          <parameter name="color_mask" type="CoglColorMask"/>
        </parameters>
      </method>
      <method name="SetDepthTextureEnabled" cname="cogl_framebuffer_set_depth_texture_enabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDepthWriteEnabled" cname="cogl_framebuffer_set_depth_write_enabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="depth_write_enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetDitherEnabled" cname="cogl_framebuffer_set_dither_enabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="dither_enabled" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetModelviewMatrix" cname="cogl_framebuffer_set_modelview_matrix">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetProjectionMatrix" cname="cogl_framebuffer_set_projection_matrix">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetSamplesPerPixel" cname="cogl_framebuffer_set_samples_per_pixel">
        <return-type type="void"/>
        <parameters>
          <parameter name="samples_per_pixel" type="gint"/>
        </parameters>
      </method>
      <method name="SetViewport" cname="cogl_framebuffer_set_viewport">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="width" type="gfloat"/>
          <parameter name="height" type="gfloat"/>
        </parameters>
      </method>
      <method name="Transform" cname="cogl_framebuffer_transform">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Translate" cname="cogl_framebuffer_translate">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="VdrawAttributes" cname="cogl_framebuffer_vdraw_attributes" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="pipeline" type="CoglPipeline*"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="first_vertex" type="gint"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="..." type="va_list"/>
        </parameters>
      </method>
      <method name="VdrawIndexedAttributes" cname="cogl_framebuffer_vdraw_indexed_attributes" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="pipeline" type="CoglPipeline*"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="first_vertex" type="gint"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="indices" type="CoglIndices*"/>
          <parameter name="..." type="va_list"/>
        </parameters>
      </method>
    </interface>
    <interface name="Texture" cname="CoglTexture" opaque="false" hidden="false" consume_only="true">
      <method name="GetType" cname="cogl_texture_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Allocate" cname="cogl_texture_allocate">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="GetComponents" cname="cogl_texture_get_components">
        <return-type type="CoglTextureComponents"/>
        <parameters/>
      </method>
      <method name="GetData" cname="cogl_texture_get_data">
        <return-type type="gint"/>
        <parameters>
          <parameter name="format" type="CoglPixelFormat"/>
          <parameter name="rowstride" type="guint"/>
          <parameter name="data" type="guint8"/>
        </parameters>
      </method>
      <method name="GetGlTexture" cname="cogl_texture_get_gl_texture">
        <return-type type="gboolean"/>
        <parameters>
          <parameter allow-none="1" name="out_gl_handle" type="guint*" owned="true" pass_as="out"/>
          <parameter allow-none="1" name="out_gl_target" type="guint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetHeight" cname="cogl_texture_get_height">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="GetMaxWaste" cname="cogl_texture_get_max_waste">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetPremultiplied" cname="cogl_texture_get_premultiplied">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetWidth" cname="cogl_texture_get_width">
        <return-type type="guint"/>
        <parameters/>
      </method>
      <method name="IsSliced" cname="cogl_texture_is_sliced">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetComponents" cname="cogl_texture_set_components">
        <return-type type="void"/>
        <parameters>
          <parameter name="components" type="CoglTextureComponents"/>
        </parameters>
      </method>
      <method name="SetData" cname="cogl_texture_set_data">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="format" type="CoglPixelFormat"/>
          <parameter name="rowstride" type="gint"/>
          <parameter name="data" type="guint8"/>
          <parameter name="level" type="gint"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetPremultiplied" cname="cogl_texture_set_premultiplied">
        <return-type type="void"/>
        <parameters>
          <parameter name="premultiplied" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetRegion" cname="cogl_texture_set_region">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_x" type="gint"/>
          <parameter name="src_y" type="gint"/>
          <parameter name="dst_x" type="gint"/>
          <parameter name="dst_y" type="gint"/>
          <parameter name="dst_width" type="guint"/>
          <parameter name="dst_height" type="guint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="format" type="CoglPixelFormat"/>
          <parameter name="rowstride" type="guint"/>
          <parameter name="data" type="guint8"/>
        </parameters>
      </method>
      <method name="SetRegionFromBitmap" cname="cogl_texture_set_region_from_bitmap">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="src_x" type="gint"/>
          <parameter name="src_y" type="gint"/>
          <parameter name="dst_x" type="gint"/>
          <parameter name="dst_y" type="gint"/>
          <parameter name="dst_width" type="guint"/>
          <parameter name="dst_height" type="guint"/>
          <parameter name="bitmap" type="CoglBitmap*"/>
        </parameters>
      </method>
    </interface>
    <struct name="AtlasTexture" cname="CoglAtlasTexture" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_atlas_texture_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_atlas_texture_new_from_bitmap">
        <parameters>
          <parameter name="bmp" type="CoglBitmap*"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_atlas_texture_new_from_data">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="format" type="CoglPixelFormat"/>
          <parameter name="rowstride" type="gint"/>
          <parameter name="data" type="guint8"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_atlas_texture_new_from_file">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_atlas_texture_new_with_size">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </constructor>
    </struct>
    <struct name="Attribute" cname="CoglAttribute" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_attribute_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_attribute_new">
        <parameters>
          <parameter name="attribute_buffer" type="CoglAttributeBuffer*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="stride" type="gulong"/>
          <parameter name="offset" type="gulong"/>
          <parameter name="components" type="gint"/>
          <parameter name="type" type="CoglAttributeType"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_attribute_new_const_1f">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="gfloat"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_attribute_new_const_2f">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="component0" type="gfloat"/>
          <parameter name="component1" type="gfloat"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_attribute_new_const_2fv">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="gfloat"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_attribute_new_const_2x2fv">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="matrix2x2" type="gfloat"/>
          <parameter name="transpose" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_attribute_new_const_3f">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="component0" type="gfloat"/>
          <parameter name="component1" type="gfloat"/>
          <parameter name="component2" type="gfloat"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_attribute_new_const_3fv">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="gfloat"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_attribute_new_const_3x3fv">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="matrix3x3" type="gfloat"/>
          <parameter name="transpose" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_attribute_new_const_4f">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="component0" type="gfloat"/>
          <parameter name="component1" type="gfloat"/>
          <parameter name="component2" type="gfloat"/>
          <parameter name="component3" type="gfloat"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_attribute_new_const_4fv">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="gfloat"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_attribute_new_const_4x4fv">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="matrix4x4" type="gfloat"/>
          <parameter name="transpose" type="gboolean"/>
        </parameters>
      </constructor>
      <method name="GetBuffer" cname="cogl_attribute_get_buffer">
        <return-type type="CoglAttributeBuffer*"/>
        <parameters/>
      </method>
      <method name="GetNormalized" cname="cogl_attribute_get_normalized">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetBuffer" cname="cogl_attribute_set_buffer">
        <return-type type="void"/>
        <parameters>
          <parameter name="attribute_buffer" type="CoglAttributeBuffer*"/>
        </parameters>
      </method>
      <method name="SetNormalized" cname="cogl_attribute_set_normalized">
        <return-type type="void"/>
        <parameters>
          <parameter name="normalized" type="gboolean"/>
        </parameters>
      </method>
    </struct>
    <struct name="AttributeBuffer" cname="CoglAttributeBuffer" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_attribute_buffer_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_attribute_buffer_new">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="bytes" type="gulong"/>
          <parameter name="data" type="void*" array="true" array_length_param_index="1"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_attribute_buffer_new_with_size">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="bytes" type="gulong"/>
        </parameters>
      </constructor>
    </struct>
    <struct name="Bitmap" cname="CoglBitmap" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_bitmap_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_bitmap_new_for_data">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="format" type="CoglPixelFormat"/>
          <parameter name="rowstride" type="gint"/>
          <parameter name="data" type="guint8"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_bitmap_new_from_buffer">
        <parameters>
          <parameter name="buffer" type="gpointer"/>
          <parameter name="format" type="CoglPixelFormat"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="rowstride" type="gint"/>
          <parameter name="offset" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_bitmap_new_from_file">
        <parameters>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_bitmap_new_with_size">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="width" type="guint"/>
          <parameter name="height" type="guint"/>
          <parameter name="format" type="CoglPixelFormat"/>
        </parameters>
      </constructor>
      <method name="GetSizeFromFile" cname="cogl_bitmap_get_size_from_file" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="filename" type="const-gchar*"/>
          <parameter name="width" type="gint*" owned="true" pass_as="out"/>
          <parameter name="height" type="gint*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="GetBuffer" cname="cogl_bitmap_get_buffer">
        <return-type type="CoglPixelBuffer*"/>
        <parameters/>
      </method>
      <method name="GetFormat" cname="cogl_bitmap_get_format">
        <return-type type="CoglPixelFormat"/>
        <parameters/>
      </method>
      <method name="GetHeight" cname="cogl_bitmap_get_height">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetRowstride" cname="cogl_bitmap_get_rowstride">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetWidth" cname="cogl_bitmap_get_width">
        <return-type type="gint"/>
        <parameters/>
      </method>
    </struct>
    <struct name="Context" cname="CoglContext" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_context_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_context_new">
        <parameters>
          <parameter name="display" type="CoglDisplay*"/>
        </parameters>
      </constructor>
      <method name="GetDisplay" cname="cogl_context_get_display">
        <return-type type="CoglDisplay*"/>
        <parameters/>
      </method>
      <method name="GetRenderer" cname="cogl_context_get_renderer">
        <return-type type="CoglRenderer*"/>
        <parameters/>
      </method>
    </struct>
    <struct name="Display" cname="CoglDisplay" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_display_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_display_new">
        <parameters>
          <parameter name="renderer" type="CoglRenderer*"/>
          <parameter name="onscreen_template" type="CoglOnscreenTemplate*"/>
        </parameters>
      </constructor>
      <method name="GetRenderer" cname="cogl_display_get_renderer">
        <return-type type="CoglRenderer*"/>
        <parameters/>
      </method>
      <method name="SetOnscreenTemplate" cname="cogl_display_set_onscreen_template">
        <return-type type="void"/>
        <parameters>
          <parameter name="onscreen_template" type="CoglOnscreenTemplate*"/>
        </parameters>
      </method>
      <method name="Setup" cname="cogl_display_setup">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
    </struct>
    <struct name="Fixed" cname="CoglFixed" opaque="true" hidden="false">
      <method name="GetType" cname="cogl_fixed_get_type" shared="true">
        <return-type type="GType"/>
      </method>
    </struct>
    <struct name="FrameInfo" cname="CoglFrameInfo" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_frame_info_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetFrameCounter" cname="cogl_frame_info_get_frame_counter">
        <return-type type="gint64"/>
        <parameters/>
      </method>
      <method name="GetOutput" cname="cogl_frame_info_get_output">
        <return-type type="CoglOutput*"/>
        <parameters/>
      </method>
      <method name="GetPresentationTime" cname="cogl_frame_info_get_presentation_time">
        <return-type type="gint64"/>
        <parameters/>
      </method>
      <method name="GetRefreshRate" cname="cogl_frame_info_get_refresh_rate">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
    </struct>
    <struct name="GLES2Context" cname="CoglGLES2Context" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_gles2_context_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_gles2_context_new">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
        </parameters>
      </constructor>
      <method name="GetVtable" cname="cogl_gles2_context_get_vtable">
        <return-type type="CoglGLES2Vtable*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
    </struct>
    <struct name="IndexBuffer" cname="CoglIndexBuffer" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_index_buffer_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_index_buffer_new">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="bytes" type="gulong"/>
        </parameters>
      </constructor>
    </struct>
    <struct name="Indices" cname="CoglIndices" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_indices_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_indices_new">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="type" type="CoglIndicesType"/>
          <parameter name="indices_data" type="gpointer"/>
          <parameter name="n_indices" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_indices_new_for_buffer">
        <parameters>
          <parameter name="type" type="CoglIndicesType"/>
          <parameter name="buffer" type="CoglIndexBuffer*"/>
          <parameter name="offset" type="gulong"/>
        </parameters>
      </constructor>
      <method name="GetBuffer" cname="cogl_indices_get_buffer">
        <return-type type="CoglIndexBuffer*"/>
        <parameters/>
      </method>
      <method name="GetOffset" cname="cogl_indices_get_offset">
        <return-type type="gulong"/>
        <parameters/>
      </method>
      <method name="GetType" cname="cogl_indices_get_type">
        <return-type type="CoglIndicesType"/>
        <parameters/>
      </method>
      <method name="SetOffset" cname="cogl_indices_set_offset">
        <return-type type="void"/>
        <parameters>
          <parameter name="offset" type="gulong"/>
        </parameters>
      </method>
    </struct>
    <struct name="MatrixStack" cname="CoglMatrixStack" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_matrix_stack_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_matrix_stack_new">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
        </parameters>
      </constructor>
      <method name="Frustum" cname="cogl_matrix_stack_frustum">
        <return-type type="void"/>
        <parameters>
          <parameter name="left" type="gfloat"/>
          <parameter name="right" type="gfloat"/>
          <parameter name="bottom" type="gfloat"/>
          <parameter name="top" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_far" type="gfloat"/>
        </parameters>
      </method>
      <method name="Get" cname="cogl_matrix_stack_get">
        <return-type type="CoglMatrix*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetEntry" cname="cogl_matrix_stack_get_entry">
        <return-type type="CoglMatrixEntry*">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="GetInverse" cname="cogl_matrix_stack_get_inverse">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="inverse" type="CoglMatrix*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="LoadIdentity" cname="cogl_matrix_stack_load_identity">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Multiply" cname="cogl_matrix_stack_multiply">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Orthographic" cname="cogl_matrix_stack_orthographic">
        <return-type type="void"/>
        <parameters>
          <parameter name="x_1" type="gfloat"/>
          <parameter name="y_1" type="gfloat"/>
          <parameter name="x_2" type="gfloat"/>
          <parameter name="y_2" type="gfloat"/>
          <parameter name="near" type="gfloat"/>
          <parameter name="far" type="gfloat"/>
        </parameters>
      </method>
      <method name="Perspective" cname="cogl_matrix_stack_perspective">
        <return-type type="void"/>
        <parameters>
          <parameter name="fov_y" type="gfloat"/>
          <parameter name="aspect" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_far" type="gfloat"/>
        </parameters>
      </method>
      <method name="Pop" cname="cogl_matrix_stack_pop">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Push" cname="cogl_matrix_stack_push">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Rotate" cname="cogl_matrix_stack_rotate">
        <return-type type="void"/>
        <parameters>
          <parameter name="angle" type="gfloat"/>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="RotateEuler" cname="cogl_matrix_stack_rotate_euler">
        <return-type type="void"/>
        <parameters>
          <parameter name="euler" type="CoglEuler*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RotateQuaternion" cname="cogl_matrix_stack_rotate_quaternion">
        <return-type type="void"/>
        <parameters>
          <parameter name="quaternion" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Scale" cname="cogl_matrix_stack_scale">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="Set" cname="cogl_matrix_stack_set">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Translate" cname="cogl_matrix_stack_translate">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
    </struct>
    <struct name="Object" cname="CoglObject" defaultconstructoraccess="protected" opaque="true" hidden="false">
      <method name="GetType" cname="cogl_object_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_object_value_get_object">
        <parameters>
          <parameter name="value" type="GValue*"/>
        </parameters>
      </constructor>
      <method name="SetGValue" cname="cogl_object_value_set_object" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*" pass_as="ref"/>
          <parameter name="obj" type="CoglObject*"/>
        </parameters>
      </method>
      <method name="Ref" cname="cogl_object_ref">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Unref" cname="cogl_object_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Ref" cname="cogl_object_ref" shared="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="Unref" cname="cogl_object_unref" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="ValueGetObject" cname="cogl_object_value_get_object" shared="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="ValueSetObject" cname="cogl_object_value_set_object" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="value" type="GValue*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetUserData" cname="cogl_object_get_user_data">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="key" type="CoglUserDataKey*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetUserData" cname="cogl_object_set_user_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="CoglUserDataKey*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
    </struct>
    <struct name="Onscreen" cname="CoglOnscreen" opaque="true" hidden="false" parent="CoglObject">
      <implements>
        <interface cname="CoglFramebuffer"/>
      </implements>
      <method name="GetType" cname="cogl_onscreen_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_onscreen_new">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </constructor>
      <method name="AddDirtyCallback" cname="cogl_onscreen_add_dirty_callback">
        <return-type type="CoglOnscreenDirtyClosure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter closure="1" scope="notified" name="callback" type="CoglOnscreenDirtyCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="AddFrameCallback" cname="cogl_onscreen_add_frame_callback">
        <return-type type="CoglFrameClosure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter closure="1" scope="notified" name="callback" type="CoglFrameCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="AddResizeCallback" cname="cogl_onscreen_add_resize_callback">
        <return-type type="CoglOnscreenResizeClosure*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter closure="1" scope="notified" name="callback" type="CoglOnscreenResizeCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter allow-none="1" name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="AddSwapBuffersCallback" cname="cogl_onscreen_add_swap_buffers_callback" deprecated="true">
        <return-type type="guint"/>
        <parameters>
          <parameter closure="1" scope="notified" name="callback" type="CoglSwapBuffersNotify"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetBufferAge" cname="cogl_onscreen_get_buffer_age">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetFrameCounter" cname="cogl_onscreen_get_frame_counter">
        <return-type type="gint64"/>
        <parameters/>
      </method>
      <method name="GetResizable" cname="cogl_onscreen_get_resizable">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Hide" cname="cogl_onscreen_hide">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="RemoveDirtyCallback" cname="cogl_onscreen_remove_dirty_callback">
        <return-type type="void"/>
        <parameters>
          <parameter name="closure" type="CoglOnscreenDirtyClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RemoveFrameCallback" cname="cogl_onscreen_remove_frame_callback">
        <return-type type="void"/>
        <parameters>
          <parameter name="closure" type="CoglFrameClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RemoveResizeCallback" cname="cogl_onscreen_remove_resize_callback">
        <return-type type="void"/>
        <parameters>
          <parameter name="closure" type="CoglOnscreenResizeClosure*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RemoveSwapBuffersCallback" cname="cogl_onscreen_remove_swap_buffers_callback" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="id" type="guint"/>
        </parameters>
      </method>
      <method name="SetResizable" cname="cogl_onscreen_set_resizable">
        <return-type type="void"/>
        <parameters>
          <parameter name="resizable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetSwapThrottled" cname="cogl_onscreen_set_swap_throttled">
        <return-type type="void"/>
        <parameters>
          <parameter name="throttled" type="gboolean"/>
        </parameters>
      </method>
      <method name="Show" cname="cogl_onscreen_show">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SwapBuffers" cname="cogl_onscreen_swap_buffers">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SwapBuffersWithDamage" cname="cogl_onscreen_swap_buffers_with_damage">
        <return-type type="void"/>
        <parameters>
          <parameter name="rectangles" type="gint"/>
          <parameter name="n_rectangles" type="gint"/>
        </parameters>
      </method>
      <method name="SwapRegion" cname="cogl_onscreen_swap_region">
        <return-type type="void"/>
        <parameters>
          <parameter name="rectangles" type="gint"/>
          <parameter name="n_rectangles" type="gint"/>
        </parameters>
      </method>
    </struct>
    <struct name="OnscreenTemplate" cname="CoglOnscreenTemplate" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_onscreen_template_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_onscreen_template_new">
        <parameters>
          <parameter name="swap_chain" type="CoglSwapChain*"/>
        </parameters>
      </constructor>
      <method name="SetSamplesPerPixel" cname="cogl_onscreen_template_set_samples_per_pixel">
        <return-type type="void"/>
        <parameters>
          <parameter name="n" type="gint"/>
        </parameters>
      </method>
      <method name="SetSwapThrottled" cname="cogl_onscreen_template_set_swap_throttled">
        <return-type type="void"/>
        <parameters>
          <parameter name="throttled" type="gboolean"/>
        </parameters>
      </method>
    </struct>
    <struct name="Output" cname="CoglOutput" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_output_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetHeight" cname="cogl_output_get_height">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMmHeight" cname="cogl_output_get_mm_height">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetMmWidth" cname="cogl_output_get_mm_width">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetRefreshRate" cname="cogl_output_get_refresh_rate">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetSubpixelOrder" cname="cogl_output_get_subpixel_order">
        <return-type type="CoglSubpixelOrder"/>
        <parameters/>
      </method>
      <method name="GetWidth" cname="cogl_output_get_width">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetX" cname="cogl_output_get_x">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetY" cname="cogl_output_get_y">
        <return-type type="gint"/>
        <parameters/>
      </method>
    </struct>
    <struct name="Pipeline" cname="CoglPipeline" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_pipeline_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_pipeline_new">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
        </parameters>
      </constructor>
      <method name="AddLayerSnippet" cname="cogl_pipeline_add_layer_snippet">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer" type="gint"/>
          <parameter name="snippet" type="CoglSnippet*"/>
        </parameters>
      </method>
      <method name="AddSnippet" cname="cogl_pipeline_add_snippet">
        <return-type type="void"/>
        <parameters>
          <parameter name="snippet" type="CoglSnippet*"/>
        </parameters>
      </method>
      <method name="Copy" cname="cogl_pipeline_copy">
        <return-type type="CoglPipeline*" owned="true"/>
        <parameters/>
      </method>
      <method name="ForeachLayer" cname="cogl_pipeline_foreach_layer">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="callback" type="CoglPipelineLayerCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetAlphaTestFunction" cname="cogl_pipeline_get_alpha_test_function">
        <return-type type="CoglPipelineAlphaFunc"/>
        <parameters/>
      </method>
      <method name="GetAlphaTestReference" cname="cogl_pipeline_get_alpha_test_reference">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetAmbient" cname="cogl_pipeline_get_ambient">
        <return-type type="void"/>
        <parameters>
          <parameter name="ambient" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetColor" cname="cogl_pipeline_get_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="CoglColor*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetColorMask" cname="cogl_pipeline_get_color_mask">
        <return-type type="CoglColorMask"/>
        <parameters/>
      </method>
      <method name="GetCullFaceMode" cname="cogl_pipeline_get_cull_face_mode">
        <return-type type="CoglPipelineCullFaceMode"/>
        <parameters/>
      </method>
      <method name="GetDepthState" cname="cogl_pipeline_get_depth_state">
        <return-type type="void"/>
        <parameters>
          <parameter name="state_out" type="CoglDepthState*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetDiffuse" cname="cogl_pipeline_get_diffuse">
        <return-type type="void"/>
        <parameters>
          <parameter name="diffuse" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetEmission" cname="cogl_pipeline_get_emission">
        <return-type type="void"/>
        <parameters>
          <parameter name="emission" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetFrontFaceWinding" cname="cogl_pipeline_get_front_face_winding">
        <return-type type="CoglWinding"/>
        <parameters/>
      </method>
      <method name="GetLayerMagFilter" cname="cogl_pipeline_get_layer_mag_filter">
        <return-type type="CoglPipelineFilter"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
        </parameters>
      </method>
      <method name="GetLayerMinFilter" cname="cogl_pipeline_get_layer_min_filter">
        <return-type type="CoglPipelineFilter"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
        </parameters>
      </method>
      <method name="GetLayerPointSpriteCoordsEnabled" cname="cogl_pipeline_get_layer_point_sprite_coords_enabled">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
        </parameters>
      </method>
      <method name="GetLayerTexture" cname="cogl_pipeline_get_layer_texture">
        <return-type type="CoglTexture*"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
        </parameters>
      </method>
      <method name="GetLayerWrapModeP" cname="cogl_pipeline_get_layer_wrap_mode_p">
        <return-type type="CoglPipelineWrapMode"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
        </parameters>
      </method>
      <method name="GetLayerWrapModeS" cname="cogl_pipeline_get_layer_wrap_mode_s">
        <return-type type="CoglPipelineWrapMode"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
        </parameters>
      </method>
      <method name="GetLayerWrapModeT" cname="cogl_pipeline_get_layer_wrap_mode_t">
        <return-type type="CoglPipelineWrapMode"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
        </parameters>
      </method>
      <method name="GetNLayers" cname="cogl_pipeline_get_n_layers">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetPerVertexPointSize" cname="cogl_pipeline_get_per_vertex_point_size">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetPointSize" cname="cogl_pipeline_get_point_size">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetShininess" cname="cogl_pipeline_get_shininess">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetSpecular" cname="cogl_pipeline_get_specular">
        <return-type type="void"/>
        <parameters>
          <parameter name="specular" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="GetUniformLocation" cname="cogl_pipeline_get_uniform_location">
        <return-type type="gint"/>
        <parameters>
          <parameter name="uniform_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="GetUserProgram" cname="cogl_pipeline_get_user_program">
        <return-type type="gpointer"/>
        <parameters/>
      </method>
      <method name="RemoveLayer" cname="cogl_pipeline_remove_layer">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
        </parameters>
      </method>
      <method name="SetAlphaTestFunction" cname="cogl_pipeline_set_alpha_test_function">
        <return-type type="void"/>
        <parameters>
          <parameter name="alpha_func" type="CoglPipelineAlphaFunc"/>
          <parameter name="alpha_reference" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetAmbient" cname="cogl_pipeline_set_ambient">
        <return-type type="void"/>
        <parameters>
          <parameter name="ambient" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetAmbientAndDiffuse" cname="cogl_pipeline_set_ambient_and_diffuse">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetBlend" cname="cogl_pipeline_set_blend">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="blend_string" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetBlendConstant" cname="cogl_pipeline_set_blend_constant">
        <return-type type="void"/>
        <parameters>
          <parameter name="constant_color" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetColor" cname="cogl_pipeline_set_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetColor4f" cname="cogl_pipeline_set_color4f">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="gfloat"/>
          <parameter name="green" type="gfloat"/>
          <parameter name="blue" type="gfloat"/>
          <parameter name="alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetColor4ub" cname="cogl_pipeline_set_color4ub">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="guint8"/>
          <parameter name="green" type="guint8"/>
          <parameter name="blue" type="guint8"/>
          <parameter name="alpha" type="guint8"/>
        </parameters>
      </method>
      <method name="SetColorMask" cname="cogl_pipeline_set_color_mask">
        <return-type type="void"/>
        <parameters>
          <parameter name="color_mask" type="CoglColorMask"/>
        </parameters>
      </method>
      <method name="SetCullFaceMode" cname="cogl_pipeline_set_cull_face_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="cull_face_mode" type="CoglPipelineCullFaceMode"/>
        </parameters>
      </method>
      <method name="SetDepthState" cname="cogl_pipeline_set_depth_state">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="state" type="CoglDepthState*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetDiffuse" cname="cogl_pipeline_set_diffuse">
        <return-type type="void"/>
        <parameters>
          <parameter name="diffuse" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetEmission" cname="cogl_pipeline_set_emission">
        <return-type type="void"/>
        <parameters>
          <parameter name="emission" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetFrontFaceWinding" cname="cogl_pipeline_set_front_face_winding">
        <return-type type="void"/>
        <parameters>
          <parameter name="front_winding" type="CoglWinding"/>
        </parameters>
      </method>
      <method name="SetLayerCombine" cname="cogl_pipeline_set_layer_combine">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="layer_index" type="gint"/>
          <parameter name="blend_string" type="const-gchar*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetLayerCombineConstant" cname="cogl_pipeline_set_layer_combine_constant">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="constant" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetLayerFilters" cname="cogl_pipeline_set_layer_filters">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="min_filter" type="CoglPipelineFilter"/>
          <parameter name="mag_filter" type="CoglPipelineFilter"/>
        </parameters>
      </method>
      <method name="SetLayerMatrix" cname="cogl_pipeline_set_layer_matrix">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetLayerNullTexture" cname="cogl_pipeline_set_layer_null_texture">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="texture_type" type="CoglTextureType"/>
        </parameters>
      </method>
      <method name="SetLayerPointSpriteCoordsEnabled" cname="cogl_pipeline_set_layer_point_sprite_coords_enabled">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="layer_index" type="gint"/>
          <parameter name="enable" type="gboolean"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetLayerTexture" cname="cogl_pipeline_set_layer_texture">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="texture" type="CoglTexture*"/>
        </parameters>
      </method>
      <method name="SetLayerWrapMode" cname="cogl_pipeline_set_layer_wrap_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="mode" type="CoglPipelineWrapMode"/>
        </parameters>
      </method>
      <method name="SetLayerWrapModeP" cname="cogl_pipeline_set_layer_wrap_mode_p">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="mode" type="CoglPipelineWrapMode"/>
        </parameters>
      </method>
      <method name="SetLayerWrapModeS" cname="cogl_pipeline_set_layer_wrap_mode_s">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="mode" type="CoglPipelineWrapMode"/>
        </parameters>
      </method>
      <method name="SetLayerWrapModeT" cname="cogl_pipeline_set_layer_wrap_mode_t">
        <return-type type="void"/>
        <parameters>
          <parameter name="layer_index" type="gint"/>
          <parameter name="mode" type="CoglPipelineWrapMode"/>
        </parameters>
      </method>
      <method name="SetPerVertexPointSize" cname="cogl_pipeline_set_per_vertex_point_size">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="enable" type="gboolean"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SetPointSize" cname="cogl_pipeline_set_point_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="point_size" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetShininess" cname="cogl_pipeline_set_shininess">
        <return-type type="void"/>
        <parameters>
          <parameter name="shininess" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetSpecular" cname="cogl_pipeline_set_specular">
        <return-type type="void"/>
        <parameters>
          <parameter name="specular" type="CoglColor*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="SetUniform1f" cname="cogl_pipeline_set_uniform_1f">
        <return-type type="void"/>
        <parameters>
          <parameter name="uniform_location" type="gint"/>
          <parameter name="value" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetUniform1i" cname="cogl_pipeline_set_uniform_1i">
        <return-type type="void"/>
        <parameters>
          <parameter name="uniform_location" type="gint"/>
          <parameter name="value" type="gint"/>
        </parameters>
      </method>
      <method name="SetUniformFloat" cname="cogl_pipeline_set_uniform_float">
        <return-type type="void"/>
        <parameters>
          <parameter name="uniform_location" type="gint"/>
          <parameter name="n_components" type="gint"/>
          <parameter name="count" type="gint"/>
          <parameter name="value" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetUniformInt" cname="cogl_pipeline_set_uniform_int">
        <return-type type="void"/>
        <parameters>
          <parameter name="uniform_location" type="gint"/>
          <parameter name="n_components" type="gint"/>
          <parameter name="count" type="gint"/>
          <parameter name="value" type="gint"/>
        </parameters>
      </method>
      <method name="SetUniformMatrix" cname="cogl_pipeline_set_uniform_matrix">
        <return-type type="void"/>
        <parameters>
          <parameter name="uniform_location" type="gint"/>
          <parameter name="dimensions" type="gint"/>
          <parameter name="count" type="gint"/>
          <parameter name="transpose" type="gboolean"/>
          <parameter name="value" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetUserProgram" cname="cogl_pipeline_set_user_program">
        <return-type type="void"/>
        <parameters>
          <parameter name="program" type="gpointer"/>
        </parameters>
      </method>
    </struct>
    <struct name="PixelBuffer" cname="CoglPixelBuffer" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_pixel_buffer_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_pixel_buffer_new">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="size" type="gulong"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </constructor>
    </struct>
    <struct name="Primitive" cname="CoglPrimitive" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_primitive_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_primitive_new">
        <parameters>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="..." type="va_list"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_primitive_new_p2">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="data" type="CoglVertexP2*" array="true" array_length_param_index="2"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_primitive_new_p2c4">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="data" type="CoglVertexP2C4*" array="true" array_length_param_index="2"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_primitive_new_p2t2">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="data" type="CoglVertexP2T2*" array="true" array_length_param_index="2"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_primitive_new_p2t2c4">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="data" type="CoglVertexP2T2C4*" array="true" array_length_param_index="2"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_primitive_new_p3">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="data" type="CoglVertexP3*" array="true" array_length_param_index="2"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_primitive_new_p3c4">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="data" type="CoglVertexP3C4*" array="true" array_length_param_index="2"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_primitive_new_p3t2">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="data" type="CoglVertexP3T2*" array="true" array_length_param_index="2"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_primitive_new_p3t2c4">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="data" type="CoglVertexP3T2C4*" array="true" array_length_param_index="2"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_primitive_new_with_attributes">
        <parameters>
          <parameter name="mode" type="CoglVerticesMode"/>
          <parameter name="n_vertices" type="gint"/>
          <parameter name="attributes" type="CoglAttribute*"/>
          <parameter name="n_attributes" type="gint"/>
        </parameters>
      </constructor>
      <method name="TextureSetAutoMipmap" cname="cogl_primitive_texture_set_auto_mipmap" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="primitive_texture" type="gpointer"/>
          <parameter name="value" type="gboolean"/>
        </parameters>
      </method>
      <method name="Copy" cname="cogl_primitive_copy">
        <return-type type="CoglPrimitive*" owned="true"/>
        <parameters/>
      </method>
      <method name="Draw" cname="cogl_primitive_draw">
        <return-type type="void"/>
        <parameters>
          <parameter name="framebuffer" type="CoglFramebuffer*"/>
          <parameter name="pipeline" type="CoglPipeline*"/>
        </parameters>
      </method>
      <method name="ForeachAttribute" cname="cogl_primitive_foreach_attribute">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="callback" type="CoglPrimitiveAttributeCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetFirstVertex" cname="cogl_primitive_get_first_vertex">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetIndices" cname="cogl_primitive_get_indices">
        <return-type type="CoglIndices*"/>
        <parameters/>
      </method>
      <method name="GetMode" cname="cogl_primitive_get_mode">
        <return-type type="CoglVerticesMode"/>
        <parameters/>
      </method>
      <method name="GetNVertices" cname="cogl_primitive_get_n_vertices">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="SetAttributes" cname="cogl_primitive_set_attributes">
        <return-type type="void"/>
        <parameters>
          <parameter name="attributes" type="CoglAttribute*"/>
          <parameter name="n_attributes" type="gint"/>
        </parameters>
      </method>
      <method name="SetFirstVertex" cname="cogl_primitive_set_first_vertex">
        <return-type type="void"/>
        <parameters>
          <parameter name="first_vertex" type="gint"/>
        </parameters>
      </method>
      <method name="SetIndices" cname="cogl_primitive_set_indices">
        <return-type type="void"/>
        <parameters>
          <parameter name="indices" type="CoglIndices*"/>
          <parameter name="n_indices" type="gint"/>
        </parameters>
      </method>
      <method name="SetMode" cname="cogl_primitive_set_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="mode" type="CoglVerticesMode"/>
        </parameters>
      </method>
      <method name="SetNVertices" cname="cogl_primitive_set_n_vertices">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_vertices" type="gint"/>
        </parameters>
      </method>
    </struct>
    <struct name="Renderer" cname="CoglRenderer" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_renderer_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_renderer_new" disable_void_ctor=""/>
      <method name="AddConstraint" cname="cogl_renderer_add_constraint">
        <return-type type="void"/>
        <parameters>
          <parameter name="constraint" type="CoglRendererConstraint"/>
        </parameters>
      </method>
      <method name="CheckOnscreenTemplate" cname="cogl_renderer_check_onscreen_template">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="onscreen_template" type="CoglOnscreenTemplate*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="Connect" cname="cogl_renderer_connect">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="ForeachOutput" cname="cogl_renderer_foreach_output">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="callback" type="CoglOutputCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="GetDriver" cname="cogl_renderer_get_driver">
        <return-type type="CoglDriver"/>
        <parameters/>
      </method>
      <method name="GetNFragmentTextureUnits" cname="cogl_renderer_get_n_fragment_texture_units">
        <return-type type="gint"/>
        <parameters/>
      </method>
      <method name="GetWinsysId" cname="cogl_renderer_get_winsys_id">
        <return-type type="CoglWinsysID"/>
        <parameters/>
      </method>
      <method name="RemoveConstraint" cname="cogl_renderer_remove_constraint">
        <return-type type="void"/>
        <parameters>
          <parameter name="constraint" type="CoglRendererConstraint"/>
        </parameters>
      </method>
      <method name="SetDriver" cname="cogl_renderer_set_driver">
        <return-type type="void"/>
        <parameters>
          <parameter name="driver" type="CoglDriver"/>
        </parameters>
      </method>
      <method name="SetWinsysId" cname="cogl_renderer_set_winsys_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="winsys_id" type="CoglWinsysID"/>
        </parameters>
      </method>
    </struct>
    <struct name="Snippet" cname="CoglSnippet" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_snippet_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_snippet_new">
        <parameters>
          <parameter name="hook" type="CoglSnippetHook"/>
          <parameter name="declarations" type="const-gchar*"/>
          <parameter name="post" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="GetDeclarations" cname="cogl_snippet_get_declarations">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetHook" cname="cogl_snippet_get_hook">
        <return-type type="CoglSnippetHook"/>
        <parameters/>
      </method>
      <method name="GetPost" cname="cogl_snippet_get_post">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetPre" cname="cogl_snippet_get_pre">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="GetReplace" cname="cogl_snippet_get_replace">
        <return-type type="const-gchar*"/>
        <parameters/>
      </method>
      <method name="SetDeclarations" cname="cogl_snippet_set_declarations">
        <return-type type="void"/>
        <parameters>
          <parameter name="declarations" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetPost" cname="cogl_snippet_set_post">
        <return-type type="void"/>
        <parameters>
          <parameter name="post" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetPre" cname="cogl_snippet_set_pre">
        <return-type type="void"/>
        <parameters>
          <parameter name="pre" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="SetReplace" cname="cogl_snippet_set_replace">
        <return-type type="void"/>
        <parameters>
          <parameter name="replace" type="const-gchar*"/>
        </parameters>
      </method>
    </struct>
    <struct name="SubTexture" cname="CoglSubTexture" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_sub_texture_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_sub_texture_new">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="parent_texture" type="CoglTexture*"/>
          <parameter name="sub_x" type="gint"/>
          <parameter name="sub_y" type="gint"/>
          <parameter name="sub_width" type="gint"/>
          <parameter name="sub_height" type="gint"/>
        </parameters>
      </constructor>
      <method name="GetParent" cname="cogl_sub_texture_get_parent">
        <return-type type="CoglTexture*"/>
        <parameters/>
      </method>
    </struct>
    <struct name="SwapChain" cname="CoglSwapChain" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_swap_chain_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_swap_chain_new" disable_void_ctor=""/>
      <method name="SetHasAlpha" cname="cogl_swap_chain_set_has_alpha">
        <return-type type="void"/>
        <parameters>
          <parameter name="has_alpha" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetLength" cname="cogl_swap_chain_set_length">
        <return-type type="void"/>
        <parameters>
          <parameter name="length" type="gint"/>
        </parameters>
      </method>
    </struct>
    <struct name="Texture2D" cname="CoglTexture2D" opaque="true" hidden="false" parent="CoglObject">
      <implements>
        <interface cname="CoglTexture"/>
      </implements>
      <method name="GetType" cname="cogl_texture_2d_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_texture_2d_gl_new_from_foreign">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="gl_handle" type="guint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="format" type="CoglPixelFormat"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_texture_2d_new_from_bitmap">
        <parameters>
          <parameter name="bitmap" type="CoglBitmap*"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_texture_2d_new_from_data">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="format" type="CoglPixelFormat"/>
          <parameter name="rowstride" type="gint"/>
          <parameter name="data" type="guint8"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_texture_2d_new_from_file">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_texture_2d_new_with_size">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </constructor>
    </struct>
    <struct name="Texture2DSliced" cname="CoglTexture2DSliced" opaque="true" hidden="false" parent="CoglObject">
      <implements>
        <interface cname="CoglTexture"/>
      </implements>
      <method name="GetType" cname="cogl_texture_2d_sliced_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_texture_2d_sliced_new_from_bitmap">
        <parameters>
          <parameter name="bmp" type="CoglBitmap*"/>
          <parameter name="max_waste" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_texture_2d_sliced_new_from_data">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="max_waste" type="gint"/>
          <parameter name="format" type="CoglPixelFormat"/>
          <parameter name="rowstride" type="gint"/>
          <parameter name="data" type="guint8"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_texture_2d_sliced_new_from_file">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="filename" type="const-gchar*"/>
          <parameter name="max_waste" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_texture_2d_sliced_new_with_size">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="max_waste" type="gint"/>
        </parameters>
      </constructor>
    </struct>
    <struct name="Texture3D" cname="CoglTexture3D" opaque="true" hidden="false" parent="CoglObject">
      <implements>
        <interface cname="CoglTexture"/>
      </implements>
      <method name="GetType" cname="cogl_texture_3d_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_texture_3d_new_from_bitmap">
        <parameters>
          <parameter name="bitmap" type="CoglBitmap*"/>
          <parameter name="height" type="gint"/>
          <parameter name="depth" type="gint"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_texture_3d_new_from_data">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="depth" type="gint"/>
          <parameter name="format" type="CoglPixelFormat"/>
          <parameter name="rowstride" type="gint"/>
          <parameter name="image_stride" type="gint"/>
          <parameter name="data" type="guint8"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_texture_3d_new_with_size">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="depth" type="gint"/>
        </parameters>
      </constructor>
    </struct>
    <struct name="TexturePixmapX11" cname="CoglTexturePixmapX11" opaque="true" hidden="false" parent="CoglObject">
      <method name="GetType" cname="cogl_texture_pixmap_x11_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_texture_pixmap_x11_new">
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="pixmap" type="guint32"/>
          <parameter name="automatic_updates" type="gboolean"/>
        </parameters>
      </constructor>
      <method name="ErrorQuark" cname="cogl_texture_pixmap_x11_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="IsUsingTfpExtension" cname="cogl_texture_pixmap_x11_is_using_tfp_extension">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="SetDamageObject" cname="cogl_texture_pixmap_x11_set_damage_object">
        <return-type type="void"/>
        <parameters>
          <parameter name="damage" type="guint32"/>
          <parameter name="report_level" type="CoglTexturePixmapX11ReportLevel"/>
        </parameters>
      </method>
      <method name="UpdateArea" cname="cogl_texture_pixmap_x11_update_area">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
    </struct>
    <struct name="TextureRectangle" cname="CoglTextureRectangle" opaque="true" hidden="false" parent="CoglObject">
      <implements>
        <interface cname="CoglTexture"/>
      </implements>
      <method name="GetType" cname="cogl_texture_rectangle_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="cogl_texture_rectangle_new_from_bitmap">
        <parameters>
          <parameter name="bitmap" type="CoglBitmap*"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_texture_rectangle_new_from_foreign">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="gl_handle" type="guint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="format" type="CoglPixelFormat"/>
        </parameters>
      </constructor>
      <constructor cname="cogl_texture_rectangle_new_with_size">
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </constructor>
    </struct>
    <boxed name="Color" cname="CoglColor" opaque="false" hidden="false">
      <method name="GetType" cname="cogl_color_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="private_member_red" access="private" writeable="false" readable="false" name="PrivateMemberRed" type="guint8"/>
      <field cname="private_member_green" access="private" writeable="false" readable="false" name="PrivateMemberGreen" type="guint8"/>
      <field cname="private_member_blue" access="private" writeable="false" readable="false" name="PrivateMemberBlue" type="guint8"/>
      <field cname="private_member_alpha" access="private" writeable="false" readable="false" name="PrivateMemberAlpha" type="guint8"/>
      <field cname="private_member_padding0" access="private" writeable="false" readable="false" name="PrivateMemberPadding0" type="guint32"/>
      <field cname="private_member_padding1" access="private" writeable="false" readable="false" name="PrivateMemberPadding1" type="guint32"/>
      <field cname="private_member_padding2" access="private" writeable="false" readable="false" name="PrivateMemberPadding2" type="guint32"/>
      <constructor cname="cogl_color_new" disable_void_ctor=""/>
      <method name="Copy" cname="cogl_color_copy">
        <return-type type="CoglColor*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="cogl_color_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetAlpha" cname="cogl_color_get_alpha">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetAlphaByte" cname="cogl_color_get_alpha_byte">
        <return-type type="guint8"/>
        <parameters/>
      </method>
      <method name="GetAlphaFloat" cname="cogl_color_get_alpha_float">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetBlue" cname="cogl_color_get_blue">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetBlueByte" cname="cogl_color_get_blue_byte">
        <return-type type="guint8"/>
        <parameters/>
      </method>
      <method name="GetBlueFloat" cname="cogl_color_get_blue_float">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetGreen" cname="cogl_color_get_green">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetGreenByte" cname="cogl_color_get_green_byte">
        <return-type type="guint8"/>
        <parameters/>
      </method>
      <method name="GetGreenFloat" cname="cogl_color_get_green_float">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetRed" cname="cogl_color_get_red">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetRedByte" cname="cogl_color_get_red_byte">
        <return-type type="guint8"/>
        <parameters/>
      </method>
      <method name="GetRedFloat" cname="cogl_color_get_red_float">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="InitFrom4f" cname="cogl_color_init_from_4f">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="gfloat"/>
          <parameter name="green" type="gfloat"/>
          <parameter name="blue" type="gfloat"/>
          <parameter name="alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="InitFrom4fv" cname="cogl_color_init_from_4fv">
        <return-type type="void"/>
        <parameters>
          <parameter name="color_array" type="gfloat"/>
        </parameters>
      </method>
      <method name="InitFrom4ub" cname="cogl_color_init_from_4ub">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="guint8"/>
          <parameter name="green" type="guint8"/>
          <parameter name="blue" type="guint8"/>
          <parameter name="alpha" type="guint8"/>
        </parameters>
      </method>
      <method name="Premultiply" cname="cogl_color_premultiply">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetAlpha" cname="cogl_color_set_alpha">
        <return-type type="void"/>
        <parameters>
          <parameter name="alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetAlphaByte" cname="cogl_color_set_alpha_byte">
        <return-type type="void"/>
        <parameters>
          <parameter name="alpha" type="guint8"/>
        </parameters>
      </method>
      <method name="SetAlphaFloat" cname="cogl_color_set_alpha_float">
        <return-type type="void"/>
        <parameters>
          <parameter name="alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetBlue" cname="cogl_color_set_blue">
        <return-type type="void"/>
        <parameters>
          <parameter name="blue" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetBlueByte" cname="cogl_color_set_blue_byte">
        <return-type type="void"/>
        <parameters>
          <parameter name="blue" type="guint8"/>
        </parameters>
      </method>
      <method name="SetBlueFloat" cname="cogl_color_set_blue_float">
        <return-type type="void"/>
        <parameters>
          <parameter name="blue" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetFrom4f" cname="cogl_color_set_from_4f" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="gfloat"/>
          <parameter name="green" type="gfloat"/>
          <parameter name="blue" type="gfloat"/>
          <parameter name="alpha" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetFrom4ub" cname="cogl_color_set_from_4ub" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="guint8"/>
          <parameter name="green" type="guint8"/>
          <parameter name="blue" type="guint8"/>
          <parameter name="alpha" type="guint8"/>
        </parameters>
      </method>
      <method name="SetGreen" cname="cogl_color_set_green">
        <return-type type="void"/>
        <parameters>
          <parameter name="green" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetGreenByte" cname="cogl_color_set_green_byte">
        <return-type type="void"/>
        <parameters>
          <parameter name="green" type="guint8"/>
        </parameters>
      </method>
      <method name="SetGreenFloat" cname="cogl_color_set_green_float">
        <return-type type="void"/>
        <parameters>
          <parameter name="green" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetRed" cname="cogl_color_set_red">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetRedByte" cname="cogl_color_set_red_byte">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="guint8"/>
        </parameters>
      </method>
      <method name="SetRedFloat" cname="cogl_color_set_red_float">
        <return-type type="void"/>
        <parameters>
          <parameter name="red" type="gfloat"/>
        </parameters>
      </method>
      <method name="ToHsl" cname="cogl_color_to_hsl">
        <return-type type="void"/>
        <parameters>
          <parameter name="hue" type="gfloat*" owned="true" pass_as="out"/>
          <parameter name="saturation" type="gfloat*" owned="true" pass_as="out"/>
          <parameter name="luminance" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Unpremultiply" cname="cogl_color_unpremultiply">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Equal" cname="cogl_color_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gpointer"/>
          <parameter name="v2" type="gpointer"/>
        </parameters>
      </method>
      <method name="InitFromHsl" cname="cogl_color_init_from_hsl" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="CoglColor*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="hue" type="gfloat"/>
          <parameter name="saturation" type="gfloat"/>
          <parameter name="luminance" type="gfloat"/>
        </parameters>
      </method>
    </boxed>
    <struct name="DebugObjectTypeInfo" cname="CoglDebugObjectTypeInfo" opaque="false" hidden="false">
      <field cname="name" access="public" writeable="true" readable="true" name="Name" type="gchar*"/>
      <field cname="instance_count" access="public" writeable="true" readable="true" name="InstanceCount" type="guint"/>
    </struct>
    <struct name="DepthState" cname="CoglDepthState" opaque="false" hidden="false">
      <field cname="private_member_magic" access="private" writeable="false" readable="false" name="PrivateMemberMagic" type="guint32"/>
      <field cname="private_member_test_enabled" access="private" writeable="false" readable="false" name="PrivateMemberTestEnabled" type="gboolean"/>
      <field cname="private_member_test_function" access="private" writeable="false" readable="false" name="PrivateMemberTestFunction" type="CoglDepthTestFunction"/>
      <field cname="private_member_write_enabled" access="private" writeable="false" readable="false" name="PrivateMemberWriteEnabled" type="gboolean"/>
      <field cname="private_member_range_near" access="private" writeable="false" readable="false" name="PrivateMemberRangeNear" type="gfloat"/>
      <field cname="private_member_range_far" access="private" writeable="false" readable="false" name="PrivateMemberRangeFar" type="gfloat"/>
      <field cname="private_member_padding0" access="private" writeable="false" readable="false" name="PrivateMemberPadding0" type="guint32"/>
      <field cname="private_member_padding1" access="private" writeable="false" readable="false" name="PrivateMemberPadding1" type="guint32"/>
      <field cname="private_member_padding2" access="private" writeable="false" readable="false" name="PrivateMemberPadding2" type="guint32"/>
      <field cname="private_member_padding3" access="private" writeable="false" readable="false" name="PrivateMemberPadding3" type="guint32"/>
      <field cname="private_member_padding4" access="private" writeable="false" readable="false" name="PrivateMemberPadding4" type="guint32"/>
      <field cname="private_member_padding5" access="private" writeable="false" readable="false" name="PrivateMemberPadding5" type="guint32"/>
      <field cname="private_member_padding6" access="private" writeable="false" readable="false" name="PrivateMemberPadding6" type="guint32"/>
      <field cname="private_member_padding7" access="private" writeable="false" readable="false" name="PrivateMemberPadding7" type="guint32"/>
      <field cname="private_member_padding8" access="private" writeable="false" readable="false" name="PrivateMemberPadding8" type="guint32"/>
      <field cname="private_member_padding9" access="private" writeable="false" readable="false" name="PrivateMemberPadding9" type="guint32"/>
      <method name="GetRange" cname="cogl_depth_state_get_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="near_val" type="gfloat"/>
          <parameter name="far_val" type="gfloat"/>
        </parameters>
      </method>
      <method name="GetTestEnabled" cname="cogl_depth_state_get_test_enabled">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="GetTestFunction" cname="cogl_depth_state_get_test_function">
        <return-type type="CoglDepthTestFunction"/>
        <parameters/>
      </method>
      <method name="GetWriteEnabled" cname="cogl_depth_state_get_write_enabled">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Init" cname="cogl_depth_state_init">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="SetRange" cname="cogl_depth_state_set_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="near_val" type="gfloat"/>
          <parameter name="far_val" type="gfloat"/>
        </parameters>
      </method>
      <method name="SetTestEnabled" cname="cogl_depth_state_set_test_enabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="enable" type="gboolean"/>
        </parameters>
      </method>
      <method name="SetTestFunction" cname="cogl_depth_state_set_test_function">
        <return-type type="void"/>
        <parameters>
          <parameter name="function" type="CoglDepthTestFunction"/>
        </parameters>
      </method>
      <method name="SetWriteEnabled" cname="cogl_depth_state_set_write_enabled">
        <return-type type="void"/>
        <parameters>
          <parameter name="enable" type="gboolean"/>
        </parameters>
      </method>
    </struct>
    <boxed name="Euler" cname="CoglEuler" opaque="false" hidden="false">
      <method name="GetType" cname="cogl_euler_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="heading" access="public" writeable="true" readable="true" name="Heading" type="gfloat"/>
      <field cname="pitch" access="public" writeable="true" readable="true" name="Pitch" type="gfloat"/>
      <field cname="roll" access="public" writeable="true" readable="true" name="Roll" type="gfloat"/>
      <field cname="padding0" access="private" writeable="false" readable="false" name="Padding0" type="gfloat"/>
      <field cname="padding1" access="private" writeable="false" readable="false" name="Padding1" type="gfloat"/>
      <field cname="padding2" access="private" writeable="false" readable="false" name="Padding2" type="gfloat"/>
      <field cname="padding3" access="private" writeable="false" readable="false" name="Padding3" type="gfloat"/>
      <field cname="padding4" access="private" writeable="false" readable="false" name="Padding4" type="gfloat"/>
      <method name="Copy" cname="cogl_euler_copy">
        <return-type type="CoglEuler*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="cogl_euler_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Init" cname="cogl_euler_init">
        <return-type type="void"/>
        <parameters>
          <parameter name="heading" type="gfloat"/>
          <parameter name="pitch" type="gfloat"/>
          <parameter name="roll" type="gfloat"/>
        </parameters>
      </method>
      <method name="InitFromMatrix" cname="cogl_euler_init_from_matrix">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InitFromQuaternion" cname="cogl_euler_init_from_quaternion">
        <return-type type="void"/>
        <parameters>
          <parameter name="quaternion" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Equal" cname="cogl_euler_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gpointer"/>
          <parameter name="v2" type="gpointer"/>
        </parameters>
      </method>
    </boxed>
    <struct name="Fence" cname="CoglFence" opaque="true" hidden="false"/>
    <struct name="FenceClosure" cname="CoglFenceClosure" opaque="true" hidden="false">
      <method name="GetUserData" cname="cogl_fence_closure_get_user_data">
        <return-type type="gpointer"/>
        <parameters/>
      </method>
    </struct>
    <boxed name="FrameClosure" cname="CoglFrameClosure" opaque="true" hidden="false">
      <method name="GetType" cname="cogl_frame_closure_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
    </boxed>
    <struct name="GLES2Vtable" cname="CoglGLES2Vtable" opaque="false" hidden="false"/>
    <struct name="GtypeClass" cname="CoglGtypeClass" opaque="false" hidden="false">
      <field cname="base_class" access="public" writeable="true" readable="true" name="BaseClass" type="GTypeClass">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="dummy" access="public" writeable="true" readable="true" name="Dummy" type="guint"/>
    </struct>
    <struct name="GtypeObject" cname="CoglGtypeObject" opaque="false" hidden="false">
      <field cname="parent_instance" access="public" writeable="true" readable="true" name="ParentInstance" type="GTypeInstance">
        <warning>missing glib:type-name</warning>
      </field>
      <field cname="dummy" access="public" writeable="true" readable="true" name="Dummy" type="guint"/>
    </struct>
    <boxed name="Matrix" cname="CoglMatrix" opaque="false" hidden="false">
      <method name="GetType" cname="cogl_matrix_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="xx" access="public" writeable="true" readable="true" name="Xx" type="gfloat"/>
      <field cname="yx" access="public" writeable="true" readable="true" name="Yx" type="gfloat"/>
      <field cname="zx" access="public" writeable="true" readable="true" name="Zx" type="gfloat"/>
      <field cname="wx" access="public" writeable="true" readable="true" name="Wx" type="gfloat"/>
      <field cname="xy" access="public" writeable="true" readable="true" name="Xy" type="gfloat"/>
      <field cname="yy" access="public" writeable="true" readable="true" name="Yy" type="gfloat"/>
      <field cname="zy" access="public" writeable="true" readable="true" name="Zy" type="gfloat"/>
      <field cname="wy" access="public" writeable="true" readable="true" name="Wy" type="gfloat"/>
      <field cname="xz" access="public" writeable="true" readable="true" name="Xz" type="gfloat"/>
      <field cname="yz" access="public" writeable="true" readable="true" name="Yz" type="gfloat"/>
      <field cname="zz" access="public" writeable="true" readable="true" name="Zz" type="gfloat"/>
      <field cname="wz" access="public" writeable="true" readable="true" name="Wz" type="gfloat"/>
      <field cname="xw" access="public" writeable="true" readable="true" name="Xw" type="gfloat"/>
      <field cname="yw" access="public" writeable="true" readable="true" name="Yw" type="gfloat"/>
      <field cname="zw" access="public" writeable="true" readable="true" name="Zw" type="gfloat"/>
      <field cname="ww" access="public" writeable="true" readable="true" name="Ww" type="gfloat"/>
      <field cname="private_member_inv" access="private" writeable="false" readable="false" name="PrivateMemberInv" type="float" array="true" array_len="16"/>
      <field cname="private_member_type" access="private" writeable="false" readable="false" name="PrivateMemberType" type="guint"/>
      <field cname="private_member_flags" access="private" writeable="false" readable="false" name="PrivateMemberFlags" type="guint"/>
      <field cname="private_member__padding3" access="private" writeable="false" readable="false" name="PrivateMember_Padding3" type="guint"/>
      <method name="Copy" cname="cogl_matrix_copy">
        <return-type type="CoglMatrix*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Free" cname="cogl_matrix_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Frustum" cname="cogl_matrix_frustum">
        <return-type type="void"/>
        <parameters>
          <parameter name="left" type="gfloat"/>
          <parameter name="right" type="gfloat"/>
          <parameter name="bottom" type="gfloat"/>
          <parameter name="top" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_far" type="gfloat"/>
        </parameters>
      </method>
      <method name="GetArray" cname="cogl_matrix_get_array">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetInverse" cname="cogl_matrix_get_inverse">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="inverse" type="CoglMatrix*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InitFromArray" cname="cogl_matrix_init_from_array">
        <return-type type="void"/>
        <parameters>
          <parameter name="array" type="gfloat"/>
        </parameters>
      </method>
      <method name="InitFromEuler" cname="cogl_matrix_init_from_euler">
        <return-type type="void"/>
        <parameters>
          <parameter name="euler" type="CoglEuler*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InitFromQuaternion" cname="cogl_matrix_init_from_quaternion">
        <return-type type="void"/>
        <parameters>
          <parameter name="quaternion" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InitIdentity" cname="cogl_matrix_init_identity">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="InitTranslation" cname="cogl_matrix_init_translation">
        <return-type type="void"/>
        <parameters>
          <parameter name="tx" type="gfloat"/>
          <parameter name="ty" type="gfloat"/>
          <parameter name="tz" type="gfloat"/>
        </parameters>
      </method>
      <method name="IsIdentity" cname="cogl_matrix_is_identity">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="LookAt" cname="cogl_matrix_look_at">
        <return-type type="void"/>
        <parameters>
          <parameter name="eye_position_x" type="gfloat"/>
          <parameter name="eye_position_y" type="gfloat"/>
          <parameter name="eye_position_z" type="gfloat"/>
          <parameter name="object_x" type="gfloat"/>
          <parameter name="object_y" type="gfloat"/>
          <parameter name="object_z" type="gfloat"/>
          <parameter name="world_up_x" type="gfloat"/>
          <parameter name="world_up_y" type="gfloat"/>
          <parameter name="world_up_z" type="gfloat"/>
        </parameters>
      </method>
      <method name="Multiply" cname="cogl_matrix_multiply">
        <return-type type="void"/>
        <parameters>
          <parameter name="a" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="b" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Ortho" cname="cogl_matrix_ortho" deprecated="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="left" type="gfloat"/>
          <parameter name="right" type="gfloat"/>
          <parameter name="bottom" type="gfloat"/>
          <parameter name="top" type="gfloat"/>
          <parameter name="near" type="gfloat"/>
          <parameter name="far" type="gfloat"/>
        </parameters>
      </method>
      <method name="Orthographic" cname="cogl_matrix_orthographic">
        <return-type type="void"/>
        <parameters>
          <parameter name="x_1" type="gfloat"/>
          <parameter name="y_1" type="gfloat"/>
          <parameter name="x_2" type="gfloat"/>
          <parameter name="y_2" type="gfloat"/>
          <parameter name="near" type="gfloat"/>
          <parameter name="far" type="gfloat"/>
        </parameters>
      </method>
      <method name="Perspective" cname="cogl_matrix_perspective">
        <return-type type="void"/>
        <parameters>
          <parameter name="fov_y" type="gfloat"/>
          <parameter name="aspect" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_far" type="gfloat"/>
        </parameters>
      </method>
      <method name="ProjectPoints" cname="cogl_matrix_project_points">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_components" type="gint"/>
          <parameter name="stride_in" type="gulong"/>
          <parameter name="points_in" type="gpointer"/>
          <parameter name="stride_out" type="gulong"/>
          <parameter name="points_out" type="gpointer"/>
          <parameter name="n_points" type="gint"/>
        </parameters>
      </method>
      <method name="Rotate" cname="cogl_matrix_rotate">
        <return-type type="void"/>
        <parameters>
          <parameter name="angle" type="gfloat"/>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="RotateEuler" cname="cogl_matrix_rotate_euler">
        <return-type type="void"/>
        <parameters>
          <parameter name="euler" type="CoglEuler*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="RotateQuaternion" cname="cogl_matrix_rotate_quaternion">
        <return-type type="void"/>
        <parameters>
          <parameter name="quaternion" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Scale" cname="cogl_matrix_scale">
        <return-type type="void"/>
        <parameters>
          <parameter name="sx" type="gfloat"/>
          <parameter name="sy" type="gfloat"/>
          <parameter name="sz" type="gfloat"/>
        </parameters>
      </method>
      <method name="TransformPoint" cname="cogl_matrix_transform_point">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gfloat*" owned="true" pass_as="ref"/>
          <parameter name="y" type="gfloat*" owned="true" pass_as="ref"/>
          <parameter name="z" type="gfloat*" owned="true" pass_as="ref"/>
          <parameter name="w" type="gfloat*" owned="true" pass_as="ref"/>
        </parameters>
      </method>
      <method name="TransformPoints" cname="cogl_matrix_transform_points">
        <return-type type="void"/>
        <parameters>
          <parameter name="n_components" type="gint"/>
          <parameter name="stride_in" type="gulong"/>
          <parameter name="points_in" type="gpointer"/>
          <parameter name="stride_out" type="gulong"/>
          <parameter name="points_out" type="gpointer"/>
          <parameter name="n_points" type="gint"/>
        </parameters>
      </method>
      <method name="Translate" cname="cogl_matrix_translate">
        <return-type type="void"/>
        <parameters>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="Transpose" cname="cogl_matrix_transpose">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="View2dInFrustum" cname="cogl_matrix_view_2d_in_frustum">
        <return-type type="void"/>
        <parameters>
          <parameter name="left" type="gfloat"/>
          <parameter name="right" type="gfloat"/>
          <parameter name="bottom" type="gfloat"/>
          <parameter name="top" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_2d" type="gfloat"/>
          <parameter name="width_2d" type="gfloat"/>
          <parameter name="height_2d" type="gfloat"/>
        </parameters>
      </method>
      <method name="View2dInPerspective" cname="cogl_matrix_view_2d_in_perspective">
        <return-type type="void"/>
        <parameters>
          <parameter name="fov_y" type="gfloat"/>
          <parameter name="aspect" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_2d" type="gfloat"/>
          <parameter name="width_2d" type="gfloat"/>
          <parameter name="height_2d" type="gfloat"/>
        </parameters>
      </method>
      <method name="Equal" cname="cogl_matrix_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gpointer"/>
          <parameter name="v2" type="gpointer"/>
        </parameters>
      </method>
    </boxed>
    <boxed name="MatrixEntry" cname="CoglMatrixEntry" opaque="false" hidden="false">
      <method name="GetType" cname="cogl_matrix_entry_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="CalculateTranslation" cname="cogl_matrix_entry_calculate_translation">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="entry1" type="CoglMatrixEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="x" type="gfloat*" owned="true" pass_as="out"/>
          <parameter name="y" type="gfloat*" owned="true" pass_as="out"/>
          <parameter name="z" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Equal" cname="cogl_matrix_entry_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="entry1" type="CoglMatrixEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Get" cname="cogl_matrix_entry_get">
        <return-type type="CoglMatrix*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="IsIdentity" cname="cogl_matrix_entry_is_identity">
        <return-type type="gboolean"/>
        <parameters/>
      </method>
      <method name="Ref" cname="cogl_matrix_entry_ref">
        <return-type type="CoglMatrixEntry*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="Unref" cname="cogl_matrix_entry_unref">
        <return-type type="void"/>
        <parameters/>
      </method>
    </boxed>
    <boxed name="OnscreenDirtyClosure" cname="CoglOnscreenDirtyClosure" opaque="true" hidden="false">
      <method name="GetType" cname="cogl_onscreen_dirty_closure_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
    </boxed>
    <struct name="OnscreenDirtyInfo" cname="CoglOnscreenDirtyInfo" opaque="false" hidden="false">
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gint"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gint"/>
      <field cname="width" access="public" writeable="true" readable="true" name="Width" type="gint"/>
      <field cname="height" access="public" writeable="true" readable="true" name="Height" type="gint"/>
    </struct>
    <boxed name="OnscreenResizeClosure" cname="CoglOnscreenResizeClosure" opaque="true" hidden="false">
      <method name="GetType" cname="cogl_onscreen_resize_closure_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
    </boxed>
    <struct name="PollFD" cname="CoglPollFD" opaque="false" hidden="false">
      <field cname="fd" access="public" writeable="true" readable="true" name="Fd" type="gint"/>
      <field cname="events" access="public" writeable="true" readable="true" name="Events" type="gshort"/>
      <field cname="revents" access="public" writeable="true" readable="true" name="Revents" type="gshort"/>
    </struct>
    <boxed name="Quaternion" cname="CoglQuaternion" opaque="false" hidden="false">
      <method name="GetType" cname="cogl_quaternion_get_gtype" shared="true">
        <return-type type="GType"/>
      </method>
      <field cname="w" access="public" writeable="true" readable="true" name="W" type="gfloat"/>
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gfloat"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gfloat"/>
      <field cname="z" access="public" writeable="true" readable="true" name="Z" type="gfloat"/>
      <field cname="padding0" access="private" writeable="false" readable="false" name="Padding0" type="gfloat"/>
      <field cname="padding1" access="private" writeable="false" readable="false" name="Padding1" type="gfloat"/>
      <field cname="padding2" access="private" writeable="false" readable="false" name="Padding2" type="gfloat"/>
      <field cname="padding3" access="private" writeable="false" readable="false" name="Padding3" type="gfloat"/>
      <method name="Copy" cname="cogl_quaternion_copy">
        <return-type type="CoglQuaternion*" owned="true">
          <warning>missing glib:type-name</warning>
        </return-type>
        <parameters/>
      </method>
      <method name="DotProduct" cname="cogl_quaternion_dot_product">
        <return-type type="gfloat"/>
        <parameters>
          <parameter name="b" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Free" cname="cogl_quaternion_free">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="GetRotationAngle" cname="cogl_quaternion_get_rotation_angle">
        <return-type type="gfloat"/>
        <parameters/>
      </method>
      <method name="GetRotationAxis" cname="cogl_quaternion_get_rotation_axis">
        <return-type type="void"/>
        <parameters>
          <parameter name="vector3" type="gfloat*" owned="true" pass_as="out"/>
        </parameters>
      </method>
      <method name="Init" cname="cogl_quaternion_init">
        <return-type type="void"/>
        <parameters>
          <parameter name="angle" type="gfloat"/>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="InitFromAngleVector" cname="cogl_quaternion_init_from_angle_vector">
        <return-type type="void"/>
        <parameters>
          <parameter name="angle" type="gfloat"/>
          <parameter name="axis3f" type="gfloat"/>
        </parameters>
      </method>
      <method name="InitFromArray" cname="cogl_quaternion_init_from_array">
        <return-type type="void"/>
        <parameters>
          <parameter name="array" type="gfloat"/>
        </parameters>
      </method>
      <method name="InitFromEuler" cname="cogl_quaternion_init_from_euler">
        <return-type type="void"/>
        <parameters>
          <parameter name="euler" type="CoglEuler*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InitFromMatrix" cname="cogl_quaternion_init_from_matrix">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InitFromQuaternion" cname="cogl_quaternion_init_from_quaternion">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="InitFromXRotation" cname="cogl_quaternion_init_from_x_rotation">
        <return-type type="void"/>
        <parameters>
          <parameter name="angle" type="gfloat"/>
        </parameters>
      </method>
      <method name="InitFromYRotation" cname="cogl_quaternion_init_from_y_rotation">
        <return-type type="void"/>
        <parameters>
          <parameter name="angle" type="gfloat"/>
        </parameters>
      </method>
      <method name="InitFromZRotation" cname="cogl_quaternion_init_from_z_rotation">
        <return-type type="void"/>
        <parameters>
          <parameter name="angle" type="gfloat"/>
        </parameters>
      </method>
      <method name="InitIdentity" cname="cogl_quaternion_init_identity">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Invert" cname="cogl_quaternion_invert">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Multiply" cname="cogl_quaternion_multiply">
        <return-type type="void"/>
        <parameters>
          <parameter name="left" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="right" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="Nlerp" cname="cogl_quaternion_nlerp">
        <return-type type="void"/>
        <parameters>
          <parameter name="a" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="b" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="t" type="gfloat"/>
        </parameters>
      </method>
      <method name="Normalize" cname="cogl_quaternion_normalize">
        <return-type type="void"/>
        <parameters/>
      </method>
      <method name="Pow" cname="cogl_quaternion_pow">
        <return-type type="void"/>
        <parameters>
          <parameter name="exponent" type="gfloat"/>
        </parameters>
      </method>
      <method name="Slerp" cname="cogl_quaternion_slerp">
        <return-type type="void"/>
        <parameters>
          <parameter name="a" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="b" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="t" type="gfloat"/>
        </parameters>
      </method>
      <method name="Squad" cname="cogl_quaternion_squad">
        <return-type type="void"/>
        <parameters>
          <parameter name="prev" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="a" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="b" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="next" type="CoglQuaternion*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="t" type="gfloat"/>
        </parameters>
      </method>
      <method name="Equal" cname="cogl_quaternion_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gpointer"/>
          <parameter name="v2" type="gpointer"/>
        </parameters>
      </method>
    </boxed>
    <struct name="TextureVertex" cname="CoglTextureVertex" opaque="false" hidden="false">
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gfloat"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gfloat"/>
      <field cname="z" access="public" writeable="true" readable="true" name="Z" type="gfloat"/>
      <field cname="tx" access="public" writeable="true" readable="true" name="Tx" type="gfloat"/>
      <field cname="ty" access="public" writeable="true" readable="true" name="Ty" type="gfloat"/>
      <field cname="color" access="public" writeable="true" readable="true" name="Color" type="CoglColor">
        <warning>missing glib:type-name</warning>
      </field>
    </struct>
    <struct name="UserDataKey" cname="CoglUserDataKey" opaque="false" hidden="false">
      <field cname="unused" access="public" writeable="true" readable="true" name="Unused" type="gint"/>
    </struct>
    <struct name="VertexP2" cname="CoglVertexP2" opaque="false" hidden="false">
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gfloat"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gfloat"/>
    </struct>
    <struct name="VertexP2C4" cname="CoglVertexP2C4" opaque="false" hidden="false">
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gfloat"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gfloat"/>
      <field cname="r" access="public" writeable="true" readable="true" name="R" type="guint8"/>
      <field cname="g" access="public" writeable="true" readable="true" name="G" type="guint8"/>
      <field cname="b" access="public" writeable="true" readable="true" name="B" type="guint8"/>
      <field cname="a" access="public" writeable="true" readable="true" name="A" type="guint8"/>
    </struct>
    <struct name="VertexP2T2" cname="CoglVertexP2T2" opaque="false" hidden="false">
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gfloat"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gfloat"/>
      <field cname="s" access="public" writeable="true" readable="true" name="S" type="gfloat"/>
      <field cname="t" access="public" writeable="true" readable="true" name="T" type="gfloat"/>
    </struct>
    <struct name="VertexP2T2C4" cname="CoglVertexP2T2C4" opaque="false" hidden="false">
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gfloat"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gfloat"/>
      <field cname="s" access="public" writeable="true" readable="true" name="S" type="gfloat"/>
      <field cname="t" access="public" writeable="true" readable="true" name="T" type="gfloat"/>
      <field cname="r" access="public" writeable="true" readable="true" name="R" type="guint8"/>
      <field cname="g" access="public" writeable="true" readable="true" name="G" type="guint8"/>
      <field cname="b" access="public" writeable="true" readable="true" name="B" type="guint8"/>
      <field cname="a" access="public" writeable="true" readable="true" name="A" type="guint8"/>
    </struct>
    <struct name="VertexP3" cname="CoglVertexP3" opaque="false" hidden="false">
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gfloat"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gfloat"/>
      <field cname="z" access="public" writeable="true" readable="true" name="Z" type="gfloat"/>
    </struct>
    <struct name="VertexP3C4" cname="CoglVertexP3C4" opaque="false" hidden="false">
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gfloat"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gfloat"/>
      <field cname="z" access="public" writeable="true" readable="true" name="Z" type="gfloat"/>
      <field cname="r" access="public" writeable="true" readable="true" name="R" type="guint8"/>
      <field cname="g" access="public" writeable="true" readable="true" name="G" type="guint8"/>
      <field cname="b" access="public" writeable="true" readable="true" name="B" type="guint8"/>
      <field cname="a" access="public" writeable="true" readable="true" name="A" type="guint8"/>
    </struct>
    <struct name="VertexP3T2" cname="CoglVertexP3T2" opaque="false" hidden="false">
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gfloat"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gfloat"/>
      <field cname="z" access="public" writeable="true" readable="true" name="Z" type="gfloat"/>
      <field cname="s" access="public" writeable="true" readable="true" name="S" type="gfloat"/>
      <field cname="t" access="public" writeable="true" readable="true" name="T" type="gfloat"/>
    </struct>
    <struct name="VertexP3T2C4" cname="CoglVertexP3T2C4" opaque="false" hidden="false">
      <field cname="x" access="public" writeable="true" readable="true" name="X" type="gfloat"/>
      <field cname="y" access="public" writeable="true" readable="true" name="Y" type="gfloat"/>
      <field cname="z" access="public" writeable="true" readable="true" name="Z" type="gfloat"/>
      <field cname="s" access="public" writeable="true" readable="true" name="S" type="gfloat"/>
      <field cname="t" access="public" writeable="true" readable="true" name="T" type="gfloat"/>
      <field cname="r" access="public" writeable="true" readable="true" name="R" type="guint8"/>
      <field cname="g" access="public" writeable="true" readable="true" name="G" type="guint8"/>
      <field cname="b" access="public" writeable="true" readable="true" name="B" type="guint8"/>
      <field cname="a" access="public" writeable="true" readable="true" name="A" type="guint8"/>
    </struct>
    <struct name="_ColorSizeCheck" cname="_CoglColorSizeCheck" opaque="false" hidden="false">
      <field cname="compile_time_assert_CoglColor_size" access="public" writeable="true" readable="true" name="CompileTimeAssertCoglColorSize" type="char" array="true" array_len="-1"/>
    </struct>
    <struct name="_EulerSizeCheck" cname="_CoglEulerSizeCheck" opaque="false" hidden="false">
      <field cname="compile_time_assert_CoglEuler_size" access="public" writeable="true" readable="true" name="CompileTimeAssertCoglEulerSize" type="char" array="true" array_len="-1"/>
    </struct>
    <struct name="_MatrixSizeCheck" cname="_CoglMatrixSizeCheck" opaque="false" hidden="false">
      <field cname="compile_time_assert_CoglMatrix_size" access="public" writeable="true" readable="true" name="CompileTimeAssertCoglMatrixSize" type="char" array="true" array_len="-1"/>
    </struct>
    <struct name="_QuaternionSizeCheck" cname="_CoglQuaternionSizeCheck" opaque="false" hidden="false">
      <field cname="compile_time_assert_CoglQuaternion_size" access="public" writeable="true" readable="true" name="CompileTimeAssertCoglQuaternionSize" type="char" array="true" array_len="-1"/>
    </struct>
    <struct name="_TextureVertexSizeCheck" cname="_CoglTextureVertexSizeCheck" opaque="false" hidden="false">
      <field cname="compile_time_assert_CoglTextureVertex_size" access="public" writeable="true" readable="true" name="CompileTimeAssertCoglTextureVertexSize" type="char" array="true" array_len="-1"/>
    </struct>
    <object name="Global" cname="CoglGlobal" opaque="true">
      <method name="BitmapErrorQuark" cname="cogl_bitmap_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="BlendStringErrorQuark" cname="cogl_blend_string_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="BufferGetSize" cname="cogl_buffer_get_size" shared="true">
        <return-type type="guint"/>
        <parameters>
          <parameter name="buffer" type="gpointer"/>
        </parameters>
      </method>
      <method name="BufferGetUpdateHint" cname="cogl_buffer_get_update_hint" shared="true">
        <return-type type="CoglBufferUpdateHint"/>
        <parameters>
          <parameter name="buffer" type="gpointer"/>
        </parameters>
      </method>
      <method name="BufferMap" cname="cogl_buffer_map" shared="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="buffer" type="gpointer"/>
          <parameter name="access" type="CoglBufferAccess"/>
          <parameter name="hints" type="CoglBufferMapHint"/>
        </parameters>
      </method>
      <method name="BufferMapRange" cname="cogl_buffer_map_range" shared="true">
        <return-type type="gpointer"/>
        <parameters throws="1">
          <parameter name="buffer" type="gpointer"/>
          <parameter name="offset" type="gulong"/>
          <parameter name="size" type="gulong"/>
          <parameter name="access" type="CoglBufferAccess"/>
          <parameter name="hints" type="CoglBufferMapHint"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="BufferSetData" cname="cogl_buffer_set_data" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="buffer" type="gpointer"/>
          <parameter name="offset" type="gulong"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="size" type="gulong"/>
        </parameters>
      </method>
      <method name="BufferSetUpdateHint" cname="cogl_buffer_set_update_hint" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="gpointer"/>
          <parameter name="hint" type="CoglBufferUpdateHint"/>
        </parameters>
      </method>
      <method name="BufferUnmap" cname="cogl_buffer_unmap" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="buffer" type="gpointer"/>
        </parameters>
      </method>
      <method name="ColorEqual" cname="cogl_color_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gpointer"/>
          <parameter name="v2" type="gpointer"/>
        </parameters>
      </method>
      <method name="ColorInitFromHsl" cname="cogl_color_init_from_hsl" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="CoglColor*" pass_as="out">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="hue" type="gfloat"/>
          <parameter name="saturation" type="gfloat"/>
          <parameter name="luminance" type="gfloat"/>
        </parameters>
      </method>
      <method name="DebugMatrixEntryPrint" cname="cogl_debug_matrix_entry_print" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="CoglMatrixEntry*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DebugMatrixPrint" cname="cogl_debug_matrix_print" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="matrix" type="CoglMatrix*">
            <warning>missing glib:type-name</warning>
          </parameter>
        </parameters>
      </method>
      <method name="DebugObjectForeachType" cname="cogl_debug_object_foreach_type" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter closure="1" scope="call" name="func" type="CoglDebugObjectForeachTypeCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="DebugObjectPrintInstances" cname="cogl_debug_object_print_instances" shared="true">
        <return-type type="void"/>
      </method>
      <method name="ErrorCopy" cname="cogl_error_copy" shared="true">
        <return-type type="GLib.Error*" owned="true"/>
        <parameters>
          <parameter name="error" type="GLib.Error"/>
        </parameters>
      </method>
      <method name="ErrorFree" cname="cogl_error_free" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="error" type="GLib.Error"/>
        </parameters>
      </method>
      <method name="ErrorMatches" cname="cogl_error_matches" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="error" type="GLib.Error"/>
          <parameter name="domain" type="guint32"/>
          <parameter name="code" type="gint"/>
        </parameters>
      </method>
      <method name="EulerEqual" cname="cogl_euler_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gpointer"/>
          <parameter name="v2" type="gpointer"/>
        </parameters>
      </method>
      <method name="ForeachFeature" cname="cogl_foreach_feature" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter closure="2" scope="call" name="callback" type="CoglFeatureCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="FramebufferErrorQuark" cname="cogl_framebuffer_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="GetClockTime" cname="cogl_get_clock_time" shared="true">
        <return-type type="gint64"/>
        <parameters>
          <parameter name="context" type="CoglContext*"/>
        </parameters>
      </method>
      <method name="GetDrawFramebuffer" cname="cogl_get_draw_framebuffer" shared="true">
        <return-type type="CoglFramebuffer*"/>
      </method>
      <method name="GetRectangleIndices" cname="cogl_get_rectangle_indices" shared="true">
        <return-type type="CoglIndices*"/>
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="n_rectangles" type="gint"/>
        </parameters>
      </method>
      <method name="GetStaticIdentityQuaternion" cname="cogl_get_static_identity_quaternion" shared="true">
        <return-type type="CoglQuaternion*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="GetStaticZeroQuaternion" cname="cogl_get_static_zero_quaternion" shared="true">
        <return-type type="CoglQuaternion*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Gles2GetCurrentVtable" cname="cogl_gles2_get_current_vtable" shared="true">
        <return-type type="CoglGLES2Vtable*">
          <warning>missing glib:type-name</warning>
        </return-type>
      </method>
      <method name="Gles2Texture2dNewFromHandle" cname="cogl_gles2_texture_2d_new_from_handle" shared="true">
        <return-type type="CoglTexture2D*"/>
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="gles2_ctx" type="CoglGLES2Context*"/>
          <parameter name="handle" type="guint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="format" type="CoglPixelFormat"/>
        </parameters>
      </method>
      <method name="Gles2TextureGetHandle" cname="cogl_gles2_texture_get_handle" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="texture" type="CoglTexture*"/>
          <parameter name="handle" type="guint"/>
          <parameter name="target" type="guint"/>
        </parameters>
      </method>
      <method name="GlibRendererSourceNew" cname="cogl_glib_renderer_source_new" shared="true">
        <return-type type="GLib.Source*" owned="true"/>
        <parameters>
          <parameter name="renderer" type="CoglRenderer*"/>
          <parameter name="priority" type="gint"/>
        </parameters>
      </method>
      <method name="GlibSourceNew" cname="cogl_glib_source_new" shared="true">
        <return-type type="GLib.Source*" owned="true"/>
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="priority" type="gint"/>
        </parameters>
      </method>
      <method name="GlxContextGetGlxContext" cname="cogl_glx_context_get_glx_context" shared="true">
        <return-type type="GLXContext"/>
        <parameters>
          <parameter name="context" type="CoglContext*"/>
        </parameters>
      </method>
      <method name="GtypeMatrixGetType" cname="cogl_gtype_matrix_get_type" shared="true" deprecated="true">
        <return-type type="GType"/>
      </method>
      <method name="HandleGetType" cname="cogl_handle_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="HandleRef" cname="cogl_handle_ref" shared="true">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="HandleUnref" cname="cogl_handle_unref" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="gpointer"/>
        </parameters>
      </method>
      <method name="HasFeature" cname="cogl_has_feature" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="feature" type="CoglFeatureID"/>
        </parameters>
      </method>
      <method name="HasFeatures" cname="cogl_has_features" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="..." type="va_list"/>
        </parameters>
      </method>
      <method name="IsAtlasTexture" cname="cogl_is_atlas_texture" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsAttribute" cname="cogl_is_attribute" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsAttributeBuffer" cname="cogl_is_attribute_buffer" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsBitmap" cname="cogl_is_bitmap" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsBuffer" cname="cogl_is_buffer" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsContext" cname="cogl_is_context" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsDisplay" cname="cogl_is_display" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsFrameInfo" cname="cogl_is_frame_info" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsFramebuffer" cname="cogl_is_framebuffer" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsGles2Context" cname="cogl_is_gles2_context" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsIndexBuffer" cname="cogl_is_index_buffer" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsIndices" cname="cogl_is_indices" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsMatrixStack" cname="cogl_is_matrix_stack" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsOnscreen" cname="cogl_is_onscreen" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsOnscreenTemplate" cname="cogl_is_onscreen_template" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsOutput" cname="cogl_is_output" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsPipeline" cname="cogl_is_pipeline" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsPixelBuffer" cname="cogl_is_pixel_buffer" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsPrimitive" cname="cogl_is_primitive" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsPrimitiveTexture" cname="cogl_is_primitive_texture" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsRenderer" cname="cogl_is_renderer" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsSnippet" cname="cogl_is_snippet" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsSubTexture" cname="cogl_is_sub_texture" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsSwapChain" cname="cogl_is_swap_chain" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsTexture" cname="cogl_is_texture" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsTexture2d" cname="cogl_is_texture_2d" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsTexture2dSliced" cname="cogl_is_texture_2d_sliced" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsTexture3d" cname="cogl_is_texture_3d" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsTexturePixmapX11" cname="cogl_is_texture_pixmap_x11" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="IsTextureRectangle" cname="cogl_is_texture_rectangle" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="_object" type="gpointer"/>
        </parameters>
      </method>
      <method name="MatrixEqual" cname="cogl_matrix_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gpointer"/>
          <parameter name="v2" type="gpointer"/>
        </parameters>
      </method>
      <method name="MetaTextureForeachInRegion" cname="cogl_meta_texture_foreach_in_region" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="meta_texture" type="gpointer"/>
          <parameter name="tx_1" type="gfloat"/>
          <parameter name="ty_1" type="gfloat"/>
          <parameter name="tx_2" type="gfloat"/>
          <parameter name="ty_2" type="gfloat"/>
          <parameter name="wrap_s" type="CoglPipelineWrapMode"/>
          <parameter name="wrap_t" type="CoglPipelineWrapMode"/>
          <parameter closure="8" name="callback" type="CoglMetaTextureCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="PollRendererDispatch" cname="cogl_poll_renderer_dispatch" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="CoglRenderer*"/>
          <parameter name="poll_fds" type="CoglPollFD*">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="n_poll_fds" type="gint"/>
        </parameters>
      </method>
      <method name="PollRendererGetInfo" cname="cogl_poll_renderer_get_info" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="renderer" type="CoglRenderer*"/>
          <parameter name="poll_fds" type="CoglPollFD**">
            <warning>missing glib:type-name</warning>
          </parameter>
          <parameter name="n_poll_fds" type="gint"/>
          <parameter name="timeout" type="gint64"/>
        </parameters>
      </method>
      <method name="PopGles2Context" cname="cogl_pop_gles2_context" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="ctx" type="CoglContext*"/>
        </parameters>
      </method>
      <method name="PushGles2Context" cname="cogl_push_gles2_context" shared="true">
        <return-type type="gboolean"/>
        <parameters throws="1">
          <parameter name="ctx" type="CoglContext*"/>
          <parameter name="gles2_ctx" type="CoglGLES2Context*"/>
          <parameter name="read_buffer" type="CoglFramebuffer*"/>
          <parameter name="write_buffer" type="CoglFramebuffer*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="QuaternionEqual" cname="cogl_quaternion_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gpointer"/>
          <parameter name="v2" type="gpointer"/>
        </parameters>
      </method>
      <method name="RendererErrorQuark" cname="cogl_renderer_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="SdlContextNew" cname="cogl_sdl_context_new" shared="true">
        <return-type type="CoglContext*"/>
        <parameters throws="1">
          <parameter name="type" type="gint"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="SdlHandleEvent" cname="cogl_sdl_handle_event" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="CoglContext*"/>
          <parameter name="event" type="SDL_Event*"/>
        </parameters>
      </method>
      <method name="SdlIdle" cname="cogl_sdl_idle" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="context" type="CoglContext*"/>
        </parameters>
      </method>
      <method name="SdlRendererGetEventType" cname="cogl_sdl_renderer_get_event_type" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter name="renderer" type="CoglRenderer*"/>
        </parameters>
      </method>
      <method name="SdlRendererSetEventType" cname="cogl_sdl_renderer_set_event_type" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="renderer" type="CoglRenderer*"/>
          <parameter name="type" type="gint"/>
        </parameters>
      </method>
      <method name="TextureErrorQuark" cname="cogl_texture_error_quark" shared="true">
        <return-type type="guint32"/>
      </method>
      <method name="Vector3Add" cname="cogl_vector3_add" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="_result" type="gfloat"/>
          <parameter name="a" type="gfloat"/>
          <parameter name="b" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3Copy" cname="cogl_vector3_copy" shared="true">
        <return-type type="gfloat"/>
        <parameters>
          <parameter name="vector" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3CrossProduct" cname="cogl_vector3_cross_product" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="_result" type="gfloat"/>
          <parameter name="u" type="gfloat"/>
          <parameter name="v" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3Distance" cname="cogl_vector3_distance" shared="true">
        <return-type type="gfloat"/>
        <parameters>
          <parameter name="a" type="gfloat"/>
          <parameter name="b" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3DivideScalar" cname="cogl_vector3_divide_scalar" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="vector" type="gfloat"/>
          <parameter name="scalar" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3DotProduct" cname="cogl_vector3_dot_product" shared="true">
        <return-type type="gfloat"/>
        <parameters>
          <parameter name="a" type="gfloat"/>
          <parameter name="b" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3Equal" cname="cogl_vector3_equal" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="v1" type="gpointer"/>
          <parameter name="v2" type="gpointer"/>
        </parameters>
      </method>
      <method name="Vector3EqualWithEpsilon" cname="cogl_vector3_equal_with_epsilon" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="vector0" type="gfloat"/>
          <parameter name="vector1" type="gfloat"/>
          <parameter name="epsilon" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3Free" cname="cogl_vector3_free" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="vector" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3Init" cname="cogl_vector3_init" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="vector" type="gfloat"/>
          <parameter name="x" type="gfloat"/>
          <parameter name="y" type="gfloat"/>
          <parameter name="z" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3InitZero" cname="cogl_vector3_init_zero" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="vector" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3Invert" cname="cogl_vector3_invert" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="vector" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3Magnitude" cname="cogl_vector3_magnitude" shared="true">
        <return-type type="gfloat"/>
        <parameters>
          <parameter name="vector" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3MultiplyScalar" cname="cogl_vector3_multiply_scalar" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="vector" type="gfloat"/>
          <parameter name="scalar" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3Normalize" cname="cogl_vector3_normalize" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="vector" type="gfloat"/>
        </parameters>
      </method>
      <method name="Vector3Subtract" cname="cogl_vector3_subtract" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="_result" type="gfloat"/>
          <parameter name="a" type="gfloat"/>
          <parameter name="b" type="gfloat"/>
        </parameters>
      </method>
      <method name="X11OnscreenGetVisualXid" cname="cogl_x11_onscreen_get_visual_xid" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="onscreen" type="CoglOnscreen*"/>
        </parameters>
      </method>
      <method name="X11OnscreenGetWindowXid" cname="cogl_x11_onscreen_get_window_xid" shared="true">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="onscreen" type="CoglOnscreen*"/>
        </parameters>
      </method>
      <method name="X11OnscreenSetForeignWindowXid" cname="cogl_x11_onscreen_set_foreign_window_xid" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="onscreen" type="CoglOnscreen*"/>
          <parameter name="xid" type="guint32"/>
          <parameter closure="3" name="update" type="CoglOnscreenX11MaskCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="XlibGetDisplay" cname="cogl_xlib_get_display" shared="true">
        <return-type type="Display*"/>
      </method>
      <method name="XlibHandleEvent" cname="cogl_xlib_handle_event" shared="true">
        <return-type type="CoglFilterReturn"/>
        <parameters>
          <parameter name="xevent" type="XEvent*"/>
        </parameters>
      </method>
      <method name="XlibSetDisplay" cname="cogl_xlib_set_display" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter name="display" type="Display*"/>
        </parameters>
      </method>
    </object>
    <object name="Constants" cname="CoglConstants" opaque="true">
      <constant value="64" ctype="gint" gtype="gint" name="AFIRST_BIT"/>
      <constant value="16" ctype="gint" gtype="gint" name="A_BIT"/>
      <constant value="32" ctype="gint" gtype="gint" name="BGR_BIT"/>
      <constant value="256" ctype="gint" gtype="gint" name="DEPTH_BIT"/>
      <constant value="128" ctype="gint" gtype="gint" name="PREMULT_BIT"/>
      <constant value="512" ctype="gint" gtype="gint" name="STENCIL_BIT"/>
      <constant value="127" ctype="gint" gtype="gint" name="TEXTURE_MAX_WASTE"/>
      <constant value="10" ctype="gint" gtype="gint" name="VERSION_COMPONENT_BITS"/>
      <constant value="0" ctype="gint" gtype="gint" name="VERSION_MAX_COMPONENT_VALUE"/>
    </object>
  </namespace>
</api>
